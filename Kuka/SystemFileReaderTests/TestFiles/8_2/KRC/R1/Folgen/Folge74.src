&ACCESS RVP1
&REL 120
&COMMENT VW380
&PARAM DISKPATH = KRC:\R1\Folgen
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM EDITMASK = Folge999[1-999]
&PARAM TPVW_VERSION = 8.1.8
DEF FOLGE74()
   ; FOLD ;%{H} %MKUKATPVW
   SPS_N=-1
   VW (#VW_AUE_INIT,TRUE)
   PENTER:
   INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
   INTERRUPT ON 10
   INT10=TRUE
   ; ENDFOLD
   ;FOLD PTP VB=10% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:10, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:0, 20:-1, 21:1
      ;FOLD 1: A15 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A15 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 2: SPSMAKRO0 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO0 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD {H}
         SPS_FERTIG=FALSE
         INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
         INTERRUPT ON 10
         INT10=TRUE
         VW(#VW_INIT,TRUE)
         VW_USR_R (#USR_INIT)
         TRIGGER  WHEN DISTANCE=1 DELAY=-0.1 DO P0_MERKER=TRUE
         VW_MPARA_ACT=P0_D
         Act_P1 = P0
         Act_P2 = P0
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(1) PRIO=-1
         PTP P0
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD Warte auf Folgenstart ;%{SE}%MKUKATPVW,%C,%V
      VW (#VW_AUE_WAIT,TRUE )
      IF N_VW==TRUE THEN
         GOTO PEXIT
      ENDIF
   ;ENDFOLD
   ;FOLD -- K2TUHR115425R01 Arbeitsfolge VW380 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:K2TUHR115425R01 Arbeitsfolge VW380
      ;FOLD {H}
         M_COMMENT("K2TUHR115425R01 Arbeitsfolge VW380")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP84 VW379 abdocken VW380 andocken -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP84 VW379 abdocken VW380 andocken
      ;FOLD {H}
         M_COMMENT("UP84 VW379 abdocken VW380 andocken")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=0[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: PU, 19:1, 20:-1, 21:2
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: SPSMAKRO50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO50 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 4: t1 ( EIN ) = 0[1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VTASG %P 2:t1 ( EIN ) = 0[1/10Sek],3:TASG
      ;ENDFOLD
      ;FOLD 5: A42 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A42 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: A43 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A43 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 7: A44 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A44 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 8: A45 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A45 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: A47 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A47 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 10: A49 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A49 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 11: A50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A50 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: A52 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A52 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 13: A54 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A54 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 14: A75 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A75 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 15: A76 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 16: A79 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A79 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 17: A80 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A80 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 18: A15 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A15 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 19: F930 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F930 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 20: WARTE BIS (M77 & !M78) + (!M77 & M78) ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS (M77 & !M78) + (!M77 & M78),3:WBOASG
      ;ENDFOLD
      ;FOLD 21: F930 = M77 & !M78 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F930 = M77 & !M78,3:BOASG
      ;ENDFOLD
      ;FOLD 22: WARTE BIS F930 + (!M77 & M78) ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS F930 + (!M77 & M78),3:WBOASG
      ;ENDFOLD
      ;FOLD 23: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 24: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 25: FB PSPS = M30 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP84 = F930 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP84 = F930 & AUS,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P1_D
         Act_P1 = P1
         Act_P2 = P1
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(2) PRIO=-1
         PTP P1
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,84,$FLAG[930] AND FALSE)
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP21 Bauteil Entnahme AFO 115410 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP21 Bauteil Entnahme AFO 115410
      ;FOLD {H}
         M_COMMENT("UP21 Bauteil Entnahme AFO 115410")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:2, 20:-1, 21:3
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: SPSMAKRO50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO50 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO53 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO53 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: A1521 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1521 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: A1522 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1522 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 7: A1523 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1523 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 8: WARTE BIS E1521 & !E1522 & !E1523 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E1521 & !E1522 & !E1523,3:WBOASG
      ;ENDFOLD
      ;FOLD 9: bin10 ( EIN ) = 20 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:bin10 ( EIN ) = 20,3:ARIASG
      ;ENDFOLD
      ;FOLD 10: bin11 ( EIN ) = 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:bin11 ( EIN ) = 1,3:ARIASG
      ;ENDFOLD
      ;FOLD 11: WARTE ( EIN ) ZEIT 1 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VWTASG %P 2:WARTE ( EIN ) ZEIT 1 [1/10Sek],3:WTASG
      ;ENDFOLD
      ;FOLD 12: SPSMAKRO182 = (E1534 + E163) & !E15 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO182 = (E1534 + E163) & !E15,3:MAKRO
      ;ENDFOLD
      ;FOLD 13: WARTE BIS M78 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M78,3:WBOASG
      ;ENDFOLD
      ;FOLD 14: F1 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F1 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 15: F2 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F2 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 16: SPSMAKRO342 = M13 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO342 = M13,3:MAKRO
      ;ENDFOLD
      ;FOLD 17: SPSMAKRO340 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 18: WARTE BIS M13 & M31 & M33 & E57 & !E58 & E80 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M13 & M31 & M33 & E57 & !E58 & E80,3:WBOASG
      ;ENDFOLD
      ;FOLD 19: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 20: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 21: FB PSPS = M13 & M30 & M31 & M33 & M78 & E57 & E80 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M33 & M78 & E57 & E80,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP21 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP21 = EIN,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P2_D
         Act_P1 = P2
         Act_P2 = P2
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(3) PRIO=-1
         PTP P2
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,21,TRUE)
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP22 Praegen mit Oelabstreifer -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP22 Praegen mit Oelabstreifer
      ;FOLD {H}
         M_COMMENT("UP22 Praegen mit Oelabstreifer")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:3, 20:-1, 21:4
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO2 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO2 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: FB PSPS = M1 & M30 & M32 & M33 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M78,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP22 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP22 = AUS,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P3_D
         Act_P1 = P3
         Act_P2 = P3
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(4) PRIO=-1
         PTP P3
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,22,FALSE)
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD Label 3 ;%{PSE}%MKUKATPVW,%CCONTROL,%VLABEL,%P 1:Label, 2:Label 3
      ;FOLD  ;%{H}
         Label3:
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP23 Bauteil Kleben Rob 5425R01 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP23 Bauteil Kleben Rob 5425R01
      ;FOLD {H}
         M_COMMENT("UP23 Bauteil Kleben Rob 5425R01")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP72 Bauteil Zeigen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP72 Bauteil Zeigen
      ;FOLD {H}
         M_COMMENT("UP72 Bauteil Zeigen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:4, 20:-1, 21:5
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 4: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 5: FB PSPS = M1 & M30 & M32 & M33 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M78,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP23 = EIN,3:UP
      ;ENDFOLD
      ;FOLD UP72 = E162 + E77 + F343 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP72 = E162 + E77 + F343,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P4_D
         Act_P1 = P4
         Act_P2 = P4
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(5) PRIO=-1
         PTP P4
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,23,TRUE)
         SEL_RES=SELECT(#UP,72,$IN[162] OR $IN[77] OR $FLAG[343])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD GOTO Label 3 = F343 ;%{PSE}%MKUKATPVW,%CCONTROL,%VJUMP,%P 1:GOTO Label, 2:3, 3:=, 4:6, 5:343
      ;FOLD  ;%{H}
         CONTINUE
         IF $FLAG[343] THEN
            CONTINUE
            GOTO Label3
         ENDIF
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP26 Ausschleusen/Kleben n.i.O. -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP26 Ausschleusen/Kleben n.i.O.
      ;FOLD {H}
         M_COMMENT("UP26 Ausschleusen/Kleben n.i.O.")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:5, 20:-1, 21:6
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 4: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 5: FB PSPS = M1 & M30 & M32 & M33 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M78,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP26 = F345 & !E15 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP26 = F345 & !E15,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P5_D
         Act_P1 = P5
         Act_P2 = P5
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(6) PRIO=-1
         PTP P5
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,26,$FLAG[345] AND NOT $IN[15])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Wartungsbereich -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Wartungsbereich
      ;FOLD {H}
         M_COMMENT("Wartungsbereich")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP24 Bauteil ablegen AFO 115440 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP24 Bauteil ablegen AFO 115440
      ;FOLD {H}
         M_COMMENT("UP24 Bauteil ablegen AFO 115440")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:6, 20:-1, 21:7
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: -- Wartungsbereich -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Wartungsbereich --,3:VW_COMMENT
      ;ENDFOLD
      ;FOLD 4: F931 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F931 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 5: SPSLabel 1 ;%{SE}%MKUKATPVW %CCONTROL %VLABEL %P 2:SPSLabel 1,3:LABEL
      ;ENDFOLD
      ;FOLD 6: A18 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A18 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 7: WARTE BIS (M1 & !E59 & E60 & !E18) + !A235 + E19 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS (M1 & !E59 & E60 & !E18) + !A235 + E19,3:WBOASG
      ;ENDFOLD
      ;FOLD 8: F931 = M1 & !E59 & E60 & !E18 + M13 & M31 + E15 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F931 = M1 & !E59 & E60 & !E18 + M13 & M31 + E15,3:BOASG
      ;ENDFOLD
      ;FOLD 9: WARTE BIS F931 + E19 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS F931 + E19,3:WBOASG
      ;ENDFOLD
      ;FOLD 10: GOTO SPSLabel 3 = E19 ;%{SE}%MKUKATPVW %CCONTROL %VJUMP %P 2:GOTO SPSLabel 3 = E19,3:JUMP
      ;ENDFOLD
      ;FOLD 11: GOTO SPSLabel 2 = F931 ;%{SE}%MKUKATPVW %CCONTROL %VJUMP %P 2:GOTO SPSLabel 2 = F931,3:JUMP
      ;ENDFOLD
      ;FOLD 12: SPSLabel 3 ;%{SE}%MKUKATPVW %CCONTROL %VLABEL %P 2:SPSLabel 3,3:LABEL
      ;ENDFOLD
      ;FOLD 13: A17 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A17 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 14: WARTE BIS E17 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E17,3:WBOASG
      ;ENDFOLD
      ;FOLD 15: A17 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A17 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 16: WARTE BIS !E19 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS !E19,3:WBOASG
      ;ENDFOLD
      ;FOLD 17: GOTO SPSLabel 1 = EIN ;%{SE}%MKUKATPVW %CCONTROL %VJUMP %P 2:GOTO SPSLabel 1 = EIN,3:JUMP
      ;ENDFOLD
      ;FOLD 18: SPSLabel 2 ;%{SE}%MKUKATPVW %CCONTROL %VLABEL %P 2:SPSLabel 2,3:LABEL
      ;ENDFOLD
      ;FOLD 19: A18 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A18 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 20: WARTE BIS M1 & !E59 & E60 + M13 & M31 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M1 & !E59 & E60 + M13 & M31,3:WBOASG
      ;ENDFOLD
      ;FOLD 21: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 22: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 23: FB PSPS = M30 & M78 & (M1 & M32 + M13 & M31 & M34) ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30 & M78 & (M1 & M32 + M13 & M31 & M34),3:FBPSPS
      ;ENDFOLD
      ;FOLD UP24 = M1 + !M13 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP24 = M1 + !M13,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P6_D
         Act_P1 = P6
         Act_P2 = P6
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(7) PRIO=-1
         PTP P6
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,24,$CYCFLAG[1] OR NOT $CYCFLAG[13])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: P, 19:7, 20:-1, 21:8
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: SPSMAKRO15 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO15 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 4: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 5: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: FB PSPS = M13 & M30 & M31 & M34 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & M78,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P7_D
         Act_P1 = P7
         Act_P2 = P7
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(8) PRIO=-1
         PTP P7
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:8, 20:-1, 21:9
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: t1 ( EIN) = STOP ;%{SE}%MKUKATPVW %CVW_SPS %VTSTOP %P 2:t1 ( EIN) = STOP,3:TSTOP
      ;ENDFOLD
      ;FOLD 3: t2 ( EIN ) = t1 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VTASG %P 2:t2 ( EIN ) = t1 [1/10Sek],3:TASG
      ;ENDFOLD
      ;FOLD 4: t2 ( EIN) = STOP ;%{SE}%MKUKATPVW %CVW_SPS %VTSTOP %P 2:t2 ( EIN) = STOP,3:TSTOP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P8_D
         Act_P1 = P8
         Act_P2 = P8
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(9) PRIO=-1
         PTP P8
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
   VW (#VW_AUE_END,TRUE)
   GOTO PENTER
   PEXIT:
END
DEF SPS_TRIG(NO :IN)
   INT NO
   INT VW_STOP
   BOOL UES
   VW_STOP=$VW_PSPS_STOP
   IF NO>10000 THEN
      NO=NO-10000
      UES=TRUE
   ELSE
      UES=FALSE
   ENDIF
   ; FOLD ;%{H}
   IF ((VW_STOP B_AND 'B0001') > 0) THEN
      ;-- Trigger vorzeitig geschaltet (delay < 0) oder MStep
      IF (((VW_STOP B_AND 'B0110') > 0) AND ($MODE_OP<>#EX)) THEN
         ;-- MStep oder BCO Bewegung
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (SEARCH_END) THEN
      SEARCH_END = FALSE
      INTERRUPT OFF 39
   ENDIF
   SWITCH NO
      CASE 1
         ;FOLD SPS_TRIG1{H}
            $OUT[15] = TRUE
            SEL_RES=SELECT(#MAKRO,0,TRUE,,,,,FALSE)
         ;ENDFOLD
      CASE 2
         ;FOLD SPS_TRIG2{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            SEL_RES=SELECT(#MAKRO,50,TRUE,,,,,FALSE)
            VW(#SET_TIME,TRUE,1,0,0)
            $OUT[42] = TRUE
            $OUT[43] = TRUE
            $OUT[44] = TRUE
            $OUT[45] = TRUE
            $OUT[47] = TRUE
            $OUT[49] = TRUE
            $OUT[50] = TRUE
            $OUT[52] = TRUE
            $OUT[54] = TRUE
            $OUT[75] = TRUE
            $OUT[76] = TRUE
            $OUT[79] = TRUE
            $OUT[80] = TRUE
            $OUT[15] = FALSE
            $FLAG[930] = FALSE
            $LOOP_MSG[]="(M77 & !M78) + (!M77 & M78)"
            $LOOP_CONT=TRUE
            WAIT FOR (($CYCFLAG[77] AND NOT $CYCFLAG[78]) OR (NOT $CYCFLAG[77] AND $CYCFLAG[78])) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[930] = $CYCFLAG[77] AND NOT $CYCFLAG[78]
            $LOOP_MSG[]="F930 + (!M77 & M78)"
            $LOOP_CONT=TRUE
            WAIT FOR ($FLAG[930] OR (NOT $CYCFLAG[77] AND $CYCFLAG[78])) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 3
         ;FOLD SPS_TRIG3{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            SEL_RES=SELECT(#MAKRO,50,TRUE,,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,53,TRUE,,,,,FALSE)
            $OUT[1521] = TRUE
            $OUT[1522] = FALSE
            $OUT[1523] = FALSE
            $LOOP_MSG[]="E1521 & !E1522 & !E1523"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[1521] AND NOT $IN[1522] AND NOT $IN[1523]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            VW(#BINOUT,TRUE,10,20)
            VW(#BINOUT,TRUE,11,1)
            $LOOP_MSG[]="Wartezeit..."
            $LOOP_CONT=TRUE
            WAIT FOR (FALSE OR TIMER_LIMIT ((1)*0.1) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX)))
            $LOOP_MSG[]="                                                                                                                                "
            SEL_RES=SELECT(#MAKRO,182,($IN[1534] OR $IN[163]) AND NOT $IN[15],,,,,FALSE)
            $LOOP_MSG[]="M78"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[78]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[1] = TRUE
            $FLAG[2] = TRUE
            SEL_RES=SELECT(#MAKRO,342,$CYCFLAG[13],,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,TRUE,,,,,FALSE)
            $LOOP_MSG[]="M13 & M31 & M33 & E57 & !E58 & E80"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[13] AND $CYCFLAG[31] AND $CYCFLAG[33] AND $IN[57] AND NOT $IN[58] AND $IN[80]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[33] AND $CYCFLAG[78] AND $IN[57] AND $IN[80]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 4
         ;FOLD SPS_TRIG4{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            SEL_RES=SELECT(#MAKRO,2,TRUE,,,,,FALSE)
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[78]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 5
         ;FOLD SPS_TRIG5{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[78]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 6
         ;FOLD SPS_TRIG6{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[78]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 7
         ;FOLD SPS_TRIG7{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $FLAG[931] = FALSE
            SPSLabel1_C7:
            $OUT[18] = TRUE
            $LOOP_MSG[]="(M1 & !E59 & E60 & !E18) + !A235 + E19"
            $LOOP_CONT=TRUE
            WAIT FOR (($CYCFLAG[1] AND NOT $IN[59] AND $IN[60] AND NOT $IN[18]) OR NOT $OUT[235] OR $IN[19]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[931] = $CYCFLAG[1] AND NOT $IN[59] AND $IN[60] AND NOT $IN[18] OR $CYCFLAG[13] AND $CYCFLAG[31] OR $IN[15]
            $LOOP_MSG[]="F931 + E19"
            $LOOP_CONT=TRUE
            WAIT FOR ($FLAG[931] OR $IN[19]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            IF $IN[19] THEN
               GOTO SPSLabel3_C7
            ENDIF
            IF $FLAG[931] THEN
               GOTO SPSLabel2_C7
            ENDIF
            SPSLabel3_C7:
            $OUT[17] = TRUE
            $LOOP_MSG[]="E17"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[17]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[17] = FALSE
            $LOOP_MSG[]="!E19"
            $LOOP_CONT=TRUE
            WAIT FOR (NOT $IN[19]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            IF TRUE THEN
               GOTO SPSLabel1_C7
            ENDIF
            SPSLabel2_C7:
            $OUT[18] = FALSE
            $LOOP_MSG[]="M1 & !E59 & E60 + M13 & M31"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[1] AND NOT $IN[59] AND $IN[60] OR $CYCFLAG[13] AND $CYCFLAG[31]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30] AND $CYCFLAG[78] AND ($CYCFLAG[1] AND $CYCFLAG[32] OR $CYCFLAG[13] AND $CYCFLAG[31] AND $CYCFLAG[34])) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 8
         ;FOLD SPS_TRIG8{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            SEL_RES=SELECT(#MAKRO,15,TRUE,,,,,FALSE)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $CYCFLAG[78]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 9
         ;FOLD SPS_TRIG9{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            VW(#SET_TIME,TRUE,1,1,0)
            VW(#SET_TIME,TRUE,2,0,$TIMER[1]*0.01)
            VW(#SET_TIME,TRUE,2,1,0)
         ;ENDFOLD
      CASE 10
         ;FOLD SPS_TRIG10{H}
         ;ENDFOLD
      CASE 11
         ;FOLD SPS_TRIG11{H}
         ;ENDFOLD
      CASE 12
         ;FOLD SPS_TRIG12{H}
         ;ENDFOLD
      CASE 13
         ;FOLD SPS_TRIG13{H}
         ;ENDFOLD
      CASE 14
         ;FOLD SPS_TRIG14{H}
         ;ENDFOLD
      CASE 15
         ;FOLD SPS_TRIG15{H}
         ;ENDFOLD
      CASE 16
         ;FOLD SPS_TRIG16{H}
         ;ENDFOLD
      CASE 17
         ;FOLD SPS_TRIG17{H}
         ;ENDFOLD
      CASE 18
         ;FOLD SPS_TRIG18{H}
         ;ENDFOLD
      CASE 19
         ;FOLD SPS_TRIG19{H}
         ;ENDFOLD
      CASE 20
         ;FOLD SPS_TRIG20{H}
         ;ENDFOLD
      CASE 21
         ;FOLD SPS_TRIG21{H}
         ;ENDFOLD
      CASE 22
         ;FOLD SPS_TRIG22{H}
         ;ENDFOLD
      CASE 23
         ;FOLD SPS_TRIG23{H}
         ;ENDFOLD
      CASE 24
         ;FOLD SPS_TRIG24{H}
         ;ENDFOLD
      CASE 25
         ;FOLD SPS_TRIG25{H}
         ;ENDFOLD
      CASE 26
         ;FOLD SPS_TRIG26{H}
         ;ENDFOLD
      CASE 27
         ;FOLD SPS_TRIG27{H}
         ;ENDFOLD
      CASE 28
         ;FOLD SPS_TRIG28{H}
         ;ENDFOLD
      CASE 29
         ;FOLD SPS_TRIG29{H}
         ;ENDFOLD
      CASE 30
         ;FOLD SPS_TRIG30{H}
         ;ENDFOLD
      CASE 31
         ;FOLD SPS_TRIG31{H}
         ;ENDFOLD
      CASE 32
         ;FOLD SPS_TRIG32{H}
         ;ENDFOLD
      CASE 33
         ;FOLD SPS_TRIG33{H}
         ;ENDFOLD
      CASE 34
         ;FOLD SPS_TRIG34{H}
         ;ENDFOLD
      CASE 35
         ;FOLD SPS_TRIG35{H}
         ;ENDFOLD
      CASE 36
         ;FOLD SPS_TRIG36{H}
         ;ENDFOLD
      CASE 37
         ;FOLD SPS_TRIG37{H}
         ;ENDFOLD
      CASE 38
         ;FOLD SPS_TRIG38{H}
         ;ENDFOLD
      CASE 39
         ;FOLD SPS_TRIG39{H}
         ;ENDFOLD
      CASE 40
         ;FOLD SPS_TRIG40{H}
         ;ENDFOLD
      CASE 41
         ;FOLD SPS_TRIG41{H}
         ;ENDFOLD
      CASE 42
         ;FOLD SPS_TRIG42{H}
         ;ENDFOLD
      CASE 43
         ;FOLD SPS_TRIG43{H}
         ;ENDFOLD
      CASE 44
         ;FOLD SPS_TRIG44{H}
         ;ENDFOLD
      CASE 45
         ;FOLD SPS_TRIG45{H}
         ;ENDFOLD
      CASE 46
         ;FOLD SPS_TRIG46{H}
         ;ENDFOLD
      CASE 47
         ;FOLD SPS_TRIG47{H}
         ;ENDFOLD
      CASE 48
         ;FOLD SPS_TRIG48{H}
         ;ENDFOLD
      CASE 49
         ;FOLD SPS_TRIG49{H}
         ;ENDFOLD
      CASE 50
         ;FOLD SPS_TRIG50{H}
         ;ENDFOLD
      CASE 51
         ;FOLD SPS_TRIG51{H}
         ;ENDFOLD
      CASE 52
         ;FOLD SPS_TRIG52{H}
         ;ENDFOLD
      CASE 53
         ;FOLD SPS_TRIG53{H}
         ;ENDFOLD
      CASE 54
         ;FOLD SPS_TRIG54{H}
         ;ENDFOLD
      CASE 55
         ;FOLD SPS_TRIG55{H}
         ;ENDFOLD
      CASE 56
         ;FOLD SPS_TRIG56{H}
         ;ENDFOLD
      CASE 57
         ;FOLD SPS_TRIG57{H}
         ;ENDFOLD
      CASE 58
         ;FOLD SPS_TRIG58{H}
         ;ENDFOLD
      CASE 59
         ;FOLD SPS_TRIG59{H}
         ;ENDFOLD
      CASE 60
         ;FOLD SPS_TRIG60{H}
         ;ENDFOLD
      CASE 61
         ;FOLD SPS_TRIG61{H}
         ;ENDFOLD
      CASE 62
         ;FOLD SPS_TRIG62{H}
         ;ENDFOLD
      CASE 63
         ;FOLD SPS_TRIG63{H}
         ;ENDFOLD
      CASE 64
         ;FOLD SPS_TRIG64{H}
         ;ENDFOLD
      CASE 65
         ;FOLD SPS_TRIG65{H}
         ;ENDFOLD
      CASE 66
         ;FOLD SPS_TRIG66{H}
         ;ENDFOLD
      CASE 67
         ;FOLD SPS_TRIG67{H}
         ;ENDFOLD
      CASE 68
         ;FOLD SPS_TRIG68{H}
         ;ENDFOLD
      CASE 69
         ;FOLD SPS_TRIG69{H}
         ;ENDFOLD
      CASE 70
         ;FOLD SPS_TRIG70{H}
         ;ENDFOLD
      CASE 71
         ;FOLD SPS_TRIG71{H}
         ;ENDFOLD
      CASE 72
         ;FOLD SPS_TRIG72{H}
         ;ENDFOLD
      CASE 73
         ;FOLD SPS_TRIG73{H}
         ;ENDFOLD
      CASE 74
         ;FOLD SPS_TRIG74{H}
         ;ENDFOLD
      CASE 75
         ;FOLD SPS_TRIG75{H}
         ;ENDFOLD
      CASE 76
         ;FOLD SPS_TRIG76{H}
         ;ENDFOLD
      CASE 77
         ;FOLD SPS_TRIG77{H}
         ;ENDFOLD
      CASE 78
         ;FOLD SPS_TRIG78{H}
         ;ENDFOLD
      CASE 79
         ;FOLD SPS_TRIG79{H}
         ;ENDFOLD
      CASE 80
         ;FOLD SPS_TRIG80{H}
         ;ENDFOLD
      CASE 81
         ;FOLD SPS_TRIG81{H}
         ;ENDFOLD
      CASE 82
         ;FOLD SPS_TRIG82{H}
         ;ENDFOLD
      CASE 83
         ;FOLD SPS_TRIG83{H}
         ;ENDFOLD
      CASE 84
         ;FOLD SPS_TRIG84{H}
         ;ENDFOLD
      CASE 85
         ;FOLD SPS_TRIG85{H}
         ;ENDFOLD
      CASE 86
         ;FOLD SPS_TRIG86{H}
         ;ENDFOLD
      CASE 87
         ;FOLD SPS_TRIG87{H}
         ;ENDFOLD
      CASE 88
         ;FOLD SPS_TRIG88{H}
         ;ENDFOLD
      CASE 89
         ;FOLD SPS_TRIG89{H}
         ;ENDFOLD
      CASE 90
         ;FOLD SPS_TRIG90{H}
         ;ENDFOLD
      CASE 91
         ;FOLD SPS_TRIG91{H}
         ;ENDFOLD
      CASE 92
         ;FOLD SPS_TRIG92{H}
         ;ENDFOLD
      CASE 93
         ;FOLD SPS_TRIG93{H}
         ;ENDFOLD
      CASE 94
         ;FOLD SPS_TRIG94{H}
         ;ENDFOLD
      CASE 95
         ;FOLD SPS_TRIG95{H}
         ;ENDFOLD
      CASE 96
         ;FOLD SPS_TRIG96{H}
         ;ENDFOLD
      CASE 97
         ;FOLD SPS_TRIG97{H}
         ;ENDFOLD
      CASE 98
         ;FOLD SPS_TRIG98{H}
         ;ENDFOLD
      CASE 99
         ;FOLD SPS_TRIG99{H}
         ;ENDFOLD
      CASE 100
         ;FOLD SPS_TRIG100{H}
         ;ENDFOLD
      CASE 101
         ;FOLD SPS_TRIG101{H}
         ;ENDFOLD
      CASE 102
         ;FOLD SPS_TRIG102{H}
         ;ENDFOLD
      CASE 103
         ;FOLD SPS_TRIG103{H}
         ;ENDFOLD
      CASE 104
         ;FOLD SPS_TRIG104{H}
         ;ENDFOLD
      CASE 105
         ;FOLD SPS_TRIG105{H}
         ;ENDFOLD
      CASE 106
         ;FOLD SPS_TRIG106{H}
         ;ENDFOLD
      CASE 107
         ;FOLD SPS_TRIG107{H}
         ;ENDFOLD
      CASE 108
         ;FOLD SPS_TRIG108{H}
         ;ENDFOLD
      CASE 109
         ;FOLD SPS_TRIG109{H}
         ;ENDFOLD
      CASE 110
         ;FOLD SPS_TRIG110{H}
         ;ENDFOLD
   DEFAULT
   ENDSWITCH
   ; FOLD ;%{H}
   IF ($MODE_OP<>#EX) THEN
      ;-- Trigger erst nach Wiederanstart geschaltet --
      IF ((((VW_STOP B_AND 'B10010') >0) AND ((VW_STOP B_AND 'B0001')<=0))) THEN
         ;-- MStep Bewegung --
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF NOT UES THEN
      SPS_FERTIG=TRUE
   ENDIF
END
; ENDFOLD