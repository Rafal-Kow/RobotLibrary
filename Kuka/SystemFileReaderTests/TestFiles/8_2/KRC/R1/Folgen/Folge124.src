&ACCESS RVO1
&REL 106
&COMMENT Wartungsstellung
&PARAM DISKPATH = KRC:\R1\Folgen
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM TPVW_VERSION = 8.1.8
&PARAM EDITMASK = Folge999[1-999]
DEF FOLGE124()
   ; FOLD ;%{H} %MKUKATPVW
   SPS_N=-1
   VW (#VW_AUE_INIT,TRUE)
   PENTER:
   INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
   INTERRUPT ON 10
   INT10=TRUE
   ; ENDFOLD
   ;FOLD PTP VB=10% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:10, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:0, 20:-1, 21:1
      ;FOLD 1: A15 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A15 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 2: SPSMAKRO0 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO0 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD {H}
         SPS_FERTIG=FALSE
         INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
         INTERRUPT ON 10
         INT10=TRUE
         VW(#VW_INIT,TRUE)
         VW_USR_R (#USR_INIT)
         TRIGGER  WHEN DISTANCE=1 DELAY=-0.1 DO P0_MERKER=TRUE
         VW_MPARA_ACT=P0_D
         Act_P1 = P0
         Act_P2 = P0
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(1) PRIO=-1
         PTP P0
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD Warte auf Folgenstart ;%{SE}%MKUKATPVW,%C,%V
      VW (#VW_AUE_WAIT,TRUE )
      IF N_VW==TRUE THEN
         GOTO PEXIT
      ENDIF
   ;ENDFOLD
   ;FOLD -- K2TUHR115425R01 Wartungsfolge -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:K2TUHR115425R01 Wartungsfolge
      ;FOLD {H}
         M_COMMENT("K2TUHR115425R01 Wartungsfolge")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP84 VW379 abdocken VW380 andocken -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP84 VW379 abdocken VW380 andocken
      ;FOLD {H}
         M_COMMENT("UP84 VW379 abdocken VW380 andocken")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP86 VW380 abdocken VW379 andocken -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP86 VW380 abdocken VW379 andocken
      ;FOLD {H}
         M_COMMENT("UP86 VW380 abdocken VW379 andocken")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=0[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: PU, 19:1, 20:-1, 21:2
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: SPSMAKRO50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO50 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 4: A42 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A42 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 5: A43 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A43 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: A44 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A44 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 7: A45 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A45 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 8: A47 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A47 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: A49 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A49 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 10: A52 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A52 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 11: A75 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A75 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: A76 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 13: A79 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A79 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 14: A80 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A80 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 15: A15 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A15 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 16: F930 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F930 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 17: F931 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F931 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 18: WARTE BIS (M77 & !M78) + (!M77 & M78) ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS (M77 & !M78) + (!M77 & M78),3:WBOASG
      ;ENDFOLD
      ;FOLD 19: F930 = M77 & E121 & !E122 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F930 = M77 & E121 & !E122,3:BOASG
      ;ENDFOLD
      ;FOLD 20: F931 = M78 & !E121 & E122 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F931 = M78 & !E121 & E122,3:BOASG
      ;ENDFOLD
      ;FOLD 21: F933 = !E20 & !E21 & !E121 & !E122 & !E163 & !E166 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F933 = !E20 & !E21 & !E121 & !E122 & !E163 & !E166,3:BOASG
      ;ENDFOLD
      ;FOLD 22: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 23: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 24: FB PSPS = M30 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP84 = F930 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP84 = F930 & AUS,3:UP
      ;ENDFOLD
      ;FOLD UP86 = F931 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP86 = F931 & AUS,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P1_D
         Act_P1 = P1
         Act_P2 = P1
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(2) PRIO=-1
         PTP P1
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,84,$FLAG[930] AND FALSE)
         SEL_RES=SELECT(#UP,86,$FLAG[931] AND FALSE)
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP111 Wartungsstellung KL -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP111 Wartungsstellung KL
      ;FOLD {H}
         M_COMMENT("UP111 Wartungsstellung KL")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP112 Wartungsstellung Greifer 1 VW380 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP112 Wartungsstellung Greifer 1 VW380
      ;FOLD {H}
         M_COMMENT("UP112 Wartungsstellung Greifer 1 VW380")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP113 Wartungsstellung Greifer 2 VW379 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP113 Wartungsstellung Greifer 2 VW379
      ;FOLD {H}
         M_COMMENT("UP113 Wartungsstellung Greifer 2 VW379")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP120 KL1 Spuelen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP120 KL1 Spuelen
      ;FOLD {H}
         M_COMMENT("UP120 KL1 Spuelen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP201 Werkzeugwechsel KL -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP201 Werkzeugwechsel KL
      ;FOLD {H}
         M_COMMENT("UP201 Werkzeugwechsel KL")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP202 Werkzeugwechsel Greifer 1 VW380 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP202 Werkzeugwechsel Greifer 1 VW380
      ;FOLD {H}
         M_COMMENT("UP202 Werkzeugwechsel Greifer 1 VW380")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP203 Werkzeugwechsel Greifer 2 VW379 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP203 Werkzeugwechsel Greifer 2 VW379
      ;FOLD {H}
         M_COMMENT("UP203 Werkzeugwechsel Greifer 2 VW379")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP206 TCP Greifer 1 VW380 Pruefen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP206 TCP Greifer 1 VW380 Pruefen
      ;FOLD {H}
         M_COMMENT("UP206 TCP Greifer 1 VW380 Pruefen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP207 TCP Greifer 2 VW379 Pruefen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP207 TCP Greifer 2 VW379 Pruefen
      ;FOLD {H}
         M_COMMENT("UP207 TCP Greifer 2 VW379 Pruefen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP208 TCP Kleben Pruefen KL mit G VW380 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP208 TCP Kleben Pruefen KL mit G VW380
      ;FOLD {H}
         M_COMMENT("UP208 TCP Kleben Pruefen KL mit G VW380")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP209 TCP Kleben Pruefen KL mit G VW379 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP209 TCP Kleben Pruefen KL mit G VW379
      ;FOLD {H}
         M_COMMENT("UP209 TCP Kleben Pruefen KL mit G VW379")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:2, 20:-1, 21:3
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 4: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 5: FB PSPS = M30 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP111 = !E20 & !E21 & !E163 & E166 & M81 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP111 = !E20 & !E21 & !E163 & E166 & M81,3:UP
      ;ENDFOLD
      ;FOLD UP112 = !E20 & !E21 & E121 & !E163 & !E166 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP112 = !E20 & !E21 & E121 & !E163 & !E166 & M78,3:UP
      ;ENDFOLD
      ;FOLD UP113 = !E20 & !E21 & E122 & !E163 & !E166 & M77 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP113 = !E20 & !E21 & E122 & !E163 & !E166 & M77 & AUS,3:UP
      ;ENDFOLD
      ;FOLD UP201 = E20 & !E21 & E166 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP201 = E20 & !E21 & E166,3:UP
      ;ENDFOLD
      ;FOLD UP202 = E20 & !E21 & E121 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP202 = E20 & !E21 & E121 & M78,3:UP
      ;ENDFOLD
      ;FOLD UP203 = E20 & !E21 & E122 & M77 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP203 = E20 & !E21 & E122 & M77 & AUS,3:UP
      ;ENDFOLD
      ;FOLD UP206 = E21 & !E20 & E121 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP206 = E21 & !E20 & E121 & M78,3:UP
      ;ENDFOLD
      ;FOLD UP207 = E21 & !E20 & E122 & M77 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP207 = E21 & !E20 & E122 & M77 & AUS,3:UP
      ;ENDFOLD
      ;FOLD UP208 = E21 & !E20 & E166 & M78 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP208 = E21 & !E20 & E166 & M78,3:UP
      ;ENDFOLD
      ;FOLD UP209 = E21 & !E20 & E166 & M77 & AUS ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP209 = E21 & !E20 & E166 & M77 & AUS,3:UP
      ;ENDFOLD
      ;FOLD UP120 = E1534 + E163 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP120 = E1534 + E163,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P2_D
         Act_P1 = P2
         Act_P2 = P2
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(3) PRIO=-1
         PTP P2
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,111,NOT $IN[20] AND NOT $IN[21] AND NOT $IN[163] AND $IN[166] AND $CYCFLAG[81])
         SEL_RES=SELECT(#UP,112,NOT $IN[20] AND NOT $IN[21] AND $IN[121] AND NOT $IN[163] AND NOT $IN[166] AND $CYCFLAG[78])
         SEL_RES=SELECT(#UP,113,NOT $IN[20] AND NOT $IN[21] AND $IN[122] AND NOT $IN[163] AND NOT $IN[166] AND $CYCFLAG[77] AND FALSE)
         SEL_RES=SELECT(#UP,201,$IN[20] AND NOT $IN[21] AND $IN[166])
         SEL_RES=SELECT(#UP,202,$IN[20] AND NOT $IN[21] AND $IN[121] AND $CYCFLAG[78])
         SEL_RES=SELECT(#UP,203,$IN[20] AND NOT $IN[21] AND $IN[122] AND $CYCFLAG[77] AND FALSE)
         SEL_RES=SELECT(#UP,206,$IN[21] AND NOT $IN[20] AND $IN[121] AND $CYCFLAG[78])
         SEL_RES=SELECT(#UP,207,$IN[21] AND NOT $IN[20] AND $IN[122] AND $CYCFLAG[77] AND FALSE)
         SEL_RES=SELECT(#UP,208,$IN[21] AND NOT $IN[20] AND $IN[166] AND $CYCFLAG[78])
         SEL_RES=SELECT(#UP,209,$IN[21] AND NOT $IN[20] AND $IN[166] AND $CYCFLAG[77] AND FALSE)
         SEL_RES=SELECT(#UP,120,$IN[1534] OR $IN[163])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=12 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:12, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:3, 20:-1, 21:4
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 4: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 5: FB PSPS = M30 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P3_D
         Act_P1 = P3
         Act_P2 = P3
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(4) PRIO=-1
         PTP P3
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
   VW (#VW_AUE_END,TRUE)
   GOTO PENTER
   PEXIT:
END
DEF SPS_TRIG(NO :IN)
   INT NO
   INT VW_STOP
   BOOL UES
   VW_STOP=$VW_PSPS_STOP
   IF NO>10000 THEN
      NO=NO-10000
      UES=TRUE
   ELSE
      UES=FALSE
   ENDIF
   ; FOLD ;%{H}
   IF ((VW_STOP B_AND 'B0001') > 0) THEN
      ;-- Trigger vorzeitig geschaltet (delay < 0) oder MStep
      IF (((VW_STOP B_AND 'B0110') > 0) AND ($MODE_OP<>#EX)) THEN
         ;-- MStep oder BCO Bewegung
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (SEARCH_END) THEN
      SEARCH_END = FALSE
      INTERRUPT OFF 39
   ENDIF
   SWITCH NO
      CASE 1
         ;FOLD SPS_TRIG1{H}
            $OUT[15] = TRUE
            SEL_RES=SELECT(#MAKRO,0,TRUE,,,,,FALSE)
         ;ENDFOLD
      CASE 2
         ;FOLD SPS_TRIG2{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            SEL_RES=SELECT(#MAKRO,50,TRUE,,,,,FALSE)
            $OUT[42] = TRUE
            $OUT[43] = TRUE
            $OUT[44] = TRUE
            $OUT[45] = TRUE
            $OUT[47] = TRUE
            $OUT[49] = TRUE
            $OUT[52] = TRUE
            $OUT[75] = TRUE
            $OUT[76] = TRUE
            $OUT[79] = TRUE
            $OUT[80] = TRUE
            $OUT[15] = FALSE
            $FLAG[930] = FALSE
            $FLAG[931] = FALSE
            $LOOP_MSG[]="(M77 & !M78) + (!M77 & M78)"
            $LOOP_CONT=TRUE
            WAIT FOR (($CYCFLAG[77] AND NOT $CYCFLAG[78]) OR (NOT $CYCFLAG[77] AND $CYCFLAG[78])) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[930] = $CYCFLAG[77] AND $IN[121] AND NOT $IN[122]
            $FLAG[931] = $CYCFLAG[78] AND NOT $IN[121] AND $IN[122]
            $FLAG[933] = NOT $IN[20] AND NOT $IN[21] AND NOT $IN[121] AND NOT $IN[122] AND NOT $IN[163] AND NOT $IN[166]
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 3
         ;FOLD SPS_TRIG3{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 4
         ;FOLD SPS_TRIG4{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 5
         ;FOLD SPS_TRIG5{H}
         ;ENDFOLD
      CASE 6
         ;FOLD SPS_TRIG6{H}
         ;ENDFOLD
      CASE 7
         ;FOLD SPS_TRIG7{H}
         ;ENDFOLD
      CASE 8
         ;FOLD SPS_TRIG8{H}
         ;ENDFOLD
      CASE 9
         ;FOLD SPS_TRIG9{H}
         ;ENDFOLD
      CASE 10
         ;FOLD SPS_TRIG10{H}
         ;ENDFOLD
      CASE 11
         ;FOLD SPS_TRIG11{H}
         ;ENDFOLD
      CASE 12
         ;FOLD SPS_TRIG12{H}
         ;ENDFOLD
      CASE 13
         ;FOLD SPS_TRIG13{H}
         ;ENDFOLD
      CASE 14
         ;FOLD SPS_TRIG14{H}
         ;ENDFOLD
      CASE 15
         ;FOLD SPS_TRIG15{H}
         ;ENDFOLD
      CASE 16
         ;FOLD SPS_TRIG16{H}
         ;ENDFOLD
      CASE 17
         ;FOLD SPS_TRIG17{H}
         ;ENDFOLD
      CASE 18
         ;FOLD SPS_TRIG18{H}
         ;ENDFOLD
      CASE 19
         ;FOLD SPS_TRIG19{H}
         ;ENDFOLD
      CASE 20
         ;FOLD SPS_TRIG20{H}
         ;ENDFOLD
      CASE 21
         ;FOLD SPS_TRIG21{H}
         ;ENDFOLD
      CASE 22
         ;FOLD SPS_TRIG22{H}
         ;ENDFOLD
      CASE 23
         ;FOLD SPS_TRIG23{H}
         ;ENDFOLD
      CASE 24
         ;FOLD SPS_TRIG24{H}
         ;ENDFOLD
      CASE 25
         ;FOLD SPS_TRIG25{H}
         ;ENDFOLD
      CASE 26
         ;FOLD SPS_TRIG26{H}
         ;ENDFOLD
      CASE 27
         ;FOLD SPS_TRIG27{H}
         ;ENDFOLD
      CASE 28
         ;FOLD SPS_TRIG28{H}
         ;ENDFOLD
      CASE 29
         ;FOLD SPS_TRIG29{H}
         ;ENDFOLD
      CASE 30
         ;FOLD SPS_TRIG30{H}
         ;ENDFOLD
      CASE 31
         ;FOLD SPS_TRIG31{H}
         ;ENDFOLD
      CASE 32
         ;FOLD SPS_TRIG32{H}
         ;ENDFOLD
      CASE 33
         ;FOLD SPS_TRIG33{H}
         ;ENDFOLD
      CASE 34
         ;FOLD SPS_TRIG34{H}
         ;ENDFOLD
      CASE 35
         ;FOLD SPS_TRIG35{H}
         ;ENDFOLD
      CASE 36
         ;FOLD SPS_TRIG36{H}
         ;ENDFOLD
      CASE 37
         ;FOLD SPS_TRIG37{H}
         ;ENDFOLD
      CASE 38
         ;FOLD SPS_TRIG38{H}
         ;ENDFOLD
      CASE 39
         ;FOLD SPS_TRIG39{H}
         ;ENDFOLD
      CASE 40
         ;FOLD SPS_TRIG40{H}
         ;ENDFOLD
      CASE 41
         ;FOLD SPS_TRIG41{H}
         ;ENDFOLD
      CASE 42
         ;FOLD SPS_TRIG42{H}
         ;ENDFOLD
      CASE 43
         ;FOLD SPS_TRIG43{H}
         ;ENDFOLD
      CASE 44
         ;FOLD SPS_TRIG44{H}
         ;ENDFOLD
      CASE 45
         ;FOLD SPS_TRIG45{H}
         ;ENDFOLD
      CASE 46
         ;FOLD SPS_TRIG46{H}
         ;ENDFOLD
      CASE 47
         ;FOLD SPS_TRIG47{H}
         ;ENDFOLD
      CASE 48
         ;FOLD SPS_TRIG48{H}
         ;ENDFOLD
      CASE 49
         ;FOLD SPS_TRIG49{H}
         ;ENDFOLD
      CASE 50
         ;FOLD SPS_TRIG50{H}
         ;ENDFOLD
      CASE 51
         ;FOLD SPS_TRIG51{H}
         ;ENDFOLD
      CASE 52
         ;FOLD SPS_TRIG52{H}
         ;ENDFOLD
      CASE 53
         ;FOLD SPS_TRIG53{H}
         ;ENDFOLD
      CASE 54
         ;FOLD SPS_TRIG54{H}
         ;ENDFOLD
      CASE 55
         ;FOLD SPS_TRIG55{H}
         ;ENDFOLD
      CASE 56
         ;FOLD SPS_TRIG56{H}
         ;ENDFOLD
      CASE 57
         ;FOLD SPS_TRIG57{H}
         ;ENDFOLD
      CASE 58
         ;FOLD SPS_TRIG58{H}
         ;ENDFOLD
      CASE 59
         ;FOLD SPS_TRIG59{H}
         ;ENDFOLD
      CASE 60
         ;FOLD SPS_TRIG60{H}
         ;ENDFOLD
      CASE 61
         ;FOLD SPS_TRIG61{H}
         ;ENDFOLD
      CASE 62
         ;FOLD SPS_TRIG62{H}
         ;ENDFOLD
      CASE 63
         ;FOLD SPS_TRIG63{H}
         ;ENDFOLD
      CASE 64
         ;FOLD SPS_TRIG64{H}
         ;ENDFOLD
      CASE 65
         ;FOLD SPS_TRIG65{H}
         ;ENDFOLD
      CASE 66
         ;FOLD SPS_TRIG66{H}
         ;ENDFOLD
      CASE 67
         ;FOLD SPS_TRIG67{H}
         ;ENDFOLD
      CASE 68
         ;FOLD SPS_TRIG68{H}
         ;ENDFOLD
      CASE 69
         ;FOLD SPS_TRIG69{H}
         ;ENDFOLD
      CASE 70
         ;FOLD SPS_TRIG70{H}
         ;ENDFOLD
      CASE 71
         ;FOLD SPS_TRIG71{H}
         ;ENDFOLD
      CASE 72
         ;FOLD SPS_TRIG72{H}
         ;ENDFOLD
      CASE 73
         ;FOLD SPS_TRIG73{H}
         ;ENDFOLD
      CASE 74
         ;FOLD SPS_TRIG74{H}
         ;ENDFOLD
      CASE 75
         ;FOLD SPS_TRIG75{H}
         ;ENDFOLD
      CASE 76
         ;FOLD SPS_TRIG76{H}
         ;ENDFOLD
      CASE 77
         ;FOLD SPS_TRIG77{H}
         ;ENDFOLD
      CASE 78
         ;FOLD SPS_TRIG78{H}
         ;ENDFOLD
      CASE 79
         ;FOLD SPS_TRIG79{H}
         ;ENDFOLD
      CASE 80
         ;FOLD SPS_TRIG80{H}
         ;ENDFOLD
      CASE 81
         ;FOLD SPS_TRIG81{H}
         ;ENDFOLD
      CASE 82
         ;FOLD SPS_TRIG82{H}
         ;ENDFOLD
      CASE 83
         ;FOLD SPS_TRIG83{H}
         ;ENDFOLD
      CASE 84
         ;FOLD SPS_TRIG84{H}
         ;ENDFOLD
      CASE 85
         ;FOLD SPS_TRIG85{H}
         ;ENDFOLD
      CASE 86
         ;FOLD SPS_TRIG86{H}
         ;ENDFOLD
      CASE 87
         ;FOLD SPS_TRIG87{H}
         ;ENDFOLD
      CASE 88
         ;FOLD SPS_TRIG88{H}
         ;ENDFOLD
      CASE 89
         ;FOLD SPS_TRIG89{H}
         ;ENDFOLD
      CASE 90
         ;FOLD SPS_TRIG90{H}
         ;ENDFOLD
      CASE 91
         ;FOLD SPS_TRIG91{H}
         ;ENDFOLD
      CASE 92
         ;FOLD SPS_TRIG92{H}
         ;ENDFOLD
      CASE 93
         ;FOLD SPS_TRIG93{H}
         ;ENDFOLD
      CASE 94
         ;FOLD SPS_TRIG94{H}
         ;ENDFOLD
      CASE 95
         ;FOLD SPS_TRIG95{H}
         ;ENDFOLD
      CASE 96
         ;FOLD SPS_TRIG96{H}
         ;ENDFOLD
      CASE 97
         ;FOLD SPS_TRIG97{H}
         ;ENDFOLD
      CASE 98
         ;FOLD SPS_TRIG98{H}
         ;ENDFOLD
      CASE 99
         ;FOLD SPS_TRIG99{H}
         ;ENDFOLD
      CASE 100
         ;FOLD SPS_TRIG100{H}
         ;ENDFOLD
      CASE 101
         ;FOLD SPS_TRIG101{H}
         ;ENDFOLD
      CASE 102
         ;FOLD SPS_TRIG102{H}
         ;ENDFOLD
      CASE 103
         ;FOLD SPS_TRIG103{H}
         ;ENDFOLD
      CASE 104
         ;FOLD SPS_TRIG104{H}
         ;ENDFOLD
      CASE 105
         ;FOLD SPS_TRIG105{H}
         ;ENDFOLD
   DEFAULT
   ENDSWITCH
   ; FOLD ;%{H}
   IF ($MODE_OP<>#EX) THEN
      ;-- Trigger erst nach Wiederanstart geschaltet --
      IF ((((VW_STOP B_AND 'B10010') >0) AND ((VW_STOP B_AND 'B0001')<=0))) THEN
         ;-- MStep Bewegung --
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF NOT UES THEN
      SPS_FERTIG=TRUE
   ENDIF
END
; ENDFOLD