&ACCESS RVO
&REL 1
&COMMENT Praegen VW379 alter Ablauf
&PARAM DISKPATH = KRC:\R1\UPs
&PARAM TEMPLATE = C:\KRC\Roboter\Template\upvorgabe
&PARAM TPVW_VERSION = 8.1.8
&PARAM EDITMASK = Up999[1-999]
DEF UP52()
   ; FOLD UP Anfang;%{SE} %MKUKATPVW
   SPS_N=-1
   SPS_FERTIG=FALSE
   IF NOT CALLBYSELECT THEN
      INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
      INTERRUPT ON 10
      INT10=TRUE
      VW_USR_R (#USR_INIT)
   ENDIF
   VW(#VW_INIT_UP,TRUE)
   ; ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:1, 20:-1, 21:1
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: t3 ( EIN ) = 0[1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VTASG %P 2:t3 ( EIN ) = 0[1/10Sek],3:TASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO50 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: SPSMAKRO52 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO52 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 6: A42 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A42 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 7: A43 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A43 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 8: A44 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A44 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: A45 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A45 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 10: A47 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A47 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 11: A49 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A49 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: A52 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A52 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 13: A54 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A54 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 14: A75 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A75 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 15: A76 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 16: A79 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A79 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 17: A80 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A80 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 18: F1 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F1 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 19: SPSMAKRO343 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO343 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 20: F2 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F2 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 21: SPSMAKRO342 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO342 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 22: SPSMAKRO340 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 23: WARTE BIS M32 & M33 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M32 & M33,3:WBOASG
      ;ENDFOLD
      ;FOLD 24: WARTE BIS E23 & E1939 & M77 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23 & E1939 & M77,3:WBOASG
      ;ENDFOLD
      ;FOLD 25: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 26: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P1_D
         Act_P1 = P1
         Act_P2 = P1
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(1) PRIO=-1
         PTP P1
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:2, 20:-1, 21:2
      ;FOLD 1: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P2_D
         Act_P1 = P2
         Act_P2 = P2
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10002) PRIO=-1
         PTP P2 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:3, 20:-1, 21:3
      ;FOLD 1: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P3_D
         Act_P1 = P3
         Act_P2 = P3
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10003) PRIO=-1
         PTP P3 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:4, 20:-1, 21:4
      ;FOLD 1: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P4_D
         Act_P1 = P4
         Act_P2 = P4
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10004) PRIO=-1
         PTP P4 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Praegen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Praegen
      ;FOLD {H}
         M_COMMENT("Praegen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=300[mm/s] VE=0% ACC=100% RobWzg=10 Base=1 SPSTrig=5[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:300, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:5, 17:[1/100s], 18: P, 19:5, 20:-1, 21:5
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: A1937 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1937 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 4: WARTE BIS E1937 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E1937 & E1939,3:WBOASG
      ;ENDFOLD
      ;FOLD 5: A1939 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1939 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: WARTE ( EIN ) ZEIT 1 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VWTASG %P 2:WARTE ( EIN ) ZEIT 1 [1/10Sek],3:WTASG
      ;ENDFOLD
      ;FOLD 7: WARTE BIS E1940 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E1940,3:WBOASG
      ;ENDFOLD
      ;FOLD 8: WARTE ( EIN ) ZEIT 5 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VWTASG %P 2:WARTE ( EIN ) ZEIT 5 [1/10Sek],3:WTASG
      ;ENDFOLD
      ;FOLD 9: A1939 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1939 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 10: WARTE ( EIN ) ZEIT 1 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VWTASG %P 2:WARTE ( EIN ) ZEIT 1 [1/10Sek],3:WTASG
      ;ENDFOLD
      ;FOLD 11: A1940 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1940 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: WARTE BIS E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E1939,3:WBOASG
      ;ENDFOLD
      ;FOLD 13: A1937 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1937 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 14: A1940 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1940 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 15: WARTE BIS E1938 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E1938 & E1939,3:WBOASG
      ;ENDFOLD
      ;FOLD 16: SPSMAKRO2 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO2 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 17: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 18: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 19: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P5_D
         Act_P1 = P5
         Act_P2 = P5
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(5) PRIO=-1
         LIN P5
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=350[mm/s] VE=100% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:350, 4:[mm/s], 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:6, 20:-1, 21:6
      ;FOLD 1: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P6_D
         Act_P1 = P6
         Act_P2 = P6
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10006) PRIO=-1
         LIN P6 C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:7, 20:-1, 21:7
      ;FOLD 1: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P7_D
         Act_P1 = P7
         Act_P2 = P7
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10007) PRIO=-1
         PTP P7 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:8, 20:-1, 21:8
      ;FOLD 1: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P8_D
         Act_P1 = P8
         Act_P2 = P8
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10008) PRIO=-1
         PTP P8 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=10 Base=1 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:10, 13: Base=, 14:1, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:9, 20:-1, 21:9
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: t3 ( EIN ) = STOP ;%{SE}%MKUKATPVW %CVW_SPS %VTSTOP %P 2:t3 ( EIN ) = STOP,3:TSTOP
      ;ENDFOLD
      ;FOLD 4: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 5: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M1 & M30 & M32 & M33 & M77 & E1939,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P9_D
         Act_P1 = P9
         Act_P2 = P9
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(9) PRIO=-1
         PTP P9
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
END
DEF SPS_TRIG(NO :IN)
   INT NO
   INT VW_STOP
   BOOL UES
   VW_STOP=$VW_PSPS_STOP
   IF NO>10000 THEN
      NO=NO-10000
      UES=TRUE
   ELSE
      UES=FALSE
   ENDIF
   ; FOLD ;%{H}
   IF ((VW_STOP B_AND 'B0001') > 0) THEN
      ;-- Trigger vorzeitig geschaltet (delay < 0) oder MStep
      IF (((VW_STOP B_AND 'B0110') > 0) AND ($MODE_OP<>#EX)) THEN
         ;-- MStep oder BCO Bewegung
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (SEARCH_END) THEN
      SEARCH_END = FALSE
      INTERRUPT OFF 39
   ENDIF
   SWITCH NO
      CASE 1
         ;FOLD SPS_TRIG1{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            VW(#SET_TIME,TRUE,3,0,0)
            SEL_RES=SELECT(#MAKRO,50,TRUE,,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,52,TRUE,,,,,FALSE)
            $OUT[42] = TRUE
            $OUT[43] = TRUE
            $OUT[44] = TRUE
            $OUT[45] = TRUE
            $OUT[47] = TRUE
            $OUT[49] = TRUE
            $OUT[52] = TRUE
            $OUT[54] = TRUE
            $OUT[75] = TRUE
            $OUT[76] = TRUE
            $OUT[79] = TRUE
            $OUT[80] = TRUE
            $FLAG[1] = TRUE
            SEL_RES=SELECT(#MAKRO,343,TRUE,,,,,FALSE)
            $FLAG[2] = TRUE
            SEL_RES=SELECT(#MAKRO,342,TRUE,,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,TRUE,,,,,FALSE)
            $LOOP_MSG[]="M32 & M33"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[32] AND $CYCFLAG[33]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E23 & E1939 & M77"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23] AND $IN[1939] AND $CYCFLAG[77]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 2
         ;FOLD SPS_TRIG2{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 3
         ;FOLD SPS_TRIG3{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 4
         ;FOLD SPS_TRIG4{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 5
         ;FOLD SPS_TRIG5{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $OUT[1937] = TRUE
            $LOOP_MSG[]="E1937 & E1939"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[1937] AND $IN[1939]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[1939] = TRUE
            $LOOP_MSG[]="Wartezeit..."
            $LOOP_CONT=TRUE
            WAIT FOR (FALSE OR TIMER_LIMIT ((1)*0.1) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX)))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E1940"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[1940]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="Wartezeit..."
            $LOOP_CONT=TRUE
            WAIT FOR (FALSE OR TIMER_LIMIT ((5)*0.1) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX)))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[1939] = FALSE
            $LOOP_MSG[]="Wartezeit..."
            $LOOP_CONT=TRUE
            WAIT FOR (FALSE OR TIMER_LIMIT ((1)*0.1) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX)))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[1940] = TRUE
            $LOOP_MSG[]="E1939"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[1939]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[1937] = FALSE
            $OUT[1940] = FALSE
            $LOOP_MSG[]="E1938 & E1939"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[1938] AND $IN[1939]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            SEL_RES=SELECT(#MAKRO,2,TRUE,,,,,FALSE)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 6
         ;FOLD SPS_TRIG6{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 7
         ;FOLD SPS_TRIG7{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 8
         ;FOLD SPS_TRIG8{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 9
         ;FOLD SPS_TRIG9{H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            VW(#SET_TIME,TRUE,3,1,0)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[1] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[33] AND $CYCFLAG[77] AND $IN[1939]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 10
         ;FOLD SPS_TRIG10{H}
         ;ENDFOLD
      CASE 11
         ;FOLD SPS_TRIG11{H}
         ;ENDFOLD
      CASE 12
         ;FOLD SPS_TRIG12{H}
         ;ENDFOLD
      CASE 13
         ;FOLD SPS_TRIG13{H}
         ;ENDFOLD
      CASE 14
         ;FOLD SPS_TRIG14{H}
         ;ENDFOLD
      CASE 15
         ;FOLD SPS_TRIG15{H}
         ;ENDFOLD
      CASE 16
         ;FOLD SPS_TRIG16{H}
         ;ENDFOLD
      CASE 17
         ;FOLD SPS_TRIG17{H}
         ;ENDFOLD
      CASE 18
         ;FOLD SPS_TRIG18{H}
         ;ENDFOLD
      CASE 19
         ;FOLD SPS_TRIG19{H}
         ;ENDFOLD
      CASE 20
         ;FOLD SPS_TRIG20{H}
         ;ENDFOLD
      CASE 21
         ;FOLD SPS_TRIG21{H}
         ;ENDFOLD
      CASE 22
         ;FOLD SPS_TRIG22{H}
         ;ENDFOLD
      CASE 23
         ;FOLD SPS_TRIG23{H}
         ;ENDFOLD
      CASE 24
         ;FOLD SPS_TRIG24{H}
         ;ENDFOLD
      CASE 25
         ;FOLD SPS_TRIG25{H}
         ;ENDFOLD
      CASE 26
         ;FOLD SPS_TRIG26{H}
         ;ENDFOLD
      CASE 27
         ;FOLD SPS_TRIG27{H}
         ;ENDFOLD
      CASE 28
         ;FOLD SPS_TRIG28{H}
         ;ENDFOLD
      CASE 29
         ;FOLD SPS_TRIG29{H}
         ;ENDFOLD
      CASE 30
         ;FOLD SPS_TRIG30{H}
         ;ENDFOLD
      CASE 31
         ;FOLD SPS_TRIG31{H}
         ;ENDFOLD
      CASE 32
         ;FOLD SPS_TRIG32{H}
         ;ENDFOLD
      CASE 33
         ;FOLD SPS_TRIG33{H}
         ;ENDFOLD
      CASE 34
         ;FOLD SPS_TRIG34{H}
         ;ENDFOLD
      CASE 35
         ;FOLD SPS_TRIG35{H}
         ;ENDFOLD
      CASE 36
         ;FOLD SPS_TRIG36{H}
         ;ENDFOLD
      CASE 37
         ;FOLD SPS_TRIG37{H}
         ;ENDFOLD
      CASE 38
         ;FOLD SPS_TRIG38{H}
         ;ENDFOLD
      CASE 39
         ;FOLD SPS_TRIG39{H}
         ;ENDFOLD
      CASE 40
         ;FOLD SPS_TRIG40{H}
         ;ENDFOLD
      CASE 41
         ;FOLD SPS_TRIG41{H}
         ;ENDFOLD
      CASE 42
         ;FOLD SPS_TRIG42{H}
         ;ENDFOLD
      CASE 43
         ;FOLD SPS_TRIG43{H}
         ;ENDFOLD
      CASE 44
         ;FOLD SPS_TRIG44{H}
         ;ENDFOLD
      CASE 45
         ;FOLD SPS_TRIG45{H}
         ;ENDFOLD
      CASE 46
         ;FOLD SPS_TRIG46{H}
         ;ENDFOLD
      CASE 47
         ;FOLD SPS_TRIG47{H}
         ;ENDFOLD
      CASE 48
         ;FOLD SPS_TRIG48{H}
         ;ENDFOLD
      CASE 49
         ;FOLD SPS_TRIG49{H}
         ;ENDFOLD
      CASE 50
         ;FOLD SPS_TRIG50{H}
         ;ENDFOLD
      CASE 51
         ;FOLD SPS_TRIG51{H}
         ;ENDFOLD
      CASE 52
         ;FOLD SPS_TRIG52{H}
         ;ENDFOLD
      CASE 53
         ;FOLD SPS_TRIG53{H}
         ;ENDFOLD
      CASE 54
         ;FOLD SPS_TRIG54{H}
         ;ENDFOLD
      CASE 55
         ;FOLD SPS_TRIG55{H}
         ;ENDFOLD
      CASE 56
         ;FOLD SPS_TRIG56{H}
         ;ENDFOLD
      CASE 57
         ;FOLD SPS_TRIG57{H}
         ;ENDFOLD
      CASE 58
         ;FOLD SPS_TRIG58{H}
         ;ENDFOLD
      CASE 59
         ;FOLD SPS_TRIG59{H}
         ;ENDFOLD
      CASE 60
         ;FOLD SPS_TRIG60{H}
         ;ENDFOLD
      CASE 61
         ;FOLD SPS_TRIG61{H}
         ;ENDFOLD
      CASE 62
         ;FOLD SPS_TRIG62{H}
         ;ENDFOLD
      CASE 63
         ;FOLD SPS_TRIG63{H}
         ;ENDFOLD
      CASE 64
         ;FOLD SPS_TRIG64{H}
         ;ENDFOLD
      CASE 65
         ;FOLD SPS_TRIG65{H}
         ;ENDFOLD
      CASE 66
         ;FOLD SPS_TRIG66{H}
         ;ENDFOLD
      CASE 67
         ;FOLD SPS_TRIG67{H}
         ;ENDFOLD
      CASE 68
         ;FOLD SPS_TRIG68{H}
         ;ENDFOLD
      CASE 69
         ;FOLD SPS_TRIG69{H}
         ;ENDFOLD
      CASE 70
         ;FOLD SPS_TRIG70{H}
         ;ENDFOLD
      CASE 71
         ;FOLD SPS_TRIG71{H}
         ;ENDFOLD
      CASE 72
         ;FOLD SPS_TRIG72{H}
         ;ENDFOLD
      CASE 73
         ;FOLD SPS_TRIG73{H}
         ;ENDFOLD
      CASE 74
         ;FOLD SPS_TRIG74{H}
         ;ENDFOLD
      CASE 75
         ;FOLD SPS_TRIG75{H}
         ;ENDFOLD
      CASE 76
         ;FOLD SPS_TRIG76{H}
         ;ENDFOLD
      CASE 77
         ;FOLD SPS_TRIG77{H}
         ;ENDFOLD
      CASE 78
         ;FOLD SPS_TRIG78{H}
         ;ENDFOLD
      CASE 79
         ;FOLD SPS_TRIG79{H}
         ;ENDFOLD
      CASE 80
         ;FOLD SPS_TRIG80{H}
         ;ENDFOLD
      CASE 81
         ;FOLD SPS_TRIG81{H}
         ;ENDFOLD
      CASE 82
         ;FOLD SPS_TRIG82{H}
         ;ENDFOLD
      CASE 83
         ;FOLD SPS_TRIG83{H}
         ;ENDFOLD
      CASE 84
         ;FOLD SPS_TRIG84{H}
         ;ENDFOLD
      CASE 85
         ;FOLD SPS_TRIG85{H}
         ;ENDFOLD
      CASE 86
         ;FOLD SPS_TRIG86{H}
         ;ENDFOLD
      CASE 87
         ;FOLD SPS_TRIG87{H}
         ;ENDFOLD
      CASE 88
         ;FOLD SPS_TRIG88{H}
         ;ENDFOLD
      CASE 89
         ;FOLD SPS_TRIG89{H}
         ;ENDFOLD
      CASE 90
         ;FOLD SPS_TRIG90{H}
         ;ENDFOLD
      CASE 91
         ;FOLD SPS_TRIG91{H}
         ;ENDFOLD
      CASE 92
         ;FOLD SPS_TRIG92{H}
         ;ENDFOLD
      CASE 93
         ;FOLD SPS_TRIG93{H}
         ;ENDFOLD
      CASE 94
         ;FOLD SPS_TRIG94{H}
         ;ENDFOLD
      CASE 95
         ;FOLD SPS_TRIG95{H}
         ;ENDFOLD
      CASE 96
         ;FOLD SPS_TRIG96{H}
         ;ENDFOLD
      CASE 97
         ;FOLD SPS_TRIG97{H}
         ;ENDFOLD
      CASE 98
         ;FOLD SPS_TRIG98{H}
         ;ENDFOLD
      CASE 99
         ;FOLD SPS_TRIG99{H}
         ;ENDFOLD
      CASE 100
         ;FOLD SPS_TRIG100{H}
         ;ENDFOLD
      CASE 101
         ;FOLD SPS_TRIG101{H}
         ;ENDFOLD
      CASE 102
         ;FOLD SPS_TRIG102{H}
         ;ENDFOLD
      CASE 103
         ;FOLD SPS_TRIG103{H}
         ;ENDFOLD
      CASE 104
         ;FOLD SPS_TRIG104{H}
         ;ENDFOLD
      CASE 105
         ;FOLD SPS_TRIG105{H}
         ;ENDFOLD
      CASE 106
         ;FOLD SPS_TRIG106{H}
         ;ENDFOLD
      CASE 107
         ;FOLD SPS_TRIG107{H}
         ;ENDFOLD
      CASE 108
         ;FOLD SPS_TRIG108{H}
         ;ENDFOLD
      CASE 109
         ;FOLD SPS_TRIG109{H}
         ;ENDFOLD
      CASE 110
         ;FOLD SPS_TRIG110{H}
         ;ENDFOLD
   DEFAULT
   ENDSWITCH
   ; FOLD ;%{H}
   IF ($MODE_OP<>#EX) THEN
      ;-- Trigger erst nach Wiederanstart geschaltet --
      IF ((((VW_STOP B_AND 'B10010') >0) AND ((VW_STOP B_AND 'B0001')<=0))) THEN
         ;-- MStep Bewegung --
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF NOT UES THEN
      SPS_FERTIG=TRUE
   ENDIF
END
; ENDFOLD