&ACCESS  RV
&PARAM DISKPATH = VW_User/Applikation/Clinchen
&PARAM TPVW_VERSION = 8.3.0
&REL 200
DEF vw_cz_usr_r( )
; 
;*-----------------------------------------------------*
;*Technologiepaket Clinchen                            *
;*                                                     *
;*Konzernstandard                                      *
;*Bearbeiter: W. Lehmeier I/PG-C61                     *
;*                                                     *
;* Erstellt am:                                        *
;* 2015.02.09 LE                                       *
;*                                                     *
;*------------------------------------------------------
;
END
;
;FOLD Clinchen_Interface
GLOBAL DEF CZ_Interfac(USER_CMD:IN,CMD_SEL:IN,PAR1:IN,PAR2:IN,PAR3:IN,PAR4:IN,PAR5:IN,PAR6:IN)
DECL VW_USER_CMD USER_CMD
INT  CMD_SEL,PAR1,PAR2,PAR3,PAR4,PAR5,PAR6
INT i
;
;-----------------------------------------------------------
SWITCH USER_CMD
;
;-----------------------------------------------------------
  CASE #USR_INIT
    ;FOLD Init
    ;
    ;
    ;ENDFOLD (Init)
;
;-----------------------------------------------------------
  CASE #USR_ADV
    ;FOLD Advance
;    
    Offset=PAR4
    IF (PAR6<>0) THEN
      CONTINUE
      $FLAG[F_CZ_FRG_Prozes]=NOT b_CZ_FRG_Prozes[PAR6] AND NOT ($FLAG[F_CZ_def[1]] OR $FLAG[F_CZ_def[2]])  
    ENDIF
    IF (PAR4>0) AND $FLAG[F_CZ_FRG_Prozes] THEN
      CONTINUE
      IF (($PRO_MODE==#GO) OR ($EXT)) THEN
        MyCorrOFF=(Offset*0.1)
        WHILE ((Offset<0) or (Offset>150))
          Clinchen_Msg(2,#QuitMsg) ; MyCorrOFF nicht im zulaessigen Bereich
        ENDWHILE
        MyCorr=$NULLFRAME
        MyCorr.X=-MyCorrOff
        IF (VW_MPARA_ACT.BASE_NO > 0) THEN
          SWITCH BASE_TYPE[VW_MPARA_ACT.BASE_NO]
            CASE #TCP
              CONTINUE
              $BASE=$BASE:MyCorr
            DEFAULT
              CONTINUE
              $TOOL=$TOOL:MyCorr
          ENDSWITCH
        ELSE
          CONTINUE
          $TOOL=$TOOL:MyCorr
        ENDIF
      ENDIF  ;Von PRO_MODE
    ENDIF  ;Von PAR4
;
    CONTINUE
    CZ_PktNr_SPS=PAR6
;  
    SWITCH PAR1
      CASE 1  ;Auswahl Servo
        $FLAG[F_SZ_AH_KOMP]=TRUE
        SWITCH PAR2
          CASE 1
            CONTINUE
            SCZ1_P_Nr=PAR3 ;CZ 1 Ausgabe Programm-Nr
          CASE 2
            CONTINUE
            SCZ2_P_Nr=PAR3 ;CZ 2 Ausgabe Programm-Nr
        ENDSWITCH
;
      CASE 2  ;Auswahl pneumohydraulisch
        SWITCH PAR2
          CASE 1
            CONTINUE
            PCZ1_P_Nr=PAR3 ;CZ 1 Ausgabe Programm-Nr
          CASE 2
            CONTINUE
            PCZ2_P_Nr=PAR3 ;CZ 2 Ausgabe Programm-Nr
	     ENDSWITCH      
;
      DEFAULT
        Clinchen_Msg(20,#QuitMsg) ;Falsche Auswahl
    ENDSWITCH ;von PAR1
;
    ;ENDFOLD (Advance)
;
;-----------------------------------------------------------
  CASE #USR_TRIG
    ;FOLD Trig
;    
    CZ_PktNr_SPS=PAR6
    IF (PAR6==$COUNT_I[I_Arbpkt_Nr]) AND NOT (PAR6==0) THEN
      Clinchen_Msg(1,#QuitMsg) ; Punkt schon geclincht
    ENDIF
    IF (PAR6<>0) THEN
      $FLAG[F_CZ_FRG_Prozes]=NOT b_CZ_FRG_Prozes[PAR6] AND NOT ($FLAG[F_CZ_def[1]] OR $FLAG[F_CZ_def[2]])  
      IF b_CZ_FRG_Prozes[PAR6] AND (($mode_op==#T1) OR ($mode_op==#T2)) THEN
        Clinchen_Msg(3,#QuitMsg) ; FRG-Prozess (F740) fehlt
      ENDIF
    ENDIF 
    SWITCH PAR1
      CASE 1  ;Auswahl Servo
        IF NOT $FLAG[F_SZ_AH_KOMP]==TRUE THEN
          $FLAG[F_SZ_AH_KOMP]=TRUE
          WAIT SEC 0.1
        ENDIF
        SWITCH PAR2
          CASE 1
            IF (SCZ1_P_Nr<>PAR3) THEN
              SCZ1_P_Nr=PAR3 ;CZ 1 Ausgabe Programm-Nr
		        WAIT SEC 0.1
		      ENDIF
          CASE 2
            IF (SCZ2_P_Nr<>PAR3) THEN
              SCZ2_P_Nr=PAR3 ;CZ 2 Ausgabe Programm-Nr
		        WAIT SEC 0.1
		      ENDIF
	     ENDSWITCH  
;            
      CASE 2  ;Auswahl pneumohydraulisch
        SWITCH PAR2
          CASE 1
            IF (PCZ1_P_Nr<>PAR3) THEN
              PCZ1_P_Nr=PAR3 ;CZ 1 Ausgabe Programm-Nr
		        WAIT SEC 0.1
		      ENDIF
          CASE 2
            IF (PCZ2_P_Nr<>PAR3) THEN
              PCZ2_P_Nr=PAR3 ;CZ 2 Ausgabe Programm-Nr
		        WAIT SEC 0.1
		      ENDIF
	     ENDSWITCH  	
;
      DEFAULT
        Clinchen_Msg(20,#QuitMsg) ;P1: Falsche Auswahl
;    
    ENDSWITCH ;von PAR1
;
    ;ENDFOLD (Trig)
;
;-----------------------------------------------------------
  CASE #USR_MAIN
    ;FOLD Main
;    
    $COUNT_I[I_Arbpkt_Nr]=PAR6
    IF (PAR6<>0) THEN
      b_CZ_FRG_Prozes[PAR6]=NOT ($FLAG[F_CZ_def[1]] OR $FLAG[F_CZ_def[2]])
    ENDIF
    Weg=PAR5
    ;+X Rueckbewegung
    MyCorrWeg=$NULLFRAME
    MyCorrWeg.X=-(Weg*0.1)
    IF (Weg>9) THEN
      LIN $Pos_act:MyCorrWeg C_VEL
    ENDIF  
;
    ;ENDFOLD (Main)
;
;-----------------------------------------------------------
  DEFAULT
;  
ENDSWITCH
END
;
;ENDFOLD (Clinchen Interface)
;
;-----------------------------------------------------------
;FOLD CZ_Meldungen
DEF Clinchen_Msg(msg_nr :IN, MsgTyp :IN)
INT msg_nr
DECL CZR_MsgType MsgTyp
DECL KrlMsg_T USER_MSG
DECL KrlMsgPar_T Par[3]
DECL KrlMsgOpt_T Opt
DECL STATE_T Stat 
;
USER_MSG = { Modul[] "CZ_R_Msg", Nr -1, Msg_txt[] " "}
Opt = { VL_Stop True, Clear_P_Reset True, Log_To_DB False }
Par[1] = { Par_type #Value, Par_txt[] " " }
;
IF ((n_CZR_Handle[msg_nr]<0) OR (MsgTyp==#NotifyMsg) OR (MsgTyp==#QuitMsg)) THEN
  USER_MSG.Nr = msg_nr
  SWITCH msg_nr
    CASE 1
      USER_MSG.MSG_TXT[]="Punkt schon geklincht"
    CASE 2
	   USER_MSG.MSG_TXT[]="MyCorrOFF nicht im zulaessigen Bereich"
    CASE 3
      USER_MSG.MSG_TXT[]="FRG-Prozess (F740) fehlt"
    CASE 19
	   USER_MSG.MSG_TXT[]="Falsche Gruppen-Auswahl"  
    CASE 20
	   USER_MSG.MSG_TXT[]="P1: Falsche Auswahl"
    CASE 21
	   USER_MSG.MSG_TXT[]="P2: Falsche Auswahl" 
    CASE 22
	   USER_MSG.MSG_TXT[]="P3: Falsche Auswahl"  
    DEFAULT
      USER_MSG.MSG_TXT[]="unbekannte Meldung"
  ENDSWITCH
  SWITCH MsgTyp
    CASE #StateMsg
      n_CZR_Handle[msg_nr] = Set_KrlMsg (#State, USER_MSG, Par[], Opt) ;Ausgabe Statusmeldung
    CASE #QuitMsg
      n_CZR_Handle[msg_nr] = Set_KrlMsg (#Quit, USER_MSG, Par[], Opt) ;Ausgabe Quittierungsmeldung
      While ( Exists_KrlMsg(n_CZR_Handle[msg_nr]) )  ;Warten bis der Anwender quittiert
        Wait Sec 0.1
      Endwhile
    CASE #NotifyMsg
      n_CZR_Handle[msg_nr] = Set_KrlMsg (#Notify, USER_MSG, Par[], Opt) ;Ausgabe Hinweismeldung
    DEFAULT
      n_CZR_Handle[msg_nr] = Set_KrlMsg (#Quit, USER_MSG, Par[], Opt) ;Ausgabe Quittierungsmeldung
  ENDSWITCH
ENDIF  
END
;
;ENDFOLD (CZ Meldungen)

