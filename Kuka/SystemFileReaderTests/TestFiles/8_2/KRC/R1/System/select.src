&ACCESS RV
&REL 182
&PARAM TPVW_VERSION = 8.1.8
DEFFCT INT  SELECT (SUB :IN,NO :IN,CALL_CND :IN,ARI_OP :IN,ARI_NUM :IN,BOOL_OP :IN,BOOL_NUM :IN,MAKRO_ADV :IN)
; FOLD ;%{H} %MKUKATPVW
INT NO,ARI_NUM,BOOL_NUM,NR,ADV_RESULT
BOOL CALL_CND,MAKRO_ADV
DECL SUBTYPE SUB
DECL ARI_TYP ARI_OP
DECL BOOL_TYP BOOL_OP
DECL STATE_T STATE
INT OFFSET
ADV_RESULT = 0
IF  NOT CALL_CND THEN
GOTO PEXIT
ENDIF
SWITCH  SUB
CASE #UP
CALLBYSELECT=TRUE
SWITCH  NO  ;-- CALL UP $$1$$ --
CASE 1
   UP1 ( )
CASE 2
   UP2 ( )
CASE 3
   UP3 ( )
CASE 4
   UP4 ( )
CASE 6
   UP6 ( )
CASE 21
   UP21 ( )
CASE 22
   UP22 ( )
CASE 23
   UP23 ( )
CASE 24
   UP24 ( )
CASE 26
   UP26 ( )
CASE 52
   UP52 ( )
CASE 72
   UP72 ( )
CASE 84
   UP84 ( )
CASE 86
   UP86 ( )
CASE 111
   UP111 ( )
CASE 112
   UP112 ( )
CASE 113
   UP113 ( )
CASE 115
   UP115 ( )
CASE 120
   UP120 ( )
CASE 201
   UP201 ( )
CASE 202
   UP202 ( )
CASE 203
   UP203 ( )
CASE 204
   UP204 ( )
CASE 206
   UP206 ( )
CASE 207
   UP207 ( )
CASE 208
   UP208 ( )
CASE 209
   UP209 ( )
DEFAULT
$LOOP_MSG[]="                                                                                                                                "
OFFSET = 0
;$LOOP_MSG[]="no valid UP-Call !!!"
SWRITE($LOOP_MSG[],STATE,OFFSET,"UP%D ist nicht vorhanden",NO)
HALT
$LOOP_MSG[]="                                                                                                                                "
ENDSWITCH
CALLBYSELECT=FALSE
CASE #MAKRO
SWITCH  NO  ;-- CALL MAKRO $$1$$ --
CASE 0
   ADV_RESULT = MAKRO0 (MAKRO_ADV)
CASE 1
   ADV_RESULT = MAKRO1 (MAKRO_ADV)
CASE 2
   ADV_RESULT = MAKRO2 (MAKRO_ADV)
CASE 3
   ADV_RESULT = MAKRO3 (MAKRO_ADV)
CASE 4
   ADV_RESULT = MAKRO4 (MAKRO_ADV)
CASE 5
   ADV_RESULT = MAKRO5 (MAKRO_ADV)
CASE 6
   ADV_RESULT = MAKRO6 (MAKRO_ADV)
CASE 7
   ADV_RESULT = MAKRO7 (MAKRO_ADV)
CASE 8
   ADV_RESULT = MAKRO8 (MAKRO_ADV)
CASE 9
   ADV_RESULT = MAKRO9 (MAKRO_ADV)
CASE 10
   ADV_RESULT = MAKRO10 (MAKRO_ADV)
CASE 11
   ADV_RESULT = MAKRO11 (MAKRO_ADV)
CASE 12
   ADV_RESULT = MAKRO12 (MAKRO_ADV)
CASE 13
   ADV_RESULT = MAKRO13 (MAKRO_ADV)
CASE 14
   ADV_RESULT = MAKRO14 (MAKRO_ADV)
CASE 15
   ADV_RESULT = MAKRO15 (MAKRO_ADV)
CASE 20
   ADV_RESULT = MAKRO20 (MAKRO_ADV)
CASE 40
   ADV_RESULT = MAKRO40 (MAKRO_ADV)
CASE 50
   ADV_RESULT = MAKRO50 (MAKRO_ADV)
CASE 51
   ADV_RESULT = MAKRO51 (MAKRO_ADV)
CASE 52
   ADV_RESULT = MAKRO52 (MAKRO_ADV)
CASE 53
   ADV_RESULT = MAKRO53 (MAKRO_ADV)
CASE 57
   ADV_RESULT = MAKRO57 (MAKRO_ADV)
CASE 59
   ADV_RESULT = MAKRO59 (MAKRO_ADV)
CASE 180
   ADV_RESULT = MAKRO180 (MAKRO_ADV)
CASE 181
   ADV_RESULT = MAKRO181 (MAKRO_ADV)
CASE 182
   ADV_RESULT = MAKRO182 (MAKRO_ADV)
CASE 183
   ADV_RESULT = MAKRO183 (MAKRO_ADV)
CASE 184
   ADV_RESULT = MAKRO184 (MAKRO_ADV)
CASE 185
   ADV_RESULT = MAKRO185 (MAKRO_ADV)
CASE 186
   ADV_RESULT = MAKRO186 (MAKRO_ADV)
CASE 187
   ADV_RESULT = MAKRO187 (MAKRO_ADV)
CASE 340
   ADV_RESULT = MAKRO340 (MAKRO_ADV)
CASE 341
   ADV_RESULT = MAKRO341 (MAKRO_ADV)
CASE 342
   ADV_RESULT = MAKRO342 (MAKRO_ADV)
CASE 343
   ADV_RESULT = MAKRO343 (MAKRO_ADV)
CASE 344
   ADV_RESULT = MAKRO344 (MAKRO_ADV)
CASE 345
   ADV_RESULT = MAKRO345 (MAKRO_ADV)
CASE 346
   ADV_RESULT = MAKRO346 (MAKRO_ADV)
CASE 347
   ADV_RESULT = MAKRO347 (MAKRO_ADV)
CASE 348
   ADV_RESULT = MAKRO348 (MAKRO_ADV)
CASE 349
   ADV_RESULT = MAKRO349 (MAKRO_ADV)
CASE 350
   ADV_RESULT = MAKRO350 (MAKRO_ADV)
CASE 351
   ADV_RESULT = MAKRO351 (MAKRO_ADV)
CASE 352
   ADV_RESULT = MAKRO352 (MAKRO_ADV)
CASE 353
   ADV_RESULT = MAKRO353 (MAKRO_ADV)
CASE 354
   ADV_RESULT = MAKRO354 (MAKRO_ADV)
CASE 355
   ADV_RESULT = MAKRO355 (MAKRO_ADV)
CASE 356
   ADV_RESULT = MAKRO356 (MAKRO_ADV)
CASE 357
   ADV_RESULT = MAKRO357 (MAKRO_ADV)
CASE 358
   ADV_RESULT = MAKRO358 (MAKRO_ADV)
CASE 359
   ADV_RESULT = MAKRO359 (MAKRO_ADV)
CASE 360
   ADV_RESULT = MAKRO360 (MAKRO_ADV)
CASE 361
   ADV_RESULT = MAKRO361 (MAKRO_ADV)
CASE 362
   ADV_RESULT = MAKRO362 (MAKRO_ADV)
CASE 363
   ADV_RESULT = MAKRO363 (MAKRO_ADV)
CASE 364
   ADV_RESULT = MAKRO364 (MAKRO_ADV)
CASE 365
   ADV_RESULT = MAKRO365 (MAKRO_ADV)
CASE 420
   ADV_RESULT = MAKRO420 (MAKRO_ADV)
CASE 421
   ADV_RESULT = MAKRO421 (MAKRO_ADV)
CASE 422
   ADV_RESULT = MAKRO422 (MAKRO_ADV)
CASE 430
   ADV_RESULT = MAKRO430 (MAKRO_ADV)
CASE 432
   ADV_RESULT = MAKRO432 (MAKRO_ADV)
CASE 433
   ADV_RESULT = MAKRO433 (MAKRO_ADV)
CASE 434
   ADV_RESULT = MAKRO434 (MAKRO_ADV)
CASE 435
   ADV_RESULT = MAKRO435 (MAKRO_ADV)
DEFAULT
$LOOP_MSG[]="                                                                                                                                "
;$LOOP_MSG[]="no valid Makro-Call !!!"
OFFSET = 0
SWRITE($LOOP_MSG[],STATE,OFFSET,"Makro%D ist nicht vorhanden",NO)
HALT
$LOOP_MSG[]="                                                                                                                                "
ENDSWITCH
CASE #CYC_UP
NR=0
WHILE   NOT (CHECK_BOOL(BOOL_OP,BOOL_NUM) OR CHECK_ARI(NR,ARI_OP,ARI_NUM))
NR=NR+1
CALLBYSELECT=TRUE
SWITCH  NO  ;-- CALL UP $$2$$ --
CASE 1
   UP1 ( )
CASE 2
   UP2 ( )
CASE 3
   UP3 ( )
CASE 4
   UP4 ( )
CASE 6
   UP6 ( )
CASE 21
   UP21 ( )
CASE 22
   UP22 ( )
CASE 23
   UP23 ( )
CASE 24
   UP24 ( )
CASE 26
   UP26 ( )
CASE 52
   UP52 ( )
CASE 72
   UP72 ( )
CASE 84
   UP84 ( )
CASE 86
   UP86 ( )
CASE 111
   UP111 ( )
CASE 112
   UP112 ( )
CASE 113
   UP113 ( )
CASE 115
   UP115 ( )
CASE 120
   UP120 ( )
CASE 201
   UP201 ( )
CASE 202
   UP202 ( )
CASE 203
   UP203 ( )
CASE 204
   UP204 ( )
CASE 206
   UP206 ( )
CASE 207
   UP207 ( )
CASE 208
   UP208 ( )
CASE 209
   UP209 ( )
DEFAULT
$LOOP_MSG[]="                                                                                                                                "
;$LOOP_MSG[]="no valid UP-Call !!!"
OFFSET = 0
SWRITE($LOOP_MSG[],STATE,OFFSET,"UP%D ist nicht vorhanden",NO)
HALT
$LOOP_MSG[]="                                                                                                                                "
ENDSWITCH
CALLBYSELECT=FALSE
ENDWHILE
CASE #CYC_MAKRO
NR=0
WHILE   NOT (CHECK_BOOL(BOOL_OP,BOOL_NUM) OR CHECK_ARI(NR,ARI_OP,ARI_NUM))
NR=NR+1
SWITCH  NO  ;-- CALL MAKRO $$2$$ --
CASE 0
   ADV_RESULT = MAKRO0 (MAKRO_ADV)
CASE 1
   ADV_RESULT = MAKRO1 (MAKRO_ADV)
CASE 2
   ADV_RESULT = MAKRO2 (MAKRO_ADV)
CASE 3
   ADV_RESULT = MAKRO3 (MAKRO_ADV)
CASE 4
   ADV_RESULT = MAKRO4 (MAKRO_ADV)
CASE 5
   ADV_RESULT = MAKRO5 (MAKRO_ADV)
CASE 6
   ADV_RESULT = MAKRO6 (MAKRO_ADV)
CASE 7
   ADV_RESULT = MAKRO7 (MAKRO_ADV)
CASE 8
   ADV_RESULT = MAKRO8 (MAKRO_ADV)
CASE 9
   ADV_RESULT = MAKRO9 (MAKRO_ADV)
CASE 10
   ADV_RESULT = MAKRO10 (MAKRO_ADV)
CASE 11
   ADV_RESULT = MAKRO11 (MAKRO_ADV)
CASE 12
   ADV_RESULT = MAKRO12 (MAKRO_ADV)
CASE 13
   ADV_RESULT = MAKRO13 (MAKRO_ADV)
CASE 14
   ADV_RESULT = MAKRO14 (MAKRO_ADV)
CASE 15
   ADV_RESULT = MAKRO15 (MAKRO_ADV)
CASE 20
   ADV_RESULT = MAKRO20 (MAKRO_ADV)
CASE 40
   ADV_RESULT = MAKRO40 (MAKRO_ADV)
CASE 50
   ADV_RESULT = MAKRO50 (MAKRO_ADV)
CASE 51
   ADV_RESULT = MAKRO51 (MAKRO_ADV)
CASE 52
   ADV_RESULT = MAKRO52 (MAKRO_ADV)
CASE 53
   ADV_RESULT = MAKRO53 (MAKRO_ADV)
CASE 57
   ADV_RESULT = MAKRO57 (MAKRO_ADV)
CASE 59
   ADV_RESULT = MAKRO59 (MAKRO_ADV)
CASE 180
   ADV_RESULT = MAKRO180 (MAKRO_ADV)
CASE 181
   ADV_RESULT = MAKRO181 (MAKRO_ADV)
CASE 182
   ADV_RESULT = MAKRO182 (MAKRO_ADV)
CASE 183
   ADV_RESULT = MAKRO183 (MAKRO_ADV)
CASE 184
   ADV_RESULT = MAKRO184 (MAKRO_ADV)
CASE 185
   ADV_RESULT = MAKRO185 (MAKRO_ADV)
CASE 186
   ADV_RESULT = MAKRO186 (MAKRO_ADV)
CASE 187
   ADV_RESULT = MAKRO187 (MAKRO_ADV)
CASE 340
   ADV_RESULT = MAKRO340 (MAKRO_ADV)
CASE 341
   ADV_RESULT = MAKRO341 (MAKRO_ADV)
CASE 342
   ADV_RESULT = MAKRO342 (MAKRO_ADV)
CASE 343
   ADV_RESULT = MAKRO343 (MAKRO_ADV)
CASE 344
   ADV_RESULT = MAKRO344 (MAKRO_ADV)
CASE 345
   ADV_RESULT = MAKRO345 (MAKRO_ADV)
CASE 346
   ADV_RESULT = MAKRO346 (MAKRO_ADV)
CASE 347
   ADV_RESULT = MAKRO347 (MAKRO_ADV)
CASE 348
   ADV_RESULT = MAKRO348 (MAKRO_ADV)
CASE 349
   ADV_RESULT = MAKRO349 (MAKRO_ADV)
CASE 350
   ADV_RESULT = MAKRO350 (MAKRO_ADV)
CASE 351
   ADV_RESULT = MAKRO351 (MAKRO_ADV)
CASE 352
   ADV_RESULT = MAKRO352 (MAKRO_ADV)
CASE 353
   ADV_RESULT = MAKRO353 (MAKRO_ADV)
CASE 354
   ADV_RESULT = MAKRO354 (MAKRO_ADV)
CASE 355
   ADV_RESULT = MAKRO355 (MAKRO_ADV)
CASE 356
   ADV_RESULT = MAKRO356 (MAKRO_ADV)
CASE 357
   ADV_RESULT = MAKRO357 (MAKRO_ADV)
CASE 358
   ADV_RESULT = MAKRO358 (MAKRO_ADV)
CASE 359
   ADV_RESULT = MAKRO359 (MAKRO_ADV)
CASE 360
   ADV_RESULT = MAKRO360 (MAKRO_ADV)
CASE 361
   ADV_RESULT = MAKRO361 (MAKRO_ADV)
CASE 362
   ADV_RESULT = MAKRO362 (MAKRO_ADV)
CASE 363
   ADV_RESULT = MAKRO363 (MAKRO_ADV)
CASE 364
   ADV_RESULT = MAKRO364 (MAKRO_ADV)
CASE 365
   ADV_RESULT = MAKRO365 (MAKRO_ADV)
CASE 420
   ADV_RESULT = MAKRO420 (MAKRO_ADV)
CASE 421
   ADV_RESULT = MAKRO421 (MAKRO_ADV)
CASE 422
   ADV_RESULT = MAKRO422 (MAKRO_ADV)
CASE 430
   ADV_RESULT = MAKRO430 (MAKRO_ADV)
CASE 432
   ADV_RESULT = MAKRO432 (MAKRO_ADV)
CASE 433
   ADV_RESULT = MAKRO433 (MAKRO_ADV)
CASE 434
   ADV_RESULT = MAKRO434 (MAKRO_ADV)
CASE 435
   ADV_RESULT = MAKRO435 (MAKRO_ADV)
DEFAULT
$LOOP_MSG[]="                                                                                                                                "
;$LOOP_MSG[]="no valid Makro-Call !!!"
OFFSET = 0
SWRITE($LOOP_MSG[],STATE,OFFSET,"Makro%D ist nicht vorhanden",NO)
HALT
$LOOP_MSG[]="                                                                                                                                "
ENDSWITCH
ENDWHILE
DEFAULT
ENDSWITCH
PEXIT:
RETURN ADV_RESULT
ENDFCT
;ENDFOLD
; FOLD ;%{H}
DEF TIMEOUT_UP (NR: IN)
DECL STATE_T STATE
INT OFFSET, NR
IF $PRO_MOVE THEN
BRAKE F
ENDIF
$LOOP_MSG[]="                                                                                                                                "
OFFSET=11
$LOOP_MSG[]="TIMEOUT IN    "
SWRITE($LOOP_MSG[],STATE,OFFSET,"MAKRO%D",NR)
$LOOP_CONT=TRUE
WAIT FOR (NOT ($LOOP_CONT) AND ($MODE_OP<>#EX))
$LOOP_MSG[]="                                                                                                                                "
END
;ENDFOLD
; FOLD ;%{H}
DEFFCT  BOOL CHECK_BOOL(BOOLOP :IN,BOOLOP_NUM :IN)
INT BOOLOP_NUM
DECL BOOL_TYP BOOLOP
BOOL STOP_BOOL
SWITCH  BOOLOP
CASE #EIN
STOP_BOOL=TRUE
CASE #AUS
STOP_BOOL=FALSE
CASE #E
STOP_BOOL=$IN[BOOLOP_NUM]
CASE #NOT_E
STOP_BOOL= NOT $IN[BOOLOP_NUM]
CASE #A
STOP_BOOL=$OUT[BOOLOP_NUM]
CASE #NOT_A
STOP_BOOL= NOT $OUT[BOOLOP_NUM]
CASE #M
STOP_BOOL=$CYCFLAG[BOOLOP_NUM]
CASE #NOT_M
STOP_BOOL= NOT $CYCFLAG[BOOLOP_NUM]
CASE #F
STOP_BOOL=$FLAG[BOOLOP_NUM]
CASE #NOT_F
STOP_BOOL= NOT $FLAG[BOOLOP_NUM]
CASE #T
STOP_BOOL=$TIMER_FLAG[BOOLOP_NUM]
CASE #NOT_T
STOP_BOOL= NOT $TIMER_FLAG[BOOLOP_NUM]
CASE #S
STOP_BOOL=S[BOOLOP_NUM]
CASE #NOT_S
STOP_BOOL= NOT S[BOOLOP_NUM]
ENDSWITCH
RETURN  (STOP_BOOL)
ENDFCT
;ENDFOLD
; FOLD ;%{H}
DEFFCT  BOOL CHECK_ARI(ACT_NR :IN, ARIOP :IN ,ARIOP_NUM :IN)
INT ACT_NR, ARIOP_NUM, MAX_NR
DECL ARI_TYP ARIOP
SWITCH  ARIOP
CASE #NUM
MAX_NR=ARIOP_NUM
CASE #COUNT
MAX_NR=$COUNT_I[ARIOP_NUM]
CASE #BIN
MAX_NR=$B_OUT[ARIOP_NUM]
CASE #BININ
MAX_NR=ARIOP_NUM
CASE #ANA
MAX_NR=$ANOUT[ARIOP_NUM]*1000
CASE #ANAIN
MAX_NR=$ANIN[ARIOP_NUM]*1000
CASE #TIMER
MAX_NR=$TIMER[ARIOP_NUM]*0.01
CASE #PROCPAR
MAX_NR=PROCPAR[ARIOP_NUM]
ENDSWITCH
RETURN (ACT_NR>=MAX_NR)
ENDFCT
;ENDFOLD