&ACCESS  RV
&COMMENT VW310-6, THIL
&PARAM DISKPATH = Folgen
&PARAM EDITMASK = Folge999[1-999]
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM TPVW_VERSION = 8.3.18
&REL 3
DEF FOLGE3()
   ; FOLD ;%{H} %MKUKATPVW
   SPS_N=-1
   VW (#VW_AUE_INIT,TRUE)
   PENTER:
   INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
   INTERRUPT ON 10
   INT10=TRUE
   ; ENDFOLD
   ;FOLD PTP VB=10% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:10, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:0, 20:-1, 21:1
      ;FOLD 1: A15 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A15 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 2: SPSMAKRO0 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO0 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD {H}
         SPS_FERTIG=FALSE
         INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
         INTERRUPT ON 10
         INT10=TRUE
         VW(#VW_INIT,TRUE)
         VW_USR_R (#USR_INIT)
         TRIGGER  WHEN DISTANCE=1 DELAY=-0.1 DO P0_MERKER=TRUE
         VW_MPARA_ACT=P0_D
         Act_P1 = P0
         Act_P2 = P0
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(1) PRIO=-1
         PTP P0
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD Warte auf Folgenstart ;%{SE}%MKUKATPVW,%C,%V
      VW(#VW_AUE_WAIT,TRUE )
      IF N_VW==TRUE THEN
         GOTO PEXIT
      ENDIF
   ;ENDFOLD
   ;FOLD -- VW310-6, THIL -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:VW310-6, THIL
      ;FOLD {H}
         M_COMMENT("VW310-6, THIL")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- 415600R01 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:415600R01
      ;FOLD {H}
         M_COMMENT("415600R01")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:1, 20:-1, 21:2
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: t1 ( EIN ) = 0[1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VTASG %P 2:t1 ( EIN ) = 0[1/10Sek],3:TASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO50 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: A41 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A41 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: A43 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A43 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 7: A56 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A56 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 8: A68 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A68 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: A72 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A72 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 10: A75 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A75 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 11: A76 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: A80 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A80 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 13: F930 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F930 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 14: F931 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F931 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 15: F932 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F932 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 16: F933 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F933 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 17: F934 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F934 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 18: A1521 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1521 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 19: A1522 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1522 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 20: A1523 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1523 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 21: A1545 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1545 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 22: A15 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A15 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 23: WARTE BIS !E1534 & !E1535 + !F346 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS !E1534 & !E1535 + !F346,3:WBOASG
      ;ENDFOLD
      ;FOLD 24: WARTE BIS E1521 & !E1522 & !E1523 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E1521 & !E1522 & !E1523,3:WBOASG
      ;ENDFOLD
      ;FOLD 25: bin10 ( EIN ) = 11 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:bin10 ( EIN ) = 11,3:ARIASG
      ;ENDFOLD
      ;FOLD 26: bin11 ( EIN ) = 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:bin11 ( EIN ) = 1,3:ARIASG
      ;ENDFOLD
      ;FOLD 27: WARTE ( EIN ) ZEIT 1 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VWTASG %P 2:WARTE ( EIN ) ZEIT 1 [1/10Sek],3:WTASG
      ;ENDFOLD
      ;FOLD 28: A1534 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A1534 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 29: SPSMAKRO182 = E1534 & !E15 + E163 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO182 = E1534 & !E15 + E163,3:MAKRO
      ;ENDFOLD
      ;FOLD 30: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 31: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 32: FB PSPS = M30 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P1_D
         Act_P1 = P1
         Act_P2 = P1
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(2) PRIO=-1
         PTP P1
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP1 HO_Behaelter_links -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP1 HO_Behaelter_links
      ;FOLD {H}
         M_COMMENT("UP1 HO_Behaelter_links")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP2 HO_Behaelter_rechts -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP2 HO_Behaelter_rechts
      ;FOLD {H}
         M_COMMENT("UP2 HO_Behaelter_rechts")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:2, 20:-1, 21:3
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: A80 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A80 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO52 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO52 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: WARTE BIS M14 & M77 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M14 & M77,3:WBOASG
      ;ENDFOLD
      ;FOLD 6: F933 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F933 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 7: F934 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F934 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 8: F9 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F9 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: F10 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F10 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 10: F17 = !E15 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F17 = !E15,3:BOASG
      ;ENDFOLD
      ;FOLD 11: F18 = !E15 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F18 = !E15,3:BOASG
      ;ENDFOLD
      ;FOLD 12: F54 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F54 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 13: SPSMAKRO342 = M14 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO342 = M14,3:MAKRO
      ;ENDFOLD
      ;FOLD 14: SPSMAKRO340 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 15: SPSMAKRO430 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO430 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 16: F841 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F841 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 17: F842 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F842 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 18: SPSMAKRO433 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO433 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 19: WARTE BIS M14 & M30 & M47 & M49 & M77 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M14 & M30 & M47 & M49 & M77,3:WBOASG
      ;ENDFOLD
      ;FOLD 20: SPSMAKRO430 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO430 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 21: WARTE BIS (E57 & !E58 + E59 & !E60) & E76 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS (E57 & !E58 + E59 & !E60) & E76,3:WBOASG
      ;ENDFOLD
      ;FOLD 22: F933 = E76 & E57 & !E58 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F933 = E76 & E57 & !E58,3:BOASG
      ;ENDFOLD
      ;FOLD 23: F934 = E76 & E59 & !E60 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F934 = E76 & E59 & !E60,3:BOASG
      ;ENDFOLD
      ;FOLD 24: WARTE BIS F933 + F934 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS F933 + F934,3:WBOASG
      ;ENDFOLD
      ;FOLD 25: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 26: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 27: FB PSPS = M14 & M30 & M47 & M49 & M77 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M14 & M30 & M47 & M49 & M77,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP21 = F933 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP21 = F933,3:UP
      ;ENDFOLD
      ;FOLD UP22 = F934 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP22 = F934,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P2_D
         Act_P1 = P2
         Act_P2 = P2
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(3) PRIO=-1
         PTP P2
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,21,$FLAG[933])
         SEL_RES=SELECT(#UP,22,$FLAG[934])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP4 Kleben -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP4 Kleben
      ;FOLD {H}
         M_COMMENT("UP4 Kleben")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:3, 20:-1, 21:4
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: A18 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A18 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 4: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 5: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 6: FB PSPS = M3 & M30 & M48 & M49 & M65 & M66 & M77 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M3 & M30 & M48 & M49 & M65 & M66 & M77,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP31 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP31 = EIN,3:UP
      ;ENDFOLD
      ;FOLD UP71 = E162 + F343 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP71 = E162 + F343,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P3_D
         Act_P1 = P3
         Act_P2 = P3
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(4) PRIO=-1
         PTP P3
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,31,TRUE)
         SEL_RES=SELECT(#UP,71,$IN[162] OR $FLAG[343])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- UP3 AB_AFO415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:UP3 AB_AFO415600
      ;FOLD {H}
         M_COMMENT("UP3 AB_AFO415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Halt im Wartebereich -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Halt im Wartebereich
      ;FOLD {H}
         M_COMMENT("Halt im Wartebereich")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=5[1/100s] PU ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: PU, 19:4, 20:-1, 21:5
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: A18 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A18 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 4: WARTE BIS E23 & !E18 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23 & !E18,3:WBOASG
      ;ENDFOLD
      ;FOLD 5: A18 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A18 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 6: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 7: FB PSPS = M30 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30,3:FBPSPS
      ;ENDFOLD
      ;FOLD UP3 = M3 & !M14 + E15 ;%{SE}%MKUKATPVW %CVW_SPS %VUP %P 2:UP3 = M3 & !M14 + E15,3:UP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P4_D
         Act_P1 = P4
         Act_P2 = P4
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(5) PRIO=-1
         PTP P4
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         SEL_RES=SELECT(#UP,3,$CYCFLAG[3] AND NOT $CYCFLAG[14] OR $IN[15])
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:5, 20:-1, 21:6
      ;FOLD 1: FB PSPS = M14 & M30 & M47 & M77 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M14 & M30 & M47 & M77,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P5_D
         Act_P1 = P5
         Act_P2 = P5
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(6) PRIO=-1
         PTP P5
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:6, 20:-1, 21:7
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: SPSMAKRO15 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO15 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 3: t1 ( EIN) = STOP ;%{SE}%MKUKATPVW %CVW_SPS %VTSTOP %P 2:t1 ( EIN) = STOP,3:TSTOP
      ;ENDFOLD
      ;FOLD 4: t2 ( EIN ) = t1 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VTASG %P 2:t2 ( EIN ) = t1 [1/10Sek],3:TASG
      ;ENDFOLD
      ;FOLD 5: t2 ( EIN) = STOP ;%{SE}%MKUKATPVW %CVW_SPS %VTSTOP %P 2:t2 ( EIN) = STOP,3:TSTOP
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P6_D
         Act_P1 = P6
         Act_P2 = P6
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(7) PRIO=-1
         PTP P6
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
   VW (#VW_AUE_END,TRUE)
   GOTO PENTER
   PEXIT:
END
DEF SPS_TRIG(NO :IN)
   INT NO
   INT VW_STOP
   BOOL UES
   BOOL ANA_UES
   BOOL ANA_TRIG
   VW_STOP=$VW_PSPS_STOP
   UES=FALSE
   ANA_UES=FALSE
   ANA_TRIG=FALSE
   IF ((NO>10000) AND (NO<20000)) THEN
      NO=NO-10000
      UES=TRUE
   ENDIF
   IF ((NO>20000) AND (NO<30000)) THEN
      NO=NO-20000
      ANA_TRIG=TRUE
   ENDIF
   IF NO>30000 THEN
      NO=NO-30000
      ANA_UES=TRUE
      ANA_TRIG=TRUE
   ENDIF
   ; FOLD ;%{H}
   IF ((VW_STOP B_AND 'B0001') > 0) THEN
      ;-- Trigger vorzeitig geschaltet (delay < 0) oder MStep
      IF (((VW_STOP B_AND 'B0110') > 0) AND ($MODE_OP<>#EX)) THEN
         ;-- MStep oder BCO Bewegung
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (SEARCH_END) THEN
      SEARCH_END = FALSE
      INTERRUPT OFF 39
   ENDIF
   SWITCH NO
      CASE 1
         ;FOLD SPS_TRIG1 {H}
            $OUT[15] = TRUE
            SEL_RES=SELECT(#MAKRO,0,TRUE,,,,,FALSE)
         ;ENDFOLD
      CASE 2
         ;FOLD SPS_TRIG2 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            VW(#SET_TIME,TRUE,1,0,0)
            SEL_RES=SELECT(#MAKRO,50,TRUE,,,,,FALSE)
            $OUT[41] = TRUE
            $OUT[43] = TRUE
            $OUT[56] = TRUE
            $OUT[68] = TRUE
            $OUT[72] = TRUE
            $OUT[75] = TRUE
            $OUT[76] = TRUE
            $OUT[80] = TRUE
            $FLAG[930] = FALSE
            $FLAG[931] = FALSE
            $FLAG[932] = FALSE
            $FLAG[933] = FALSE
            $FLAG[934] = FALSE
            $OUT[1521] = TRUE
            $OUT[1522] = FALSE
            $OUT[1523] = FALSE
            $OUT[1545] = TRUE
            $OUT[15] = FALSE
            $LOOP_MSG[]="!E1534 & !E1535 + !F346"
            $LOOP_CONT=TRUE
            WAIT FOR (NOT $IN[1534] AND NOT $IN[1535] OR NOT $FLAG[346]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E1521 & !E1522 & !E1523"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[1521] AND NOT $IN[1522] AND NOT $IN[1523]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            VW(#BINOUT,TRUE,10,11)
            VW(#BINOUT,TRUE,11,1)
            $LOOP_MSG[]="Wartezeit..."
            $LOOP_CONT=TRUE
            WAIT FOR (FALSE OR TIMER_LIMIT ((1)*0.1) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX)))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[1534] = TRUE
            SEL_RES=SELECT(#MAKRO,182,$IN[1534] AND NOT $IN[15] OR $IN[163],,,,,FALSE)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 3
         ;FOLD SPS_TRIG3 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $OUT[80] = TRUE
            SEL_RES=SELECT(#MAKRO,52,TRUE,,,,,FALSE)
            $LOOP_MSG[]="M14 & M77"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[14] AND $CYCFLAG[77]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[933] = FALSE
            $FLAG[934] = FALSE
            $FLAG[9] = TRUE
            $FLAG[10] = TRUE
            $FLAG[17] = NOT $IN[15]
            $FLAG[18] = NOT $IN[15]
            $FLAG[54] = TRUE
            SEL_RES=SELECT(#MAKRO,342,$CYCFLAG[14],,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,TRUE,,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,430,TRUE,,,,,FALSE)
            $FLAG[841] = TRUE
            $FLAG[842] = TRUE
            SEL_RES=SELECT(#MAKRO,433,TRUE,,,,,FALSE)
            $LOOP_MSG[]="M14 & M30 & M47 & M49 & M77"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[14] AND $CYCFLAG[30] AND $CYCFLAG[47] AND $CYCFLAG[49] AND $CYCFLAG[77]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            SEL_RES=SELECT(#MAKRO,430,TRUE,,,,,FALSE)
            $LOOP_MSG[]="(E57 & !E58 + E59 & !E60) & E76"
            $LOOP_CONT=TRUE
            WAIT FOR (($IN[57] AND NOT $IN[58] OR $IN[59] AND NOT $IN[60]) AND $IN[76]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[933] = $IN[76] AND $IN[57] AND NOT $IN[58]
            $FLAG[934] = $IN[76] AND $IN[59] AND NOT $IN[60]
            $LOOP_MSG[]="F933 + F934"
            $LOOP_CONT=TRUE
            WAIT FOR ($FLAG[933] OR $FLAG[934]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[14] AND $CYCFLAG[30] AND $CYCFLAG[47] AND $CYCFLAG[49] AND $CYCFLAG[77]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 4
         ;FOLD SPS_TRIG4 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $OUT[18] = TRUE
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[3] AND $CYCFLAG[30] AND $CYCFLAG[48] AND $CYCFLAG[49] AND $CYCFLAG[65] AND $CYCFLAG[66] AND $CYCFLAG[77]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 5
         ;FOLD SPS_TRIG5 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $OUT[18] = TRUE
            $LOOP_MSG[]="E23 & !E18"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23] AND NOT $IN[18]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[18] = FALSE
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 6
         ;FOLD SPS_TRIG6 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[14] AND $CYCFLAG[30] AND $CYCFLAG[47] AND $CYCFLAG[77]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 7
         ;FOLD SPS_TRIG7 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            SEL_RES=SELECT(#MAKRO,15,TRUE,,,,,FALSE)
            VW(#SET_TIME,TRUE,1,1,0)
            VW(#SET_TIME,TRUE,2,0,$TIMER[1]*0.01)
            VW(#SET_TIME,TRUE,2,1,0)
         ;ENDFOLD
      CASE 8
         ;FOLD SPS_TRIG8 {H}
         ;ENDFOLD
      CASE 9
         ;FOLD SPS_TRIG9 {H}
         ;ENDFOLD
      CASE 10
         ;FOLD SPS_TRIG10 {H}
         ;ENDFOLD
      CASE 11
         ;FOLD SPS_TRIG11 {H}
         ;ENDFOLD
      CASE 12
         ;FOLD SPS_TRIG12 {H}
         ;ENDFOLD
      CASE 13
         ;FOLD SPS_TRIG13 {H}
         ;ENDFOLD
      CASE 14
         ;FOLD SPS_TRIG14 {H}
         ;ENDFOLD
      CASE 15
         ;FOLD SPS_TRIG15 {H}
         ;ENDFOLD
      CASE 16
         ;FOLD SPS_TRIG16 {H}
         ;ENDFOLD
      CASE 17
         ;FOLD SPS_TRIG17 {H}
         ;ENDFOLD
      CASE 18
         ;FOLD SPS_TRIG18 {H}
         ;ENDFOLD
      CASE 19
         ;FOLD SPS_TRIG19 {H}
         ;ENDFOLD
      CASE 20
         ;FOLD SPS_TRIG20 {H}
         ;ENDFOLD
      CASE 21
         ;FOLD SPS_TRIG21 {H}
         ;ENDFOLD
      CASE 22
         ;FOLD SPS_TRIG22 {H}
         ;ENDFOLD
      CASE 23
         ;FOLD SPS_TRIG23 {H}
         ;ENDFOLD
      CASE 24
         ;FOLD SPS_TRIG24 {H}
         ;ENDFOLD
      CASE 25
         ;FOLD SPS_TRIG25 {H}
         ;ENDFOLD
      CASE 26
         ;FOLD SPS_TRIG26 {H}
         ;ENDFOLD
      CASE 27
         ;FOLD SPS_TRIG27 {H}
         ;ENDFOLD
      CASE 28
         ;FOLD SPS_TRIG28 {H}
         ;ENDFOLD
      CASE 29
         ;FOLD SPS_TRIG29 {H}
         ;ENDFOLD
      CASE 30
         ;FOLD SPS_TRIG30 {H}
         ;ENDFOLD
      CASE 31
         ;FOLD SPS_TRIG31 {H}
         ;ENDFOLD
      CASE 32
         ;FOLD SPS_TRIG32 {H}
         ;ENDFOLD
      CASE 33
         ;FOLD SPS_TRIG33 {H}
         ;ENDFOLD
      CASE 34
         ;FOLD SPS_TRIG34 {H}
         ;ENDFOLD
      CASE 35
         ;FOLD SPS_TRIG35 {H}
         ;ENDFOLD
      CASE 36
         ;FOLD SPS_TRIG36 {H}
         ;ENDFOLD
      CASE 37
         ;FOLD SPS_TRIG37 {H}
         ;ENDFOLD
      CASE 38
         ;FOLD SPS_TRIG38 {H}
         ;ENDFOLD
      CASE 39
         ;FOLD SPS_TRIG39 {H}
         ;ENDFOLD
      CASE 40
         ;FOLD SPS_TRIG40 {H}
         ;ENDFOLD
      CASE 41
         ;FOLD SPS_TRIG41 {H}
         ;ENDFOLD
      CASE 42
         ;FOLD SPS_TRIG42 {H}
         ;ENDFOLD
      CASE 43
         ;FOLD SPS_TRIG43 {H}
         ;ENDFOLD
      CASE 44
         ;FOLD SPS_TRIG44 {H}
         ;ENDFOLD
      CASE 45
         ;FOLD SPS_TRIG45 {H}
         ;ENDFOLD
      CASE 46
         ;FOLD SPS_TRIG46 {H}
         ;ENDFOLD
      CASE 47
         ;FOLD SPS_TRIG47 {H}
         ;ENDFOLD
      CASE 48
         ;FOLD SPS_TRIG48 {H}
         ;ENDFOLD
      CASE 49
         ;FOLD SPS_TRIG49 {H}
         ;ENDFOLD
      CASE 50
         ;FOLD SPS_TRIG50 {H}
         ;ENDFOLD
      CASE 51
         ;FOLD SPS_TRIG51 {H}
         ;ENDFOLD
      CASE 52
         ;FOLD SPS_TRIG52 {H}
         ;ENDFOLD
      CASE 53
         ;FOLD SPS_TRIG53 {H}
         ;ENDFOLD
      CASE 54
         ;FOLD SPS_TRIG54 {H}
         ;ENDFOLD
      CASE 55
         ;FOLD SPS_TRIG55 {H}
         ;ENDFOLD
      CASE 56
         ;FOLD SPS_TRIG56 {H}
         ;ENDFOLD
      CASE 57
         ;FOLD SPS_TRIG57 {H}
         ;ENDFOLD
      CASE 58
         ;FOLD SPS_TRIG58 {H}
         ;ENDFOLD
      CASE 59
         ;FOLD SPS_TRIG59 {H}
         ;ENDFOLD
      CASE 60
         ;FOLD SPS_TRIG60 {H}
         ;ENDFOLD
      CASE 61
         ;FOLD SPS_TRIG61 {H}
         ;ENDFOLD
      CASE 62
         ;FOLD SPS_TRIG62 {H}
         ;ENDFOLD
      CASE 63
         ;FOLD SPS_TRIG63 {H}
         ;ENDFOLD
      CASE 64
         ;FOLD SPS_TRIG64 {H}
         ;ENDFOLD
      CASE 65
         ;FOLD SPS_TRIG65 {H}
         ;ENDFOLD
      CASE 66
         ;FOLD SPS_TRIG66 {H}
         ;ENDFOLD
      CASE 67
         ;FOLD SPS_TRIG67 {H}
         ;ENDFOLD
      CASE 68
         ;FOLD SPS_TRIG68 {H}
         ;ENDFOLD
      CASE 69
         ;FOLD SPS_TRIG69 {H}
         ;ENDFOLD
      CASE 70
         ;FOLD SPS_TRIG70 {H}
         ;ENDFOLD
      CASE 71
         ;FOLD SPS_TRIG71 {H}
         ;ENDFOLD
      CASE 72
         ;FOLD SPS_TRIG72 {H}
         ;ENDFOLD
      CASE 73
         ;FOLD SPS_TRIG73 {H}
         ;ENDFOLD
      CASE 74
         ;FOLD SPS_TRIG74 {H}
         ;ENDFOLD
      CASE 75
         ;FOLD SPS_TRIG75 {H}
         ;ENDFOLD
      CASE 76
         ;FOLD SPS_TRIG76 {H}
         ;ENDFOLD
      CASE 77
         ;FOLD SPS_TRIG77 {H}
         ;ENDFOLD
      CASE 78
         ;FOLD SPS_TRIG78 {H}
         ;ENDFOLD
      CASE 79
         ;FOLD SPS_TRIG79 {H}
         ;ENDFOLD
      CASE 80
         ;FOLD SPS_TRIG80 {H}
         ;ENDFOLD
      CASE 81
         ;FOLD SPS_TRIG81 {H}
         ;ENDFOLD
      CASE 82
         ;FOLD SPS_TRIG82 {H}
         ;ENDFOLD
      CASE 83
         ;FOLD SPS_TRIG83 {H}
         ;ENDFOLD
      CASE 84
         ;FOLD SPS_TRIG84 {H}
         ;ENDFOLD
      CASE 85
         ;FOLD SPS_TRIG85 {H}
         ;ENDFOLD
      CASE 86
         ;FOLD SPS_TRIG86 {H}
         ;ENDFOLD
      CASE 87
         ;FOLD SPS_TRIG87 {H}
         ;ENDFOLD
      CASE 88
         ;FOLD SPS_TRIG88 {H}
         ;ENDFOLD
      CASE 89
         ;FOLD SPS_TRIG89 {H}
         ;ENDFOLD
      CASE 90
         ;FOLD SPS_TRIG90 {H}
         ;ENDFOLD
      CASE 91
         ;FOLD SPS_TRIG91 {H}
         ;ENDFOLD
      CASE 92
         ;FOLD SPS_TRIG92 {H}
         ;ENDFOLD
      CASE 93
         ;FOLD SPS_TRIG93 {H}
         ;ENDFOLD
      CASE 94
         ;FOLD SPS_TRIG94 {H}
         ;ENDFOLD
      CASE 95
         ;FOLD SPS_TRIG95 {H}
         ;ENDFOLD
      CASE 96
         ;FOLD SPS_TRIG96 {H}
         ;ENDFOLD
      CASE 97
         ;FOLD SPS_TRIG97 {H}
         ;ENDFOLD
      CASE 98
         ;FOLD SPS_TRIG98 {H}
         ;ENDFOLD
      CASE 99
         ;FOLD SPS_TRIG99 {H}
         ;ENDFOLD
      CASE 100
         ;FOLD SPS_TRIG100 {H}
         ;ENDFOLD
      CASE 101
         ;FOLD SPS_TRIG101 {H}
         ;ENDFOLD
      CASE 102
         ;FOLD SPS_TRIG102 {H}
         ;ENDFOLD
      CASE 103
         ;FOLD SPS_TRIG103 {H}
         ;ENDFOLD
      CASE 104
         ;FOLD SPS_TRIG104 {H}
         ;ENDFOLD
      CASE 105
         ;FOLD SPS_TRIG105 {H}
         ;ENDFOLD
      CASE 106
         ;FOLD SPS_TRIG106 {H}
         ;ENDFOLD
      CASE 107
         ;FOLD SPS_TRIG107 {H}
         ;ENDFOLD
      CASE 108
         ;FOLD SPS_TRIG108 {H}
         ;ENDFOLD
   DEFAULT
   ENDSWITCH
   ; FOLD ;%{H}
   IF ($MODE_OP<>#EX) THEN
      ;-- Trigger erst nach Wiederanstart geschaltet --
      IF ((((VW_STOP B_AND 'B10010') >0) AND ((VW_STOP B_AND 'B0001')<=0))) THEN
         ;-- MStep Bewegung --
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (NOT UES AND NOT ANA_TRIG) THEN
      SPS_FERTIG=TRUE
   ENDIF
   IF (NOT ANA_UES AND ANA_TRIG) THEN
      SPS_FERTIG_ANA=TRUE
   ENDIF
END
; ENDFOLD