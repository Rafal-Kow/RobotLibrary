&ACCESS  RV
&COMMENT MAKRO_TRIGGER
&PARAM DISKPATH = Makros
&PARAM TEMPLATE = C:\KRC\Roboter\Template\makrotriggervorgabe.src
&PARAM EDITMASK = MakroTrigger
&PARAM TPVW_VERSION = 8.3.18
DEF MAKROTRIGGER(Funktion :IN, Nummer :IN)
   ;FOLD Makro Anfang ;%{PSE}%MKUKATPVW
   ;ENDFOLD
   ;FOLD -- Triggerauswertung -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Triggerauswertung --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD -- KS24 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- KS24 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD -- Version: 02 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Version: 02 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD -- Stand: 001 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Stand: 001 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD -- letzte Aenderung 01.11.2017 LZ -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- letzte Aenderung 01.11.2017 LZ --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD ;%{H}
      INT FUNKTION, Nummer,I
      SWITCH Nummer
      CASE 0; Init
      FOR I=1 TO 8
      MAKROTRIGGER(1,I)
      ENDFOR
      CASE 1; Trigger1
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 1 : Wenn M97 dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 1 : Wenn M97 dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 31 WHEN $CYCFLAG[97] DO MAKROTRIGGER(2,1)
         INTERRUPT ON 31
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Umdrehungen KF1 EZ1/SP1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdrehungen KF1 EZ1/SP1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD i1 ( EIN ) = i1 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i1 ( EIN ) = i1 + 1, 3: ARIASG
      VW(#COUNTER,TRUE,1,$COUNT_I[1] + 1)
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F95 = i2 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F95 = i2 = i1, 3: BOCMP
      $FLAG[95] = $COUNT_I[2] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F95 = F95 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F95 = F95 & !F312, 3: BOASG
      $FLAG[95] = $FLAG[95] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F94 = F95 & !F287 + F94 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F94 = F95 & !F287 + F94, 3: BOASG
      $FLAG[94] = $FLAG[95] AND NOT $FLAG[287] OR $FLAG[94]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F97 = i3 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F97 = i3 = i1, 3: BOCMP
      $FLAG[97] = $COUNT_I[3] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F97 = F97 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F97 = F97 & !F312, 3: BOASG
      $FLAG[97] = $FLAG[97] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F96 = F97 & F287 + F96 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F96 = F97 & F287 + F96, 3: BOASG
      $FLAG[96] = $FLAG[97] AND $FLAG[287] OR $FLAG[96]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F99 = i4 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F99 = i4 = i1, 3: BOCMP
      $FLAG[99] = $COUNT_I[4] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F99 = F99 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F99 = F99 & !F312, 3: BOASG
      $FLAG[99] = $FLAG[99] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F98 = F99 + F98 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F98 = F99 + F98, 3: BOASG
      $FLAG[98] = $FLAG[99] OR $FLAG[98]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F101 = i8 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F101 = i8 = i1, 3: BOCMP
      $FLAG[101] = $COUNT_I[8] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F101 = F101 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F101 = F101 & !F312, 3: BOASG
      $FLAG[101] = $FLAG[101] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F100 = F101 & !F287 + F100 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F100 = F101 & !F287 + F100, 3: BOASG
      $FLAG[100] = $FLAG[101] AND NOT $FLAG[287] OR $FLAG[100]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F103 = i9 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F103 = i9 = i1, 3: BOCMP
      $FLAG[103] = $COUNT_I[9] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F103 = F103 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F103 = F103 & !F312, 3: BOASG
      $FLAG[103] = $FLAG[103] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F102 = F103 & F287 + F102 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F102 = F103 & F287 + F102, 3: BOASG
      $FLAG[102] = $FLAG[103] AND $FLAG[287] OR $FLAG[102]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F105 = i10 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F105 = i10 = i1, 3: BOCMP
      $FLAG[105] = $COUNT_I[10] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F105 = F105 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F105 = F105 & !F312, 3: BOASG
      $FLAG[105] = $FLAG[105] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F104 = F105 + F104 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F104 = F105 + F104, 3: BOASG
      $FLAG[104] = $FLAG[105] OR $FLAG[104]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F107 = i11 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F107 = i11 = i1, 3: BOCMP
      $FLAG[107] = $COUNT_I[11] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F107 = F107 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F107 = F107 & !F312, 3: BOASG
      $FLAG[107] = $FLAG[107] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F106 = F107 & !F287 + F106 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F106 = F107 & !F287 + F106, 3: BOASG
      $FLAG[106] = $FLAG[107] AND NOT $FLAG[287] OR $FLAG[106]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F109 = i12 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F109 = i12 = i1, 3: BOCMP
      $FLAG[109] = $COUNT_I[12] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F109 = F109 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F109 = F109 & !F312, 3: BOASG
      $FLAG[109] = $FLAG[109] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F108 = F109 & F287 + F108 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F108 = F109 & F287 + F108, 3: BOASG
      $FLAG[108] = $FLAG[109] AND $FLAG[287] OR $FLAG[108]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F111 = i13 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F111 = i13 = i1, 3: BOCMP
      $FLAG[111] = $COUNT_I[13] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F111 = F111 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F111 = F111 & !F312, 3: BOASG
      $FLAG[111] = $FLAG[111] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F110 = F111 + F110 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F110 = F111 + F110, 3: BOASG
      $FLAG[110] = $FLAG[111] OR $FLAG[110]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F113 = i14 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F113 = i14 = i1, 3: BOCMP
      $FLAG[113] = $COUNT_I[14] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F113 = F113 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F113 = F113 & !F312, 3: BOASG
      $FLAG[113] = $FLAG[113] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F112 = F113 & !F287 + F112 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F112 = F113 & !F287 + F112, 3: BOASG
      $FLAG[112] = $FLAG[113] AND NOT $FLAG[287] OR $FLAG[112]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F115 = i15 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F115 = i15 = i1, 3: BOCMP
      $FLAG[115] = $COUNT_I[15] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F115 = F115 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F115 = F115 & !F312, 3: BOASG
      $FLAG[115] = $FLAG[115] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F114 = F115 & F287 + F114 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F114 = F115 & F287 + F114, 3: BOASG
      $FLAG[114] = $FLAG[115] AND $FLAG[287] OR $FLAG[114]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F117 = i16 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F117 = i16 = i1, 3: BOCMP
      $FLAG[117] = $COUNT_I[16] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F117 = F117 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F117 = F117 & !F312, 3: BOASG
      $FLAG[117] = $FLAG[117] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F116 = F117 + F116 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F116 = F117 + F116, 3: BOASG
      $FLAG[116] = $FLAG[117] OR $FLAG[116]
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 2; Trigger2
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 2 : Wenn M104 dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 2 : Wenn M104 dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 32 WHEN $CYCFLAG[104] DO MAKROTRIGGER(2,2)
         INTERRUPT ON 32
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Umdrehungen KF2 EZ2/SP2/PZ2 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdrehungen KF2 EZ2/SP2/PZ2 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD i1 ( EIN ) = i1 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i1 ( EIN ) = i1 + 1, 3: ARIASG
      VW(#COUNTER,TRUE,1,$COUNT_I[1] + 1)
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ2/SP2/PZ2 SZ1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ2/SP2/PZ2 SZ1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F151 = i5 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F151 = i5 = i1, 3: BOCMP
      $FLAG[151] = $COUNT_I[5] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F151 = F151 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F151 = F151 & !F312, 3: BOASG
      $FLAG[151] = $FLAG[151] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F150 = F151 & !F287 + F150 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F150 = F151 & !F287 + F150, 3: BOASG
      $FLAG[150] = $FLAG[151] AND NOT $FLAG[287] OR $FLAG[150]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ2/SP2/PZ2 SZ1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ2/SP2/PZ2 SZ1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F153 = i6 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F153 = i6 = i1, 3: BOCMP
      $FLAG[153] = $COUNT_I[6] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F153 = F153 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F153 = F153 & !F312, 3: BOASG
      $FLAG[153] = $FLAG[153] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F152 = F153 & F287 + F152 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F152 = F153 & F287 + F152, 3: BOASG
      $FLAG[152] = $FLAG[153] AND $FLAG[287] OR $FLAG[152]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ2/SP2/PZ2 SZ1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ2/SP2/PZ2 SZ1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F155 = i7 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F155 = i7 = i1, 3: BOCMP
      $FLAG[155] = $COUNT_I[7] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F155 = F155 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F155 = F155 & !F312, 3: BOASG
      $FLAG[155] = $FLAG[155] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F154 = F155 + F154 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F154 = F155 + F154, 3: BOASG
      $FLAG[154] = $FLAG[155] OR $FLAG[154]
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 3; Trigger3
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 3 : Wenn M111 dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 3 : Wenn M111 dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 33 WHEN $CYCFLAG[111] DO MAKROTRIGGER(2,3)
         INTERRUPT ON 33
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Umdrehungen KF3 EZ3/SP3/PZ3 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdrehungen KF3 EZ3/SP3/PZ3 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD i1 ( EIN ) = i1 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i1 ( EIN ) = i1 + 1, 3: ARIASG
      VW(#COUNTER,TRUE,1,$COUNT_I[1] + 1)
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ3/SP3/PZ3 SZ1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ3/SP3/PZ3 SZ1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F187 = i17 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F187 = i17 = i1, 3: BOCMP
      $FLAG[187] = $COUNT_I[17] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F187 = F187 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F187 = F187 & !F312, 3: BOASG
      $FLAG[187] = $FLAG[187] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F186 = F187 & !F287 + F186 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F186 = F187 & !F287 + F186, 3: BOASG
      $FLAG[186] = $FLAG[187] AND NOT $FLAG[287] OR $FLAG[186]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ3/SP3/PZ3 SZ1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ3/SP3/PZ3 SZ1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F189 = i18 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F189 = i18 = i1, 3: BOCMP
      $FLAG[189] = $COUNT_I[18] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F189 = F189 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F189 = F189 & !F312, 3: BOASG
      $FLAG[189] = $FLAG[189] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F188 = F189 & F287 + F188 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F188 = F189 & F287 + F188, 3: BOASG
      $FLAG[188] = $FLAG[189] AND $FLAG[287] OR $FLAG[188]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ3/SP3/PZ3 SZ1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ3/SP3/PZ3 SZ1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F191 = i19 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F191 = i19 = i1, 3: BOCMP
      $FLAG[191] = $COUNT_I[19] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F191 = F191 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F191 = F191 & !F312, 3: BOASG
      $FLAG[191] = $FLAG[191] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F190 = F191 + F190 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F190 = F191 + F190, 3: BOASG
      $FLAG[190] = $FLAG[191] OR $FLAG[190]
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 4; Trigger4
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 4 : Wenn M98 dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 4 : Wenn M98 dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 34 WHEN $CYCFLAG[98] DO MAKROTRIGGER(2,4)
         INTERRUPT ON 34
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Umdrehungen KF2/KW2 EZ1/SP1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdrehungen KF2/KW2 EZ1/SP1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD i1 ( EIN ) = i1 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i1 ( EIN ) = i1 + 1, 3: ARIASG
      VW(#COUNTER,TRUE,1,$COUNT_I[1] + 1)
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F95 = i2 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F95 = i2 = i1, 3: BOCMP
      $FLAG[95] = $COUNT_I[2] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F95 = F95 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F95 = F95 & !F312, 3: BOASG
      $FLAG[95] = $FLAG[95] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F94 = F95 & !F287 + F94 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F94 = F95 & !F287 + F94, 3: BOASG
      $FLAG[94] = $FLAG[95] AND NOT $FLAG[287] OR $FLAG[94]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F97 = i3 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F97 = i3 = i1, 3: BOCMP
      $FLAG[97] = $COUNT_I[3] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F97 = F97 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F97 = F97 & !F312, 3: BOASG
      $FLAG[97] = $FLAG[97] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F96 = F97 & F287 + F96 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F96 = F97 & F287 + F96, 3: BOASG
      $FLAG[96] = $FLAG[97] AND $FLAG[287] OR $FLAG[96]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F99 = i4 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F99 = i4 = i1, 3: BOCMP
      $FLAG[99] = $COUNT_I[4] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F99 = F99 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F99 = F99 & !F312, 3: BOASG
      $FLAG[99] = $FLAG[99] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F98 = F99 + F98 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F98 = F99 + F98, 3: BOASG
      $FLAG[98] = $FLAG[99] OR $FLAG[98]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F101 = i8 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F101 = i8 = i1, 3: BOCMP
      $FLAG[101] = $COUNT_I[8] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F101 = F101 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F101 = F101 & !F312, 3: BOASG
      $FLAG[101] = $FLAG[101] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F100 = F101 & !F287 + F100 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F100 = F101 & !F287 + F100, 3: BOASG
      $FLAG[100] = $FLAG[101] AND NOT $FLAG[287] OR $FLAG[100]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F103 = i9 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F103 = i9 = i1, 3: BOCMP
      $FLAG[103] = $COUNT_I[9] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F103 = F103 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F103 = F103 & !F312, 3: BOASG
      $FLAG[103] = $FLAG[103] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F102 = F103 & F287 + F102 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F102 = F103 & F287 + F102, 3: BOASG
      $FLAG[102] = $FLAG[103] AND $FLAG[287] OR $FLAG[102]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F105 = i10 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F105 = i10 = i1, 3: BOCMP
      $FLAG[105] = $COUNT_I[10] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F105 = F105 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F105 = F105 & !F312, 3: BOASG
      $FLAG[105] = $FLAG[105] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F104 = F105 + F104 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F104 = F105 + F104, 3: BOASG
      $FLAG[104] = $FLAG[105] OR $FLAG[104]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F107 = i11 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F107 = i11 = i1, 3: BOCMP
      $FLAG[107] = $COUNT_I[11] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F107 = F107 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F107 = F107 & !F312, 3: BOASG
      $FLAG[107] = $FLAG[107] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F106 = F107 & !F287 + F106 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F106 = F107 & !F287 + F106, 3: BOASG
      $FLAG[106] = $FLAG[107] AND NOT $FLAG[287] OR $FLAG[106]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F109 = i12 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F109 = i12 = i1, 3: BOCMP
      $FLAG[109] = $COUNT_I[12] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F109 = F109 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F109 = F109 & !F312, 3: BOASG
      $FLAG[109] = $FLAG[109] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F108 = F109 & F287 + F108 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F108 = F109 & F287 + F108, 3: BOASG
      $FLAG[108] = $FLAG[109] AND $FLAG[287] OR $FLAG[108]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F111 = i13 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F111 = i13 = i1, 3: BOCMP
      $FLAG[111] = $COUNT_I[13] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F111 = F111 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F111 = F111 & !F312, 3: BOASG
      $FLAG[111] = $FLAG[111] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F110 = F111 + F110 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F110 = F111 + F110, 3: BOASG
      $FLAG[110] = $FLAG[111] OR $FLAG[110]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F113 = i14 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F113 = i14 = i1, 3: BOCMP
      $FLAG[113] = $COUNT_I[14] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F113 = F113 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F113 = F113 & !F312, 3: BOASG
      $FLAG[113] = $FLAG[113] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F112 = F113 & !F287 + F112 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F112 = F113 & !F287 + F112, 3: BOASG
      $FLAG[112] = $FLAG[113] AND NOT $FLAG[287] OR $FLAG[112]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F115 = i15 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F115 = i15 = i1, 3: BOCMP
      $FLAG[115] = $COUNT_I[15] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F115 = F115 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F115 = F115 & !F312, 3: BOASG
      $FLAG[115] = $FLAG[115] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F114 = F115 & F287 + F114 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F114 = F115 & F287 + F114, 3: BOASG
      $FLAG[114] = $FLAG[115] AND $FLAG[287] OR $FLAG[114]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F117 = i16 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F117 = i16 = i1, 3: BOCMP
      $FLAG[117] = $COUNT_I[16] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F117 = F117 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F117 = F117 & !F312, 3: BOASG
      $FLAG[117] = $FLAG[117] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F116 = F117 + F116 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F116 = F117 + F116, 3: BOASG
      $FLAG[116] = $FLAG[117] OR $FLAG[116]
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 5; Trigger5
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 5 : Wenn M99 dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 5 : Wenn M99 dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 35 WHEN $CYCFLAG[99] DO MAKROTRIGGER(2,5)
         INTERRUPT ON 35
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Umdrehungen KF3/KW3 EZ1/SP1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdrehungen KF3/KW3 EZ1/SP1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD i1 ( EIN ) = i1 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i1 ( EIN ) = i1 + 1, 3: ARIASG
      VW(#COUNTER,TRUE,1,$COUNT_I[1] + 1)
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F95 = i2 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F95 = i2 = i1, 3: BOCMP
      $FLAG[95] = $COUNT_I[2] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F95 = F95 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F95 = F95 & !F312, 3: BOASG
      $FLAG[95] = $FLAG[95] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F94 = F95 & !F287 + F94 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F94 = F95 & !F287 + F94, 3: BOASG
      $FLAG[94] = $FLAG[95] AND NOT $FLAG[287] OR $FLAG[94]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F97 = i3 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F97 = i3 = i1, 3: BOCMP
      $FLAG[97] = $COUNT_I[3] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F97 = F97 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F97 = F97 & !F312, 3: BOASG
      $FLAG[97] = $FLAG[97] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F96 = F97 & F287 + F96 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F96 = F97 & F287 + F96, 3: BOASG
      $FLAG[96] = $FLAG[97] AND $FLAG[287] OR $FLAG[96]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F99 = i4 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F99 = i4 = i1, 3: BOCMP
      $FLAG[99] = $COUNT_I[4] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F99 = F99 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F99 = F99 & !F312, 3: BOASG
      $FLAG[99] = $FLAG[99] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F98 = F99 + F98 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F98 = F99 + F98, 3: BOASG
      $FLAG[98] = $FLAG[99] OR $FLAG[98]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F101 = i8 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F101 = i8 = i1, 3: BOCMP
      $FLAG[101] = $COUNT_I[8] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F101 = F101 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F101 = F101 & !F312, 3: BOASG
      $FLAG[101] = $FLAG[101] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F100 = F101 & !F287 + F100 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F100 = F101 & !F287 + F100, 3: BOASG
      $FLAG[100] = $FLAG[101] AND NOT $FLAG[287] OR $FLAG[100]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F103 = i9 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F103 = i9 = i1, 3: BOCMP
      $FLAG[103] = $COUNT_I[9] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F103 = F103 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F103 = F103 & !F312, 3: BOASG
      $FLAG[103] = $FLAG[103] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F102 = F103 & F287 + F102 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F102 = F103 & F287 + F102, 3: BOASG
      $FLAG[102] = $FLAG[103] AND $FLAG[287] OR $FLAG[102]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F105 = i10 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F105 = i10 = i1, 3: BOCMP
      $FLAG[105] = $COUNT_I[10] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F105 = F105 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F105 = F105 & !F312, 3: BOASG
      $FLAG[105] = $FLAG[105] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F104 = F105 + F104 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F104 = F105 + F104, 3: BOASG
      $FLAG[104] = $FLAG[105] OR $FLAG[104]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F107 = i11 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F107 = i11 = i1, 3: BOCMP
      $FLAG[107] = $COUNT_I[11] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F107 = F107 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F107 = F107 & !F312, 3: BOASG
      $FLAG[107] = $FLAG[107] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F106 = F107 & !F287 + F106 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F106 = F107 & !F287 + F106, 3: BOASG
      $FLAG[106] = $FLAG[107] AND NOT $FLAG[287] OR $FLAG[106]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F109 = i12 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F109 = i12 = i1, 3: BOCMP
      $FLAG[109] = $COUNT_I[12] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F109 = F109 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F109 = F109 & !F312, 3: BOASG
      $FLAG[109] = $FLAG[109] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F108 = F109 & F287 + F108 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F108 = F109 & F287 + F108, 3: BOASG
      $FLAG[108] = $FLAG[109] AND $FLAG[287] OR $FLAG[108]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F111 = i13 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F111 = i13 = i1, 3: BOCMP
      $FLAG[111] = $COUNT_I[13] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F111 = F111 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F111 = F111 & !F312, 3: BOASG
      $FLAG[111] = $FLAG[111] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F110 = F111 + F110 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F110 = F111 + F110, 3: BOASG
      $FLAG[110] = $FLAG[111] OR $FLAG[110]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F113 = i14 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F113 = i14 = i1, 3: BOCMP
      $FLAG[113] = $COUNT_I[14] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F113 = F113 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F113 = F113 & !F312, 3: BOASG
      $FLAG[113] = $FLAG[113] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F112 = F113 & !F287 + F112 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F112 = F113 & !F287 + F112, 3: BOASG
      $FLAG[112] = $FLAG[113] AND NOT $FLAG[287] OR $FLAG[112]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F115 = i15 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F115 = i15 = i1, 3: BOCMP
      $FLAG[115] = $COUNT_I[15] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F115 = F115 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F115 = F115 & !F312, 3: BOASG
      $FLAG[115] = $FLAG[115] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F114 = F115 & F287 + F114 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F114 = F115 & F287 + F114, 3: BOASG
      $FLAG[114] = $FLAG[115] AND $FLAG[287] OR $FLAG[114]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F117 = i16 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F117 = i16 = i1, 3: BOCMP
      $FLAG[117] = $COUNT_I[16] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F117 = F117 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F117 = F117 & !F312, 3: BOASG
      $FLAG[117] = $FLAG[117] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F116 = F117 + F116 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F116 = F117 + F116, 3: BOASG
      $FLAG[116] = $FLAG[117] OR $FLAG[116]
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 6; Trigger6
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 6 : Wenn M100 dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 6 : Wenn M100 dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 36 WHEN $CYCFLAG[100] DO MAKROTRIGGER(2,6)
         INTERRUPT ON 36
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Umdrehungen KW1 EZ1/SP1 -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdrehungen KW1 EZ1/SP1 --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD i1 ( EIN ) = i1 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i1 ( EIN ) = i1 + 1, 3: ARIASG
      VW(#COUNTER,TRUE,1,$COUNT_I[1] + 1)
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F95 = i2 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F95 = i2 = i1, 3: BOCMP
      $FLAG[95] = $COUNT_I[2] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F95 = F95 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F95 = F95 & !F312, 3: BOASG
      $FLAG[95] = $FLAG[95] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F94 = F95 & !F287 + F94 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F94 = F95 & !F287 + F94, 3: BOASG
      $FLAG[94] = $FLAG[95] AND NOT $FLAG[287] OR $FLAG[94]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F97 = i3 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F97 = i3 = i1, 3: BOCMP
      $FLAG[97] = $COUNT_I[3] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F97 = F97 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F97 = F97 & !F312, 3: BOASG
      $FLAG[97] = $FLAG[97] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F96 = F97 & F287 + F96 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F96 = F97 & F287 + F96, 3: BOASG
      $FLAG[96] = $FLAG[97] AND $FLAG[287] OR $FLAG[96]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ1 (Basic/Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F99 = i4 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F99 = i4 = i1, 3: BOCMP
      $FLAG[99] = $COUNT_I[4] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F99 = F99 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F99 = F99 & !F312, 3: BOASG
      $FLAG[99] = $FLAG[99] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F98 = F99 + F98 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F98 = F99 + F98, 3: BOASG
      $FLAG[98] = $FLAG[99] OR $FLAG[98]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F101 = i8 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F101 = i8 = i1, 3: BOCMP
      $FLAG[101] = $COUNT_I[8] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F101 = F101 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F101 = F101 & !F312, 3: BOASG
      $FLAG[101] = $FLAG[101] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F100 = F101 & !F287 + F100 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F100 = F101 & !F287 + F100, 3: BOASG
      $FLAG[100] = $FLAG[101] AND NOT $FLAG[287] OR $FLAG[100]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F103 = i9 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F103 = i9 = i1, 3: BOCMP
      $FLAG[103] = $COUNT_I[9] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F103 = F103 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F103 = F103 & !F312, 3: BOASG
      $FLAG[103] = $FLAG[103] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F102 = F103 & F287 + F102 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F102 = F103 & F287 + F102, 3: BOASG
      $FLAG[102] = $FLAG[103] AND $FLAG[287] OR $FLAG[102]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ2 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F105 = i10 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F105 = i10 = i1, 3: BOCMP
      $FLAG[105] = $COUNT_I[10] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F105 = F105 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F105 = F105 & !F312, 3: BOASG
      $FLAG[105] = $FLAG[105] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F104 = F105 + F104 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F104 = F105 + F104, 3: BOASG
      $FLAG[104] = $FLAG[105] OR $FLAG[104]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F107 = i11 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F107 = i11 = i1, 3: BOCMP
      $FLAG[107] = $COUNT_I[11] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F107 = F107 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F107 = F107 & !F312, 3: BOASG
      $FLAG[107] = $FLAG[107] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F106 = F107 & !F287 + F106 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F106 = F107 & !F287 + F106, 3: BOASG
      $FLAG[106] = $FLAG[107] AND NOT $FLAG[287] OR $FLAG[106]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F109 = i12 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F109 = i12 = i1, 3: BOCMP
      $FLAG[109] = $COUNT_I[12] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F109 = F109 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F109 = F109 & !F312, 3: BOASG
      $FLAG[109] = $FLAG[109] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F108 = F109 & F287 + F108 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F108 = F109 & F287 + F108, 3: BOASG
      $FLAG[108] = $FLAG[109] AND $FLAG[287] OR $FLAG[108]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ3 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F111 = i13 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F111 = i13 = i1, 3: BOCMP
      $FLAG[111] = $COUNT_I[13] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F111 = F111 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F111 = F111 & !F312, 3: BOASG
      $FLAG[111] = $FLAG[111] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F110 = F111 + F110 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F110 = F111 + F110, 3: BOASG
      $FLAG[110] = $FLAG[111] OR $FLAG[110]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 1 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F113 = i14 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F113 = i14 = i1, 3: BOCMP
      $FLAG[113] = $COUNT_I[14] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F113 = F113 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F113 = F113 & !F312, 3: BOASG
      $FLAG[113] = $FLAG[113] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F112 = F113 & !F287 + F112 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F112 = F113 & !F287 + F112, 3: BOASG
      $FLAG[112] = $FLAG[113] AND NOT $FLAG[287] OR $FLAG[112]
   ;ENDFOLD
   ;FOLD -- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Startfraesen Teil 2 EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F115 = i15 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F115 = i15 = i1, 3: BOCMP
      $FLAG[115] = $COUNT_I[15] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F115 = F115 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F115 = F115 & !F312, 3: BOASG
      $FLAG[115] = $FLAG[115] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F114 = F115 & F287 + F114 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F114 = F115 & F287 + F114, 3: BOASG
      $FLAG[114] = $FLAG[115] AND $FLAG[287] OR $FLAG[114]
   ;ENDFOLD
   ;FOLD -- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) -- ;%{SE}%MKUKATPVW %CVW_COM %VCOMMENT %P 2:-- Umdreh. Normal Fraesen EZ1/SP1 SZ4 (Docking) --, 3: VW_COMMENT
   ;ENDFOLD
   ;FOLD F117 = i16 = i1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F117 = i16 = i1, 3: BOCMP
      $FLAG[117] = $COUNT_I[16] == $COUNT_I[1]
   ;ENDFOLD
   ;FOLD F117 = F117 & !F312 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F117 = F117 & !F312, 3: BOASG
      $FLAG[117] = $FLAG[117] AND NOT $FLAG[312]
   ;ENDFOLD
   ;FOLD F116 = F117 + F116 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F116 = F117 + F116, 3: BOASG
      $FLAG[116] = $FLAG[117] OR $FLAG[116]
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 7; Trigger7
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 7 : Wenn AUS dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 7 : Wenn AUS dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 37 WHEN FALSE DO MAKROTRIGGER(2,7)
         INTERRUPT OFF 37
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD ;%{H}
      ENDSWITCH
      CASE 8; Trigger8
      SWITCH FUNKTION
      CASE 1; Init
   ;ENDFOLD
   ;FOLD Trigger 8 : Wenn AUS dann ;%{E}%MKUKATPVW %CVW_SPS %VTRIGGER %P 2:Trigger 8 : Wenn AUS dann, 3: TRIGGER
      ;FOLD ;%{H}
         GLOBAL INTERRUPT DECL 38 WHEN FALSE DO MAKROTRIGGER(2,8)
         INTERRUPT OFF 38
         CASE 2; Action
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
   ENDSWITCH
   ENDSWITCH
END
; ENDFOLD