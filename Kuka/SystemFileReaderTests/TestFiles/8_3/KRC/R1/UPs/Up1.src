&ACCESS  RV
&COMMENT VW310-6 HO_Behaelter_links
&PARAM DISKPATH = UPs
&PARAM EDITMASK = Up999[1-999]
&PARAM TPVW_VERSION = 8.3.18
&PARAM TEMPLATE = C:\KRC\Roboter\Template\upvorgabe
DEF UP1()
   ; FOLD UP Anfang;%{SE} %MKUKATPVW
   SPS_N=-1
   SPS_FERTIG=FALSE
   IF NOT CALLBYSELECT THEN
      INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
      INTERRUPT ON 10
      INT10=TRUE
      VW_USR_R (#USR_INIT)
   ENDIF
   VW(#VW_INIT_UP,TRUE)
   ; ENDFOLD
   ;FOLD -- VW310-6, THIL -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:VW310-6, THIL
      ;FOLD {H}
         M_COMMENT("VW310-6, THIL")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- 415600R01 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:415600R01
      ;FOLD {H}
         M_COMMENT("415600R01")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- FRG ST415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:FRG ST415600
      ;FOLD {H}
         M_COMMENT("FRG ST415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Verriegelung E43 zu Rob 4165605 EIN -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Verriegelung E43 zu Rob 4165605 EIN
      ;FOLD {H}
         M_COMMENT("Verriegelung E43 zu Rob 4165605 EIN")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:1, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P1_D
         Act_P1 = P1
         Act_P2 = P1
         VW(#MPARA,TRUE)
         PTP P1
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:2, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P2_D
         Act_P1 = P2
         Act_P2 = P2
         VW(#MPARA,TRUE)
         PTP P2 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:3, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P3_D
         Act_P1 = P3
         Act_P2 = P3
         VW(#MPARA,TRUE)
         PTP P3
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=250[mm/s] VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:250, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:4, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P4_D
         Act_P1 = P4
         Act_P2 = P4
         VW(#MPARA,TRUE)
         LIN P4
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- ENT ST415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:ENT ST415600
      ;FOLD {H}
         M_COMMENT("ENT ST415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Greifer ZU -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Greifer ZU
      ;FOLD {H}
         M_COMMENT("Greifer ZU")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=250[mm/s] VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=5[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:250, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:5, 17:[1/100s], 18: , 19:5, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P5_D
         Act_P1 = P5
         Act_P2 = P5
         VW(#MPARA,TRUE)
         LIN P5
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=250[mm/s] VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:250, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:6, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P6_D
         Act_P1 = P6
         Act_P2 = P6
         VW(#MPARA,TRUE)
         LIN P6
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=250[mm/s] VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:250, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:7, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P7_D
         Act_P1 = P7
         Act_P2 = P7
         VW(#MPARA,TRUE)
         LIN P7
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:8, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P8_D
         Act_P1 = P8
         Act_P2 = P8
         VW(#MPARA,TRUE)
         PTP P8 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- PF ST415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:PF ST415600
      ;FOLD {H}
         M_COMMENT("PF ST415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Verriegelung E43 zu Rob 4165605 AUS -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Verriegelung E43 zu Rob 4165605 AUS
      ;FOLD {H}
         M_COMMENT("Verriegelung E43 zu Rob 4165605 AUS")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=9 Base=0 SPSTrig=0[1/100s]  ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:9, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: , 19:9, 20:-1, 21:-1
      ;FOLD 1: ;%{SE}%MKUKATPVW
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P9_D
         Act_P1 = P9
         Act_P2 = P9
         VW(#MPARA,TRUE)
         PTP P9
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
END
DEF SPS_TRIG(NO :IN)
   INT NO
   INT VW_STOP
   BOOL UES
   BOOL ANA_UES
   BOOL ANA_TRIG
   VW_STOP=$VW_PSPS_STOP
   UES=FALSE
   ANA_UES=FALSE
   ANA_TRIG=FALSE
   IF ((NO>10000) AND (NO<20000)) THEN
      NO=NO-10000
      UES=TRUE
   ENDIF
   IF ((NO>20000) AND (NO<30000)) THEN
      NO=NO-20000
      ANA_TRIG=TRUE
   ENDIF
   IF NO>30000 THEN
      NO=NO-30000
      ANA_UES=TRUE
      ANA_TRIG=TRUE
   ENDIF
   ; FOLD ;%{H}
   IF ((VW_STOP B_AND 'B0001') > 0) THEN
      ;-- Trigger vorzeitig geschaltet (delay < 0) oder MStep
      IF (((VW_STOP B_AND 'B0110') > 0) AND ($MODE_OP<>#EX)) THEN
         ;-- MStep oder BCO Bewegung
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (SEARCH_END) THEN
      SEARCH_END = FALSE
      INTERRUPT OFF 39
   ENDIF
   SWITCH NO
      CASE 1
         ;FOLD SPS_TRIG1 {H}
         ;ENDFOLD
      CASE 2
         ;FOLD SPS_TRIG2 {H}
         ;ENDFOLD
      CASE 3
         ;FOLD SPS_TRIG3 {H}
         ;ENDFOLD
      CASE 4
         ;FOLD SPS_TRIG4 {H}
         ;ENDFOLD
      CASE 5
         ;FOLD SPS_TRIG5 {H}
         ;ENDFOLD
      CASE 6
         ;FOLD SPS_TRIG6 {H}
         ;ENDFOLD
      CASE 7
         ;FOLD SPS_TRIG7 {H}
         ;ENDFOLD
      CASE 8
         ;FOLD SPS_TRIG8 {H}
         ;ENDFOLD
      CASE 9
         ;FOLD SPS_TRIG9 {H}
         ;ENDFOLD
      CASE 10
         ;FOLD SPS_TRIG10 {H}
         ;ENDFOLD
      CASE 11
         ;FOLD SPS_TRIG11 {H}
         ;ENDFOLD
      CASE 12
         ;FOLD SPS_TRIG12 {H}
         ;ENDFOLD
      CASE 13
         ;FOLD SPS_TRIG13 {H}
         ;ENDFOLD
      CASE 14
         ;FOLD SPS_TRIG14 {H}
         ;ENDFOLD
      CASE 15
         ;FOLD SPS_TRIG15 {H}
         ;ENDFOLD
      CASE 16
         ;FOLD SPS_TRIG16 {H}
         ;ENDFOLD
      CASE 17
         ;FOLD SPS_TRIG17 {H}
         ;ENDFOLD
      CASE 18
         ;FOLD SPS_TRIG18 {H}
         ;ENDFOLD
      CASE 19
         ;FOLD SPS_TRIG19 {H}
         ;ENDFOLD
      CASE 20
         ;FOLD SPS_TRIG20 {H}
         ;ENDFOLD
      CASE 21
         ;FOLD SPS_TRIG21 {H}
         ;ENDFOLD
      CASE 22
         ;FOLD SPS_TRIG22 {H}
         ;ENDFOLD
      CASE 23
         ;FOLD SPS_TRIG23 {H}
         ;ENDFOLD
      CASE 24
         ;FOLD SPS_TRIG24 {H}
         ;ENDFOLD
      CASE 25
         ;FOLD SPS_TRIG25 {H}
         ;ENDFOLD
      CASE 26
         ;FOLD SPS_TRIG26 {H}
         ;ENDFOLD
      CASE 27
         ;FOLD SPS_TRIG27 {H}
         ;ENDFOLD
      CASE 28
         ;FOLD SPS_TRIG28 {H}
         ;ENDFOLD
      CASE 29
         ;FOLD SPS_TRIG29 {H}
         ;ENDFOLD
      CASE 30
         ;FOLD SPS_TRIG30 {H}
         ;ENDFOLD
      CASE 31
         ;FOLD SPS_TRIG31 {H}
         ;ENDFOLD
      CASE 32
         ;FOLD SPS_TRIG32 {H}
         ;ENDFOLD
      CASE 33
         ;FOLD SPS_TRIG33 {H}
         ;ENDFOLD
      CASE 34
         ;FOLD SPS_TRIG34 {H}
         ;ENDFOLD
      CASE 35
         ;FOLD SPS_TRIG35 {H}
         ;ENDFOLD
      CASE 36
         ;FOLD SPS_TRIG36 {H}
         ;ENDFOLD
      CASE 37
         ;FOLD SPS_TRIG37 {H}
         ;ENDFOLD
      CASE 38
         ;FOLD SPS_TRIG38 {H}
         ;ENDFOLD
      CASE 39
         ;FOLD SPS_TRIG39 {H}
         ;ENDFOLD
      CASE 40
         ;FOLD SPS_TRIG40 {H}
         ;ENDFOLD
      CASE 41
         ;FOLD SPS_TRIG41 {H}
         ;ENDFOLD
      CASE 42
         ;FOLD SPS_TRIG42 {H}
         ;ENDFOLD
      CASE 43
         ;FOLD SPS_TRIG43 {H}
         ;ENDFOLD
      CASE 44
         ;FOLD SPS_TRIG44 {H}
         ;ENDFOLD
      CASE 45
         ;FOLD SPS_TRIG45 {H}
         ;ENDFOLD
      CASE 46
         ;FOLD SPS_TRIG46 {H}
         ;ENDFOLD
      CASE 47
         ;FOLD SPS_TRIG47 {H}
         ;ENDFOLD
      CASE 48
         ;FOLD SPS_TRIG48 {H}
         ;ENDFOLD
      CASE 49
         ;FOLD SPS_TRIG49 {H}
         ;ENDFOLD
      CASE 50
         ;FOLD SPS_TRIG50 {H}
         ;ENDFOLD
      CASE 51
         ;FOLD SPS_TRIG51 {H}
         ;ENDFOLD
      CASE 52
         ;FOLD SPS_TRIG52 {H}
         ;ENDFOLD
      CASE 53
         ;FOLD SPS_TRIG53 {H}
         ;ENDFOLD
      CASE 54
         ;FOLD SPS_TRIG54 {H}
         ;ENDFOLD
      CASE 55
         ;FOLD SPS_TRIG55 {H}
         ;ENDFOLD
      CASE 56
         ;FOLD SPS_TRIG56 {H}
         ;ENDFOLD
      CASE 57
         ;FOLD SPS_TRIG57 {H}
         ;ENDFOLD
      CASE 58
         ;FOLD SPS_TRIG58 {H}
         ;ENDFOLD
      CASE 59
         ;FOLD SPS_TRIG59 {H}
         ;ENDFOLD
      CASE 60
         ;FOLD SPS_TRIG60 {H}
         ;ENDFOLD
      CASE 61
         ;FOLD SPS_TRIG61 {H}
         ;ENDFOLD
      CASE 62
         ;FOLD SPS_TRIG62 {H}
         ;ENDFOLD
      CASE 63
         ;FOLD SPS_TRIG63 {H}
         ;ENDFOLD
      CASE 64
         ;FOLD SPS_TRIG64 {H}
         ;ENDFOLD
      CASE 65
         ;FOLD SPS_TRIG65 {H}
         ;ENDFOLD
      CASE 66
         ;FOLD SPS_TRIG66 {H}
         ;ENDFOLD
      CASE 67
         ;FOLD SPS_TRIG67 {H}
         ;ENDFOLD
      CASE 68
         ;FOLD SPS_TRIG68 {H}
         ;ENDFOLD
      CASE 69
         ;FOLD SPS_TRIG69 {H}
         ;ENDFOLD
      CASE 70
         ;FOLD SPS_TRIG70 {H}
         ;ENDFOLD
      CASE 71
         ;FOLD SPS_TRIG71 {H}
         ;ENDFOLD
      CASE 72
         ;FOLD SPS_TRIG72 {H}
         ;ENDFOLD
      CASE 73
         ;FOLD SPS_TRIG73 {H}
         ;ENDFOLD
      CASE 74
         ;FOLD SPS_TRIG74 {H}
         ;ENDFOLD
      CASE 75
         ;FOLD SPS_TRIG75 {H}
         ;ENDFOLD
      CASE 76
         ;FOLD SPS_TRIG76 {H}
         ;ENDFOLD
      CASE 77
         ;FOLD SPS_TRIG77 {H}
         ;ENDFOLD
      CASE 78
         ;FOLD SPS_TRIG78 {H}
         ;ENDFOLD
      CASE 79
         ;FOLD SPS_TRIG79 {H}
         ;ENDFOLD
      CASE 80
         ;FOLD SPS_TRIG80 {H}
         ;ENDFOLD
      CASE 81
         ;FOLD SPS_TRIG81 {H}
         ;ENDFOLD
      CASE 82
         ;FOLD SPS_TRIG82 {H}
         ;ENDFOLD
      CASE 83
         ;FOLD SPS_TRIG83 {H}
         ;ENDFOLD
      CASE 84
         ;FOLD SPS_TRIG84 {H}
         ;ENDFOLD
      CASE 85
         ;FOLD SPS_TRIG85 {H}
         ;ENDFOLD
      CASE 86
         ;FOLD SPS_TRIG86 {H}
         ;ENDFOLD
      CASE 87
         ;FOLD SPS_TRIG87 {H}
         ;ENDFOLD
      CASE 88
         ;FOLD SPS_TRIG88 {H}
         ;ENDFOLD
      CASE 89
         ;FOLD SPS_TRIG89 {H}
         ;ENDFOLD
      CASE 90
         ;FOLD SPS_TRIG90 {H}
         ;ENDFOLD
      CASE 91
         ;FOLD SPS_TRIG91 {H}
         ;ENDFOLD
      CASE 92
         ;FOLD SPS_TRIG92 {H}
         ;ENDFOLD
      CASE 93
         ;FOLD SPS_TRIG93 {H}
         ;ENDFOLD
      CASE 94
         ;FOLD SPS_TRIG94 {H}
         ;ENDFOLD
      CASE 95
         ;FOLD SPS_TRIG95 {H}
         ;ENDFOLD
      CASE 96
         ;FOLD SPS_TRIG96 {H}
         ;ENDFOLD
      CASE 97
         ;FOLD SPS_TRIG97 {H}
         ;ENDFOLD
      CASE 98
         ;FOLD SPS_TRIG98 {H}
         ;ENDFOLD
      CASE 99
         ;FOLD SPS_TRIG99 {H}
         ;ENDFOLD
      CASE 100
         ;FOLD SPS_TRIG100 {H}
         ;ENDFOLD
      CASE 101
         ;FOLD SPS_TRIG101 {H}
         ;ENDFOLD
   DEFAULT
   ENDSWITCH
   ; FOLD ;%{H}
   IF ($MODE_OP<>#EX) THEN
      ;-- Trigger erst nach Wiederanstart geschaltet --
      IF ((((VW_STOP B_AND 'B10010') >0) AND ((VW_STOP B_AND 'B0001')<=0))) THEN
         ;-- MStep Bewegung --
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (NOT UES AND NOT ANA_TRIG) THEN
      SPS_FERTIG=TRUE
   ENDIF
   IF (NOT ANA_UES AND ANA_TRIG) THEN
      SPS_FERTIG_ANA=TRUE
   ENDIF
END
; ENDFOLD