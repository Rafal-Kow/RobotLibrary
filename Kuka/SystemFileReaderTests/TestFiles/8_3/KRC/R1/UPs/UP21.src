&ACCESS RVO1
&REL 158
&COMMENT VW380 HO_Behaelter_links
&PARAM EDITMASK = Up999[1-999]
&PARAM TPVW_VERSION = 8.3.18
&PARAM TEMPLATE = C:\KRC\Roboter\Template\upvorgabe
&PARAM DISKPATH = UPs
DEF UP21()
   ; FOLD UP Anfang;%{SE} %MKUKATPVW
   SPS_N=-1
   SPS_FERTIG=FALSE
   IF NOT CALLBYSELECT THEN
      INTERRUPT DECL 10 WHEN $CYCFLAG[254]==FALSE DO VW(#FB_STOP,TRUE)
      INTERRUPT ON 10
      INT10=TRUE
      VW_USR_R (#USR_INIT)
   ENDIF
   VW(#VW_INIT_UP,TRUE)
   ; ENDFOLD
   ;FOLD -- VW380, THIL -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:VW380, THIL
      ;FOLD {H}
         M_COMMENT("VW380, THIL")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- 415600R01 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:415600R01
      ;FOLD {H}
         M_COMMENT("415600R01")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- FRG ST415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:FRG ST415600
      ;FOLD {H}
         M_COMMENT("FRG ST415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Verriegelung E43 zu Rob 4165605 EIN -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Verriegelung E43 zu Rob 4165605 EIN
      ;FOLD {H}
         M_COMMENT("Verriegelung E43 zu Rob 4165605 EIN")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Verriegelung E44 zu Rob 4165605 EIN -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Verriegelung E44 zu Rob 4165605 EIN
      ;FOLD {H}
         M_COMMENT("Verriegelung E44 zu Rob 4165605 EIN")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:1, 20:-1, 21:1
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: t3 ( EIN ) = 0[1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VTASG %P 2:t3 ( EIN ) = 0[1/10Sek],3:TASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO50 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO50 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: A43 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A43 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 6: A44 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A44 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 7: A65 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A65 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 8: A68 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A68 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: A69 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A69 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 10: A71 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A71 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 11: A72 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A72 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: A73 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A73 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 13: A76 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 14: A77 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A77 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 15: A80 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A80 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 16: F930 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F930 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 17: F939 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F939 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 18: WARTE BIS E59 & E76 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E59 & E76,3:WBOASG
      ;ENDFOLD
      ;FOLD 19: F54 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F54 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 20: F1 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F1 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 21: F17 = !E15 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F17 = !E15,3:BOASG
      ;ENDFOLD
      ;FOLD 22: F18 = !E15 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F18 = !E15,3:BOASG
      ;ENDFOLD
      ;FOLD 23: SPSMAKRO342 = M13 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO342 = M13,3:MAKRO
      ;ENDFOLD
      ;FOLD 24: SPSMAKRO340 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 25: i40 ( EIN ) = 0 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i40 ( EIN ) = 0,3:ARIASG
      ;ENDFOLD
      ;FOLD 26: WARTE BIS M13 & M31 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS M13 & M31,3:WBOASG
      ;ENDFOLD
      ;FOLD 27: F54 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F54 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 28: A76 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 29: A83 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A83 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 30: A84 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A84 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 31: SPSMAKRO20 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO20 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 32: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 33: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 34: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P1_D
         Act_P1 = P1
         Act_P2 = P1
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(1) PRIO=-1
         PTP P1
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:2, 20:-1, 21:2
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P2_D
         Act_P1 = P2
         Act_P2 = P2
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10002) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P2 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Start Abstreifen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Start Abstreifen
      ;FOLD {H}
         M_COMMENT("Start Abstreifen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD KLIN VB=250[mm/s] Genau=50[mm] ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VKLIN,%P 1:4, 2: VB=, 3:250, 4:[mm/s], 5: Genau=, 6:50, 7:[mm], 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:3, 20:-1, 21:3
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P3_D
         Act_P1 = P3
         Act_P2 = P3
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10003) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P3 C_DIS
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD KLIN VB=250[mm/s] Genau=50[mm] ACC=50% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VKLIN,%P 1:4, 2: VB=, 3:250, 4:[mm/s], 5: Genau=, 6:50, 7:[mm], 8: ACC=, 9:50, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:4, 20:-1, 21:4
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P4_D
         Act_P1 = P4
         Act_P2 = P4
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10004) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P4 C_DIS
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Ende Abstreifen -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Ende Abstreifen
      ;FOLD {H}
         M_COMMENT("Ende Abstreifen")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD KLIN VB=250[mm/s] Genau=50[mm] ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VKLIN,%P 1:4, 2: VB=, 3:250, 4:[mm/s], 5: Genau=, 6:50, 7:[mm], 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:5, 20:-1, 21:5
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P5_D
         Act_P1 = P5
         Act_P2 = P5
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10005) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P5 C_DIS
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:6, 20:-1, 21:6
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P6_D
         Act_P1 = P6
         Act_P2 = P6
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10006) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P6 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:7, 20:-1, 21:7
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P7_D
         Act_P1 = P7
         Act_P2 = P7
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10007) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P7 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:8, 20:-1, 21:8
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P8_D
         Act_P1 = P8
         Act_P2 = P8
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10008) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P8 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:9, 20:-1, 21:9
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P9_D
         Act_P1 = P9
         Act_P2 = P9
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10009) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P9 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:10, 20:-1, 21:10
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P10_D
         Act_P1 = P10
         Act_P2 = P10
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10010) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P10 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:11, 20:-1, 21:11
      ;FOLD 1: FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M13 & M30 & M31 & M34 & E59 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P11_D
         Act_P1 = P11
         Act_P2 = P11
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(11) PRIO=-1
         PTP P11
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD Label 5 ;%{PSE}%MKUKATPVW,%CCONTROL,%VLABEL,%P 1:Label, 2:5
      ;FOLD  ;%{H}
         Label5:
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=400[mm/s] VE=0% ACC=100% RobWzg=11 Base=3 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:400, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:3, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:12, 20:-1, 21:12
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: i40 ( EIN ) = i40 + 1 ;%{SE}%MKUKATPVW %CVW_SPS %VARIASG %P 2:i40 ( EIN ) = i40 + 1,3:ARIASG
      ;ENDFOLD
      ;FOLD 4: F939 = i40 > 1 ;%{SE}%MKUKATPVW %CVW_SPS %VBOCMP %P 2:F939 = i40 > 1,3:BOCMP
      ;ENDFOLD
      ;FOLD 5: WARTE BIS !E77 & (!F939 + E26) ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS !E77 & (!F939 + E26),3:WBOASG
      ;ENDFOLD
      ;FOLD 6: TECH2_ Koll_Ueb Betriebsart = Aktivieren Start Bereich = 6 Offset = 8 EIN ;%{SE}%MKUKATPVW %CVW_SPS %VUSER %P 2:TECH2_.Koll_Ueb CN=204 P1=2 P2=1 P3=6 P4=8 P5=1 P6=1 P7=0 P8=0 P9=0 P10=EIN,3:USER
      ;ENDFOLD
      ;FOLD 7: M28 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:M28 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 8: M29 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:M29 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 9: M28 = E607 + !A10 + M28 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:M28 = E607 + !A10 + M28,3:BOASG
      ;ENDFOLD
      ;FOLD 10: M29 = (E603 + E605 + M63 + M64) & !F558 + M29 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:M29 = (E603 + E605 + M63 + M64) & !F558 + M29,3:BOASG
      ;ENDFOLD
      ;FOLD 11: A577 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A577 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 12: Puls A617 = Pegel:EIN Zeit:10 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VPULS %P 2:Puls A617 = Pegel:EIN Zeit:10 [1/10Sek],3:PULS
      ;ENDFOLD
      ;FOLD 13: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 14: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 15: FB PSPS = M30 & M31 & M34 & E76 & E43 & E44 & !E601 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M30 & M31 & M34 & E76 & E43 & E44 & !E601,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P12_D
         Act_P1 = P12
         Act_P2 = P12
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(12) PRIO=-1
         VW_USER(#USR_ADV,204,2,1,6,8,1,1,0,0,0,TRUE)
         VW_USR_R(#USR_ADV,204,2,1,6,8,1,1,0,0,0,TRUE)
         LIN P12
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         VW_USER(#USR_MAIN,204,2,1,6,8,1,1,0,0,0,TRUE)
         VW_USR_R(#USR_MAIN,204,2,1,6,8,1,1,0,0,0,TRUE)
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Entnahme ST415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Entnahme ST415600
      ;FOLD {H}
         M_COMMENT("Entnahme ST415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- FM 1 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:FM 1
      ;FOLD {H}
         M_COMMENT("FM 1")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN SUCHEN VB=400[mm/s] RobWzg=11 Base=3 Fern=M28 Vred=10% Nah=M29 P ;%{P}%MKUKATPVW,%CSUCHEN8,%VSUCHEN,%P 1:LIN SUCHEN, 2: VB=, 3:400, 4:[mm/s], 5: RobWzg=, 6:11, 7: Base=, 8:3, 9: Fern=, 10:2, 11:28, 12: Vred=, 13:10, 14:%, 15: Nah=, 16:2, 17:29, 18: , 19: P, 20:13, 21:-1, 22:13
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: GOTO SPSLabel 7 = F887 ;%{SE}%MKUKATPVW %CCONTROL %VJUMP %P 2:GOTO SPSLabel 7 = F887,3:JUMP
      ;ENDFOLD
      ;FOLD 3: F2 = !F887 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F2 = !F887,3:BOASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO343 = !F887 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO343 = !F887,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: SPSMAKRO340 = !F887 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = !F887,3:MAKRO
      ;ENDFOLD
      ;FOLD 6: WARTE BIS E586 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E586,3:WBOASG
      ;ENDFOLD
      ;FOLD 7: F2 = !F887 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F2 = !F887,3:BOASG
      ;ENDFOLD
      ;FOLD 8: SPSMAKRO342 = !F887 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO342 = !F887,3:MAKRO
      ;ENDFOLD
      ;FOLD 9: SPSMAKRO340 = !F887 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = !F887,3:MAKRO
      ;ENDFOLD
      ;FOLD 10: WARTE BIS E585 & !E601 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E585 & !E601,3:WBOASG
      ;ENDFOLD
      ;FOLD 11: SPSLabel 7 ;%{SE}%MKUKATPVW %CCONTROL %VLABEL %P 2:SPSLabel 7,3:LABEL
      ;ENDFOLD
      ;FOLD 12: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 13: A73 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A73 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 14: A73 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A73 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 15: Tech10_ Suchlauf Stop Maximaler Weg: 90 [mm] Maximaler Weg T1: 125 [mm] Fehler-Flag: F 887 Fehler-Ausgang: A 124 Bei Fehler P-SPS =EIN Techaufruf=EIN ;%{SE}%MKUKATPVW %CVW_SPS %VUSER %P 2:Tech10_.Suchlauf Stop CN=1010 P1=90 P2=125 P3=887 P4=124 P5=0 P6=1 P7=1 P8=1 P9=1 P10=EIN,3:USER
      ;ENDFOLD
      ;FOLD 16: A577 = F887 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A577 = F887,3:BOASG
      ;ENDFOLD
      ;FOLD 17: A618 = F887 ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A618 = F887,3:BOASG
      ;ENDFOLD
      ;FOLD 18: GOTO SPSLabel 6 = F887 ;%{SE}%MKUKATPVW %CCONTROL %VJUMP %P 2:GOTO SPSLabel 6 = F887,3:JUMP
      ;ENDFOLD
      ;FOLD 19: Tech_ Baseverschiebung Suchlauf Base 31 setzen - Pulszeit 1/10sec=1 - xyz-MaxWeg:1 [mm] Nahsensor=Merker29 EIN ;%{SE}%MKUKATPVW %CVW_SPS %VUSER %P 2:Tech_.Baseverschiebung CN=105 P1=11 P2=0 P3=1 P4=0 P5=1 P6=29 P7=0 P8=0 P9=0 P10=EIN,3:USER
      ;ENDFOLD
      ;FOLD 20: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 21: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 22: SPSLabel 6 ;%{SE}%MKUKATPVW %CCONTROL %VLABEL %P 2:SPSLabel 6,3:LABEL
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P13_D
         Act_P1 = P13
         Act_P2 = P13
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         VW_USER(#USR_ADV,1010,90,125,887,124,0,1,1,1,1,TRUE)
         VW_USR_R(#USR_ADV,1010,90,125,887,124,0,1,1,1,1,TRUE)
         VW_USER(#USR_ADV,105,11,0,1,0,1,29,0,0,0,TRUE)
         VW_USR_R(#USR_ADV,105,11,0,1,0,1,29,0,0,0,TRUE)
         INTERRUPT DECL 12 WHEN $CYCFLAG[29] DO VW(#SUCH_STOP,TRUE)
         INTERRUPT DECL 39 WHEN SEARCH_END DO SPS_TRIG (13)
         LIN $POS_ACT
         Z_PUNKT=P13
         VW(#SUCH_START,TRUE,29,28,10,4,TRUE)
         SEARCH_END = TRUE
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
         VW_USER(#USR_MAIN,1010,90,125,887,124,0,1,1,1,1,TRUE)
         VW_USR_R(#USR_MAIN,1010,90,125,887,124,0,1,1,1,1,TRUE)
         VW_USER(#USR_MAIN,105,11,0,1,0,1,29,0,0,0,TRUE)
         VW_USR_R(#USR_MAIN,105,11,0,1,0,1,29,0,0,0,TRUE)
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD GOTO Label 5 = F887 ;%{PSE}%MKUKATPVW,%CCONTROL,%VJUMP,%P 1:GOTO Label, 2:5, 3:=, 4:F887
      ;FOLD  ;%{H}
         CONTINUE
         IF $FLAG[887] THEN
            CONTINUE
            GOTO Label5
         ENDIF
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=50[mm/s] VE=100% ACC=100% RobWzg=11 Base=31 SPSTrig=5[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:50, 4:[mm/s], 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:31, 15: SPSTrig=, 16:5, 17:[1/100s], 18: P, 19:14, 20:-1, 21:14
      ;FOLD 1: FB PSPS = M2 & M30 & M31 & M34 & M63 & E76 & E43 & E44 & !E601 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M31 & M34 & M63 & E76 & E43 & E44 & !E601,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P14_D
         Act_P1 = P14
         Act_P2 = P14
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=-50 DO SPS_TRIG(10014) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P14 C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=400[mm/s] VE=100% ACC=100% RobWzg=11 Base=31 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:400, 4:[mm/s], 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:31, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:15, 20:-1, 21:15
      ;FOLD 1: FB PSPS = M2 & M30 & M31 & M34 & M63 & E76 & E43 & E44 & !E601 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M31 & M34 & M63 & E76 & E43 & E44 & !E601,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P15_D
         Act_P1 = P15
         Act_P2 = P15
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10015) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P15 C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=400[mm/s] VE=100% ACC=100% RobWzg=11 Base=31 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:400, 4:[mm/s], 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:31, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:16, 20:-1, 21:16
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A577 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A577 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 3: Puls A619 = Pegel:EIN Zeit:10 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VPULS %P 2:Puls A619 = Pegel:EIN Zeit:10 [1/10Sek],3:PULS
      ;ENDFOLD
      ;FOLD 4: FB PSPS = M2 & M30 & M31 & M34 & M63 & E76 & E43 & E44 & !E601 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M31 & M34 & M63 & E76 & E43 & E44 & !E601,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P16_D
         Act_P1 = P16
         Act_P2 = P16
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10016) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P16 C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=400[mm/s] VE=100% ACC=100% RobWzg=11 Base=31 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:400, 4:[mm/s], 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:31, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:17, 20:-1, 21:17
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A577 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A577 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 3: Puls A619 = Pegel:EIN Zeit:10 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VPULS %P 2:Puls A619 = Pegel:EIN Zeit:10 [1/10Sek],3:PULS
      ;ENDFOLD
      ;FOLD 4: Puls A579 = Pegel:EIN Zeit:10 [1/10Sek] ;%{SE}%MKUKATPVW %CVW_SPS %VPULS %P 2:Puls A579 = Pegel:EIN Zeit:10 [1/10Sek],3:PULS
      ;ENDFOLD
      ;FOLD 5: FB PSPS = M2 & M30 & M34 & M63 & E76 & E43 & E44 & !E601 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M34 & M63 & E76 & E43 & E44 & !E601,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P17_D
         Act_P1 = P17
         Act_P2 = P17
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10017) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         LIN P17 C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD LIN VB=1500[mm/s] VE=0% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VLIN,%P 1:2, 2: VB=, 3:1500, 4:[mm/s], 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:18, 20:-1, 21:18
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: F1 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:F1 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 4: SPSMAKRO343 = !M32 ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO343 = !M32,3:MAKRO
      ;ENDFOLD
      ;FOLD 5: SPSMAKRO340 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO340 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 6: SPSMAKRO1 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VMAKRO %P 2:SPSMAKRO1 = EIN,3:MAKRO
      ;ENDFOLD
      ;FOLD 7: WARTE BIS E23 & M32 & M64 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23 & M32 & M64,3:WBOASG
      ;ENDFOLD
      ;FOLD 8: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P18_D
         Act_P1 = P18
         Act_P2 = P18
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(18) PRIO=-1
         LIN P18
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:19, 20:-1, 21:19
      ;FOLD 1: FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P19_D
         Act_P1 = P19
         Act_P2 = P19
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10019) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P19 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=100% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:100, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:20, 20:-1, 21:20
      ;FOLD 1: FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E76 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E76 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P20_D
         Act_P1 = P20
         Act_P2 = P20
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(10020) PRIO=-1 UP_TIME_OUT=SPS_TIMEOUT
         PTP P20 C_PTP C_VEL
         $ADVANCE=1
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- Profilfrei ST415600 -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:Profilfrei ST415600
      ;FOLD {H}
         M_COMMENT("Profilfrei ST415600")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD -- ACHTUNG! Position ist nicht von PF0 oder UP-Anfang anfahrbar! -- ;%{PSE}%MKUKATPVW,%CVW_COM,%VCOMMENT,%P 1:Comment:, 2:ACHTUNG! Position ist nicht von PF0 oder UP-Anfang anfahrbar!
      ;FOLD {H}
         M_COMMENT("ACHTUNG! Position ist nicht von PF0 oder UP-Anfang anfahrbar!")
      ;ENDFOLD
   ;ENDFOLD
   ;FOLD PTP VB=100% VE=0% ACC=100% RobWzg=11 Base=0 SPSTrig=0[1/100s] P ;%{P}%MKUKATPVW,%CMOVE8,%VPTP,%P 1:1, 2: VB=, 3:100, 4:%, 5: VE=, 6:0, 7:%, 8: ACC=, 9:100, 10:%, 11: RobWzg=, 12:11, 13: Base=, 14:0, 15: SPSTrig=, 16:0, 17:[1/100s], 18: P, 19:21, 20:-1, 21:21
      ;FOLD 1: FB PSPS = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = EIN,3:FBPSPS
      ;ENDFOLD
      ;FOLD 2: A23 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 3: A76 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A76 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 4: A43 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A43 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 5: A44 = AUS ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A44 = AUS,3:BOASG
      ;ENDFOLD
      ;FOLD 6: t3 ( EIN) = STOP ;%{SE}%MKUKATPVW %CVW_SPS %VTSTOP %P 2:t3 ( EIN) = STOP,3:TSTOP
      ;ENDFOLD
      ;FOLD 7: WARTE BIS E23 ;%{SE}%MKUKATPVW %CVW_SPS %VWBOASG %P 2:WARTE BIS E23,3:WBOASG
      ;ENDFOLD
      ;FOLD 8: A23 = EIN ;%{SE}%MKUKATPVW %CVW_SPS %VBOASG %P 2:A23 = EIN,3:BOASG
      ;ENDFOLD
      ;FOLD 9: FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E43 & E44 ;%{SE}%MKUKATPVW %CVW_SPS %VFBPSPS %P 2:FB PSPS = M2 & M30 & M32 & M34 & M63 & M64 & E43 & E44,3:FBPSPS
      ;ENDFOLD
      ;FOLD {H}
         VW_MPARA_ACT=P21_D
         Act_P1 = P21
         Act_P2 = P21
         VW(#MPARA,TRUE)
         SPS_FERTIG=FALSE
         TRIGGER WHEN DISTANCE=1 DELAY=0 DO SPS_TRIG(21) PRIO=-1
         PTP P21
         $ADVANCE=1
         WAIT FOR SPS_FERTIG
      ;ENDFOLD
   ;ENDFOLD
   ; FOLD ;%{H}
END
DEF SPS_TRIG(NO :IN)
   INT NO
   INT VW_STOP
   BOOL UES
   BOOL ANA_UES
   BOOL ANA_TRIG
   VW_STOP=$VW_PSPS_STOP
   UES=FALSE
   ANA_UES=FALSE
   ANA_TRIG=FALSE
   IF ((NO>10000) AND (NO<20000)) THEN
      NO=NO-10000
      UES=TRUE
   ENDIF
   IF ((NO>20000) AND (NO<30000)) THEN
      NO=NO-20000
      ANA_TRIG=TRUE
   ENDIF
   IF NO>30000 THEN
      NO=NO-30000
      ANA_UES=TRUE
      ANA_TRIG=TRUE
   ENDIF
   ; FOLD ;%{H}
   IF ((VW_STOP B_AND 'B0001') > 0) THEN
      ;-- Trigger vorzeitig geschaltet (delay < 0) oder MStep
      IF (((VW_STOP B_AND 'B0110') > 0) AND ($MODE_OP<>#EX)) THEN
         ;-- MStep oder BCO Bewegung
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (SEARCH_END) THEN
      SEARCH_END = FALSE
      INTERRUPT OFF 39
   ENDIF
   SWITCH NO
      CASE 1
         ;FOLD SPS_TRIG1 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            VW(#SET_TIME,TRUE,3,0,0)
            SEL_RES=SELECT(#MAKRO,50,TRUE,,,,,FALSE)
            $OUT[43] = FALSE
            $OUT[44] = FALSE
            $OUT[65] = FALSE
            $OUT[68] = TRUE
            $OUT[69] = FALSE
            $OUT[71] = FALSE
            $OUT[72] = TRUE
            $OUT[73] = FALSE
            $OUT[76] = TRUE
            $OUT[77] = FALSE
            $OUT[80] = TRUE
            $FLAG[930] = FALSE
            $FLAG[939] = FALSE
            $LOOP_MSG[]="E59 & E76"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[59] AND $IN[76]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[54] = TRUE
            $FLAG[1] = TRUE
            $FLAG[17] = NOT $IN[15]
            $FLAG[18] = NOT $IN[15]
            SEL_RES=SELECT(#MAKRO,342,$CYCFLAG[13],,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,TRUE,,,,,FALSE)
            VW(#COUNTER,TRUE,40,0)
            $LOOP_MSG[]="M13 & M31"
            $LOOP_CONT=TRUE
            WAIT FOR ($CYCFLAG[13] AND $CYCFLAG[31]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[54] = FALSE
            $OUT[76] = FALSE
            $OUT[83] = TRUE
            $OUT[84] = TRUE
            SEL_RES=SELECT(#MAKRO,20,TRUE,,,,,FALSE)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 2
         ;FOLD SPS_TRIG2 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 3
         ;FOLD SPS_TRIG3 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 4
         ;FOLD SPS_TRIG4 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 5
         ;FOLD SPS_TRIG5 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 6
         ;FOLD SPS_TRIG6 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 7
         ;FOLD SPS_TRIG7 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 8
         ;FOLD SPS_TRIG8 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 9
         ;FOLD SPS_TRIG9 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 10
         ;FOLD SPS_TRIG10 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 11
         ;FOLD SPS_TRIG11 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[13] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[59] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 12
         ;FOLD SPS_TRIG12 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            VW(#COUNTER,TRUE,40,$COUNT_I[40] + 1)
            $FLAG[939] = $COUNT_I[40] > 1
            $LOOP_MSG[]="!E77 & (!F939 + E26)"
            $LOOP_CONT=TRUE
            WAIT FOR (NOT $IN[77] AND (NOT $FLAG[939] OR $IN[26])) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            VW_USER(#USR_TRIG,204,2,1,6,8,1,1,0,0,0,TRUE)
            VW_USR_R(#USR_TRIG,204,2,1,6,8,1,1,0,0,0,TRUE)
            $CYCFLAG[28] = FALSE
            $CYCFLAG[29] = FALSE
            $CYCFLAG[28] = $IN[607] OR NOT $OUT[10] OR $CYCFLAG[28]
            $CYCFLAG[29] = ($IN[603] OR $IN[605] OR $CYCFLAG[63] OR $CYCFLAG[64]) AND NOT $FLAG[558] OR $CYCFLAG[29]
            $OUT[577] = TRUE
            VW(#VW_PULSE, TRUE, 1, 0, 10, 617, TRUE)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $IN[76] AND $IN[43] AND $IN[44] AND NOT $IN[601]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 13
         ;FOLD SPS_TRIG13 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            IF $FLAG[887] THEN
               GOTO SPSLabel7_C13
            ENDIF
            $FLAG[2] = NOT $FLAG[887]
            SEL_RES=SELECT(#MAKRO,343,NOT $FLAG[887],,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,NOT $FLAG[887],,,,,FALSE)
            $LOOP_MSG[]="E586"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[586]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $FLAG[2] = NOT $FLAG[887]
            SEL_RES=SELECT(#MAKRO,342,NOT $FLAG[887],,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,NOT $FLAG[887],,,,,FALSE)
            $LOOP_MSG[]="E585 & !E601"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[585] AND NOT $IN[601]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            SPSLabel7_C13:
            $OUT[23] = FALSE
            $OUT[73] = TRUE
            $OUT[73] = FALSE
            VW_USER(#USR_TRIG,1010,90,125,887,124,0,1,1,1,1,TRUE)
            VW_USR_R(#USR_TRIG,1010,90,125,887,124,0,1,1,1,1,TRUE)
            $OUT[577] = $FLAG[887]
            $OUT[618] = $FLAG[887]
            IF $FLAG[887] THEN
               GOTO SPSLabel6_C13
            ENDIF
            VW_USER(#USR_TRIG,105,11,0,1,0,1,29,0,0,0,TRUE)
            VW_USR_R(#USR_TRIG,105,11,0,1,0,1,29,0,0,0,TRUE)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            SPSLabel6_C13:
         ;ENDFOLD
      CASE 14
         ;FOLD SPS_TRIG14 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $IN[76] AND $IN[43] AND $IN[44] AND NOT $IN[601]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 15
         ;FOLD SPS_TRIG15 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $IN[76] AND $IN[43] AND $IN[44] AND NOT $IN[601]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 16
         ;FOLD SPS_TRIG16 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[577] = TRUE
            VW(#VW_PULSE, TRUE, 1, 0, 10, 619, TRUE)
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[31] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $IN[76] AND $IN[43] AND $IN[44] AND NOT $IN[601]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 17
         ;FOLD SPS_TRIG17 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[577] = TRUE
            VW(#VW_PULSE, TRUE, 1, 0, 10, 619, TRUE)
            VW(#VW_PULSE, TRUE, 1, 0, 10, 579, TRUE)
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $IN[76] AND $IN[43] AND $IN[44] AND NOT $IN[601]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 18
         ;FOLD SPS_TRIG18 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $FLAG[1] = TRUE
            SEL_RES=SELECT(#MAKRO,343,NOT $CYCFLAG[32],,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,340,TRUE,,,,,FALSE)
            SEL_RES=SELECT(#MAKRO,1,TRUE,,,,,FALSE)
            $LOOP_MSG[]="E23 & M32 & M64"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23] AND $CYCFLAG[32] AND $CYCFLAG[64]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $CYCFLAG[64] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 19
         ;FOLD SPS_TRIG19 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $CYCFLAG[64] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 20
         ;FOLD SPS_TRIG20 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $CYCFLAG[64] AND $IN[76] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 21
         ;FOLD SPS_TRIG21 {H}
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=(TRUE) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
            $OUT[23] = FALSE
            $OUT[76] = TRUE
            $OUT[43] = FALSE
            $OUT[44] = FALSE
            VW(#SET_TIME,TRUE,3,1,0)
            $LOOP_MSG[]="E23"
            $LOOP_CONT=TRUE
            WAIT FOR ($IN[23]) OR (NOT $LOOP_CONT AND ($MODE_OP<>#EX))
            $LOOP_MSG[]="                                                                                                                                "
            $OUT[23] = TRUE
            VALCYCFL30=$CYCFLAG[254]
            $CYCFLAG[254]=($CYCFLAG[2] AND $CYCFLAG[30] AND $CYCFLAG[32] AND $CYCFLAG[34] AND $CYCFLAG[63] AND $CYCFLAG[64] AND $IN[43] AND $IN[44]) AND $CYCFLAG[255] OR ($TIMER[61]<0)
            VW(#FB_CHECK,TRUE)
         ;ENDFOLD
      CASE 22
         ;FOLD SPS_TRIG22 {H}
         ;ENDFOLD
      CASE 23
         ;FOLD SPS_TRIG23 {H}
         ;ENDFOLD
      CASE 24
         ;FOLD SPS_TRIG24 {H}
         ;ENDFOLD
      CASE 25
         ;FOLD SPS_TRIG25 {H}
         ;ENDFOLD
      CASE 26
         ;FOLD SPS_TRIG26 {H}
         ;ENDFOLD
      CASE 27
         ;FOLD SPS_TRIG27 {H}
         ;ENDFOLD
      CASE 28
         ;FOLD SPS_TRIG28 {H}
         ;ENDFOLD
      CASE 29
         ;FOLD SPS_TRIG29 {H}
         ;ENDFOLD
      CASE 30
         ;FOLD SPS_TRIG30 {H}
         ;ENDFOLD
      CASE 31
         ;FOLD SPS_TRIG31 {H}
         ;ENDFOLD
      CASE 32
         ;FOLD SPS_TRIG32 {H}
         ;ENDFOLD
      CASE 33
         ;FOLD SPS_TRIG33 {H}
         ;ENDFOLD
      CASE 34
         ;FOLD SPS_TRIG34 {H}
         ;ENDFOLD
      CASE 35
         ;FOLD SPS_TRIG35 {H}
         ;ENDFOLD
      CASE 36
         ;FOLD SPS_TRIG36 {H}
         ;ENDFOLD
      CASE 37
         ;FOLD SPS_TRIG37 {H}
         ;ENDFOLD
      CASE 38
         ;FOLD SPS_TRIG38 {H}
         ;ENDFOLD
      CASE 39
         ;FOLD SPS_TRIG39 {H}
         ;ENDFOLD
      CASE 40
         ;FOLD SPS_TRIG40 {H}
         ;ENDFOLD
      CASE 41
         ;FOLD SPS_TRIG41 {H}
         ;ENDFOLD
      CASE 42
         ;FOLD SPS_TRIG42 {H}
         ;ENDFOLD
      CASE 43
         ;FOLD SPS_TRIG43 {H}
         ;ENDFOLD
      CASE 44
         ;FOLD SPS_TRIG44 {H}
         ;ENDFOLD
      CASE 45
         ;FOLD SPS_TRIG45 {H}
         ;ENDFOLD
      CASE 46
         ;FOLD SPS_TRIG46 {H}
         ;ENDFOLD
      CASE 47
         ;FOLD SPS_TRIG47 {H}
         ;ENDFOLD
      CASE 48
         ;FOLD SPS_TRIG48 {H}
         ;ENDFOLD
      CASE 49
         ;FOLD SPS_TRIG49 {H}
         ;ENDFOLD
      CASE 50
         ;FOLD SPS_TRIG50 {H}
         ;ENDFOLD
      CASE 51
         ;FOLD SPS_TRIG51 {H}
         ;ENDFOLD
      CASE 52
         ;FOLD SPS_TRIG52 {H}
         ;ENDFOLD
      CASE 53
         ;FOLD SPS_TRIG53 {H}
         ;ENDFOLD
      CASE 54
         ;FOLD SPS_TRIG54 {H}
         ;ENDFOLD
      CASE 55
         ;FOLD SPS_TRIG55 {H}
         ;ENDFOLD
      CASE 56
         ;FOLD SPS_TRIG56 {H}
         ;ENDFOLD
      CASE 57
         ;FOLD SPS_TRIG57 {H}
         ;ENDFOLD
      CASE 58
         ;FOLD SPS_TRIG58 {H}
         ;ENDFOLD
      CASE 59
         ;FOLD SPS_TRIG59 {H}
         ;ENDFOLD
      CASE 60
         ;FOLD SPS_TRIG60 {H}
         ;ENDFOLD
      CASE 61
         ;FOLD SPS_TRIG61 {H}
         ;ENDFOLD
      CASE 62
         ;FOLD SPS_TRIG62 {H}
         ;ENDFOLD
      CASE 63
         ;FOLD SPS_TRIG63 {H}
         ;ENDFOLD
      CASE 64
         ;FOLD SPS_TRIG64 {H}
         ;ENDFOLD
      CASE 65
         ;FOLD SPS_TRIG65 {H}
         ;ENDFOLD
      CASE 66
         ;FOLD SPS_TRIG66 {H}
         ;ENDFOLD
      CASE 67
         ;FOLD SPS_TRIG67 {H}
         ;ENDFOLD
      CASE 68
         ;FOLD SPS_TRIG68 {H}
         ;ENDFOLD
      CASE 69
         ;FOLD SPS_TRIG69 {H}
         ;ENDFOLD
      CASE 70
         ;FOLD SPS_TRIG70 {H}
         ;ENDFOLD
      CASE 71
         ;FOLD SPS_TRIG71 {H}
         ;ENDFOLD
      CASE 72
         ;FOLD SPS_TRIG72 {H}
         ;ENDFOLD
      CASE 73
         ;FOLD SPS_TRIG73 {H}
         ;ENDFOLD
      CASE 74
         ;FOLD SPS_TRIG74 {H}
         ;ENDFOLD
      CASE 75
         ;FOLD SPS_TRIG75 {H}
         ;ENDFOLD
      CASE 76
         ;FOLD SPS_TRIG76 {H}
         ;ENDFOLD
      CASE 77
         ;FOLD SPS_TRIG77 {H}
         ;ENDFOLD
      CASE 78
         ;FOLD SPS_TRIG78 {H}
         ;ENDFOLD
      CASE 79
         ;FOLD SPS_TRIG79 {H}
         ;ENDFOLD
      CASE 80
         ;FOLD SPS_TRIG80 {H}
         ;ENDFOLD
      CASE 81
         ;FOLD SPS_TRIG81 {H}
         ;ENDFOLD
      CASE 82
         ;FOLD SPS_TRIG82 {H}
         ;ENDFOLD
      CASE 83
         ;FOLD SPS_TRIG83 {H}
         ;ENDFOLD
      CASE 84
         ;FOLD SPS_TRIG84 {H}
         ;ENDFOLD
      CASE 85
         ;FOLD SPS_TRIG85 {H}
         ;ENDFOLD
      CASE 86
         ;FOLD SPS_TRIG86 {H}
         ;ENDFOLD
      CASE 87
         ;FOLD SPS_TRIG87 {H}
         ;ENDFOLD
      CASE 88
         ;FOLD SPS_TRIG88 {H}
         ;ENDFOLD
      CASE 89
         ;FOLD SPS_TRIG89 {H}
         ;ENDFOLD
      CASE 90
         ;FOLD SPS_TRIG90 {H}
         ;ENDFOLD
      CASE 91
         ;FOLD SPS_TRIG91 {H}
         ;ENDFOLD
      CASE 92
         ;FOLD SPS_TRIG92 {H}
         ;ENDFOLD
      CASE 93
         ;FOLD SPS_TRIG93 {H}
         ;ENDFOLD
      CASE 94
         ;FOLD SPS_TRIG94 {H}
         ;ENDFOLD
      CASE 95
         ;FOLD SPS_TRIG95 {H}
         ;ENDFOLD
      CASE 96
         ;FOLD SPS_TRIG96 {H}
         ;ENDFOLD
      CASE 97
         ;FOLD SPS_TRIG97 {H}
         ;ENDFOLD
      CASE 98
         ;FOLD SPS_TRIG98 {H}
         ;ENDFOLD
      CASE 99
         ;FOLD SPS_TRIG99 {H}
         ;ENDFOLD
      CASE 100
         ;FOLD SPS_TRIG100 {H}
         ;ENDFOLD
      CASE 101
         ;FOLD SPS_TRIG101 {H}
         ;ENDFOLD
      CASE 102
         ;FOLD SPS_TRIG102 {H}
         ;ENDFOLD
      CASE 103
         ;FOLD SPS_TRIG103 {H}
         ;ENDFOLD
      CASE 104
         ;FOLD SPS_TRIG104 {H}
         ;ENDFOLD
      CASE 105
         ;FOLD SPS_TRIG105 {H}
         ;ENDFOLD
      CASE 106
         ;FOLD SPS_TRIG106 {H}
         ;ENDFOLD
      CASE 107
         ;FOLD SPS_TRIG107 {H}
         ;ENDFOLD
      CASE 108
         ;FOLD SPS_TRIG108 {H}
         ;ENDFOLD
      CASE 109
         ;FOLD SPS_TRIG109 {H}
         ;ENDFOLD
      CASE 110
         ;FOLD SPS_TRIG110 {H}
         ;ENDFOLD
      CASE 111
         ;FOLD SPS_TRIG111 {H}
         ;ENDFOLD
      CASE 112
         ;FOLD SPS_TRIG112 {H}
         ;ENDFOLD
      CASE 113
         ;FOLD SPS_TRIG113 {H}
         ;ENDFOLD
      CASE 114
         ;FOLD SPS_TRIG114 {H}
         ;ENDFOLD
      CASE 115
         ;FOLD SPS_TRIG115 {H}
         ;ENDFOLD
      CASE 116
         ;FOLD SPS_TRIG116 {H}
         ;ENDFOLD
      CASE 117
         ;FOLD SPS_TRIG117 {H}
         ;ENDFOLD
      CASE 118
         ;FOLD SPS_TRIG118 {H}
         ;ENDFOLD
      CASE 119
         ;FOLD SPS_TRIG119 {H}
         ;ENDFOLD
      CASE 120
         ;FOLD SPS_TRIG120 {H}
         ;ENDFOLD
      CASE 121
         ;FOLD SPS_TRIG121 {H}
         ;ENDFOLD
      CASE 122
         ;FOLD SPS_TRIG122 {H}
         ;ENDFOLD
   DEFAULT
   ENDSWITCH
   ; FOLD ;%{H}
   IF ($MODE_OP<>#EX) THEN
      ;-- Trigger erst nach Wiederanstart geschaltet --
      IF ((((VW_STOP B_AND 'B10010') >0) AND ((VW_STOP B_AND 'B0001')<=0))) THEN
         ;-- MStep Bewegung --
         HALT
      ENDIF
   ENDIF
   ; ENDFOLD
   IF (NOT UES AND NOT ANA_TRIG) THEN
      SPS_FERTIG=TRUE
   ENDIF
   IF (NOT ANA_UES AND ANA_TRIG) THEN
      SPS_FERTIG_ANA=TRUE
   ENDIF
END
; ENDFOLD