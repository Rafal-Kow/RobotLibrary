&ACCESS  RV
&PARAM DISKPATH = VW_User/Applikation/Schrauben
&PARAM TPVW_VERSION = 8.3.8
&REL 200
DEF vw_sr_usr_r( )
; 
;*-----------------------------------------------------*
;*Technologiepaket Schrauben                           *
;*                                                     *
;*Konzernstandard                                      *
;*Bearbeiter: W. Lehmeier I/PG-C61                     *
;*                                                     *
;* Erstellt am:                                        *
;* 2015.06.17 LE                                       *
;*                                                     *
;*------------------------------------------------------
; 
END
;
;FOLD Schrauben_Interface
GLOBAL DEF SR_Interfac(USER_CMD:IN,CMD_SEL:IN,PAR1:IN,PAR2:IN,PAR3:IN,PAR4:IN,PAR5:IN,PAR6:IN)
DECL VW_USER_CMD USER_CMD
INT  CMD_SEL,PAR1,PAR2,PAR3,PAR4,PAR5,PAR6
INT i
;
;-----------------------------------------------------------
SWITCH USER_CMD
;
;-----------------------------------------------------------
  CASE #USR_INIT
    ;FOLD Init
;
;
    ;ENDFOLD (Init)
;
;-----------------------------------------------------------
  CASE #USR_ADV
    ;FOLD Advance
;    
    CONTINUE
    O_SR_Nr_SPS=PAR6 ;Schraub-Nr an SPS
    CONTINUE
    O_SR1_ProgNr=PAR1 ; Programm-Nr an S-Spindel 1
    CONTINUE
    O_SR2_ProgNr=PAR1 ; Programm-Nr an S-Spindel 2
    CONTINUE
    O_SR3_ProgNr=PAR1 ; Programm-Nr an S-Spindel 3
    CONTINUE
    O_SR4_ProgNr=PAR1 ; Programm-Nr an S-Spindel 4
;
    ;ENDFOLD (Advance)
;
;-----------------------------------------------------------
  CASE #USR_TRIG
    ;FOLD Trig
;    
    IF (PAR6==$COUNT_I[I_Arbpkt_Nr]) THEN
      Schrauben_Msg(1,#QuitMsg) ; Schraube schon verschraubt
    ENDIF
    IF ((O_SR1_ProgNr<>PAR1) OR (O_SR_Nr_SPS<>PAR6)) THEN
      O_SR1_ProgNr=PAR1 ; Programm-Nr an S-Spindel 1
      O_SR2_ProgNr=PAR1 ; Programm-Nr an S-Spindel 2
      O_SR3_ProgNr=PAR1 ; Programm-Nr an S-Spindel 3
      O_SR4_ProgNr=PAR1 ; Programm-Nr an S-Spindel 4
      O_SR_Nr_SPS=PAR6 ;Schraub-Nr an SPS
    ENDIF  
    IF $FLAG[F_SR1_aktiv] THEN
      WHILE O_SR1_ProgNr<>I_SR1_ProgNr
        Schrauben_Msg(2,#QuitMsg) ; Echo Programm-Nr S1 falsch
      ENDWHILE
    ENDIF 
    IF $FLAG[F_SR2_aktiv] THEN
      WHILE O_SR2_ProgNr<>I_SR2_ProgNr
        Schrauben_Msg(3,#QuitMsg) ; Echo Programm-Nr S2 falsch
      ENDWHILE
    ENDIF 
    IF $FLAG[F_SR3_aktiv] THEN
      WHILE O_SR3_ProgNr<>I_SR3_ProgNr
        Schrauben_Msg(4,#QuitMsg) ; Echo Programm-Nr S3 falsch
      ENDWHILE
    ENDIF 
    IF $FLAG[F_SR4_aktiv] THEN
      WHILE O_SR4_ProgNr<>I_SR4_ProgNr
        Schrauben_Msg(5,#QuitMsg) ; Echo Programm-Nr S4 falsch
      ENDWHILE
    ENDIF   
;
    ;ENDFOLD (Trig)
;
;-----------------------------------------------------------
  CASE #USR_MAIN
    ;FOLD Main
;    
    $COUNT_I[I_Arbpkt_Nr]=PAR6
    $OUT[O_SR1_aktiv]=FALSE
    $OUT[O_SR2_aktiv]=FALSE
    $OUT[O_SR3_aktiv]=FALSE
    $OUT[O_SR4_aktiv]=FALSE
    O_SR_Nr_SPS=0
;
    ;ENDFOLD (Main)
;
;-----------------------------------------------------------
  DEFAULT
;  
  ENDSWITCH
END
;
;ENDFOLD (Bolzen Interface)
;
;-----------------------------------------------------------
;FOLD SR_Meldungen
DEF Schrauben_Msg(msg_nr :IN, MsgTyp :IN)
INT msg_nr
DECL SRR_MsgType MsgTyp
DECL KrlMsg_T USER_MSG
DECL KrlMsgPar_T Par[3]
DECL KrlMsgOpt_T Opt
DECL STATE_T Stat 
;
USER_MSG = { Modul[] "SR_R_Msg", Nr -1, Msg_txt[] " "}
Opt = { VL_Stop True, Clear_P_Reset True, Log_To_DB False }
Par[1] = { Par_type #Value, Par_txt[] " " }
;
IF ((n_SRR_Handle[msg_nr]<0) OR (MsgTyp==#NotifyMsg) OR (MsgTyp==#QuitMsg)) THEN
  USER_MSG.Nr = msg_nr
  SWITCH msg_nr
    CASE 1
      USER_MSG.MSG_TXT[]="Schraube schon verschraubt"
    CASE 2
	   USER_MSG.MSG_TXT[]="Echo Programm-Nr S1 falsch"
    CASE 3
      USER_MSG.MSG_TXT[]="Echo Programm-Nr S2 falsch"
    CASE 4
	   USER_MSG.MSG_TXT[]="Echo Programm-Nr S3 falsch"
    CASE 5
	   USER_MSG.MSG_TXT[]="Echo Programm-Nr S4 falsch"
    CASE 6
	   USER_MSG.MSG_TXT[]=" "      
    CASE 19
	   USER_MSG.MSG_TXT[]="Falsche Gruppen-Auswahl"  
    CASE 20
	   USER_MSG.MSG_TXT[]="P1: Falsche Auswahl"
    CASE 21
	   USER_MSG.MSG_TXT[]="P2: Falsche Auswahl" 
    CASE 22
	   USER_MSG.MSG_TXT[]="P3: Falsche Auswahl"    
    DEFAULT
      USER_MSG.MSG_TXT[]="unbekannte Meldung"
  ENDSWITCH
  SWITCH MsgTyp
    CASE #StateMsg
      n_SRR_Handle[msg_nr] = Set_KrlMsg (#State, USER_MSG, Par[], Opt) ;Ausgabe Statusmeldung
    CASE #QuitMsg
      n_SRR_Handle[msg_nr] = Set_KrlMsg (#Quit, USER_MSG, Par[], Opt) ;Ausgabe Quittierungsmeldung
      While ( Exists_KrlMsg(n_SRR_Handle[msg_nr]) )  ;Warten bis der Anwender quittiert
        Wait Sec 0.1
      Endwhile
    CASE #NotifyMsg
      n_SRR_Handle[msg_nr] = Set_KrlMsg (#Notify, USER_MSG, Par[], Opt) ;Ausgabe Hinweismeldung
    DEFAULT
      n_SRR_Handle[msg_nr] = Set_KrlMsg (#Quit, USER_MSG, Par[], Opt) ;Ausgabe Quittierungsmeldung
  ENDSWITCH
ENDIF  
END
;
;ENDFOLD (SR Meldungen)

